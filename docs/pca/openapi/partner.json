{
    "openapi": "3.0.1",
    "info": {
        "title": "pca-api",
        "description": "Parque Caribe Aventura API",
        "contact": {
            "name": "Infomedia",
            "url": "https://www.infomediaservice.com/"
        },
        "version": "1.0"
    },
    "servers": [],
    "tags": [
        {
            "name": "Autenticacion",
            "description": "Api para el manejo de acceso y autenticacion a las Apis."
        },
        {
            "name": "Partner",
            "description": "Api integracion con partners en la venta de boleteria."
        }
    ],
    "paths": {
        "/api/ventaMasiva/reservaEmpresa": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Obtener la informacion de la reserva que aun esta sin confirmar.",
                "operationId": "getReservaEmpresa",
                "parameters": [
                    {
                        "name": "idRegistroVentaMasiva",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VMReserva"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Crear reserva para carga masiva.",
                "operationId": "postReservaEmpresa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostReservaEmpresa"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/ventaMasiva/registroVentaMasiva": {
            "post": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Crear un registro de venta masiva.",
                "operationId": "postRegistroVentaMasiva",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRegistroVentaMasiva"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Actualizar un registro de venta masiva.",
                "operationId": "patchRegistroVentaMasiva",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchRegistroVentaMasiva"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/ventaMasiva/recargaRegistroVentaMasiva": {
            "post": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Realizar una recarga a una bolsa de ventas masivas",
                "operationId": "postRecargaRVM",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRecargaRVM"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponseXObject"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/ventaMasiva/confirmarReservaEmpresa": {
            "post": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Confirmar o cancelar la creacion de la reserva masiva usando los datos cargados con el archivo archivo plano.",
                "operationId": "postConfirmarReservaEmpresa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostConfirmarReservaMasiva"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/ventaMasiva/cargarArchivoPlanoReservaEmpresa": {
            "post": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Cargar datos de los visitantes a la reserva sin confirmar utilizando un archivo plano.",
                "operationId": "cargarArchivoPlanoReservaEmpresa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCargarArchivoPlanoReservaEmpresa"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/ventaMasiva/cargaManualReservaEmpresa": {
            "post": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Cargar datos de los visitantes a la reserva sin confirmar.",
                "operationId": "cargaManualReservaEmpresa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCargaManualReservaEmpresa"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/ventaMasiva/asignarFechaReservaCortesia": {
            "post": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Asignar fecha a una reserva de cortesia previamente creada.",
                "operationId": "postAsignarFechaReservaCortesia",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostAsignarFechaReservaCortesia"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/users/roleMenu": {
            "post": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Permitir al rol especificado el acceso a los menus.",
                "operationId": "postRoleMenu",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRoleMenu"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "delete": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Denegar al rol especificado el acceso a los menus.",
                "operationId": "delRoleMenu",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DelRoleMenu"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/users/menu": {
            "post": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Crear un nuevo menu.",
                "operationId": "postMenu",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostMenu"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "delete": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Eliminar un menu.",
                "operationId": "delMenu",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DelMenu"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Actualizar datos de un menu.",
                "operationId": "patchMenu",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchMenu"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/users/account": {
            "get": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Obtener informacion de la cuenta del usuario actual.",
                "operationId": "getAccount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "post": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Registrar una nueva cuenta de usuario para el uso de las Apis.",
                "operationId": "postAccount",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostAccount"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Actualizar datos de una cuenta de usuario.",
                "operationId": "patchAccount",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAccount"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/users/accountEmpresa": {
            "post": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Registrar una nueva cuenta de usuario de empresa para el uso de las Apis.",
                "operationId": "postAccountEmpresa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostAccountEmpresa"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Actualizar datos de una cuenta de usuario de empresa.",
                "operationId": "patchAccountEmpresa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAccountEmpresa"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/transaccion": {
            "post": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Crear una transaccion de pago.",
                "operationId": "postTransaccion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTransaccionTaquilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/taquilla": {
            "post": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Crear una taquilla.",
                "operationId": "postTaquilla",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTaquilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Modificar una taquilla.",
                "operationId": "patchTaquilla",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTaquilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/taquillaImpresora": {
            "post": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Agregar una impresora a una taquilla.",
                "operationId": "postTaquillaImpresora",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTaquillaImpresora"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "delete": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Remover una impresora de taquilla.",
                "operationId": "delTaquillaImpresora",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DelTaquillaImpresora"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/reservaTaquilla": {
            "post": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Crear reserva en la taquilla especificada.",
                "operationId": "postReservaTaquilla",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostReservaTaquilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "delete": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Anular una reserva en la taquilla especificada.",
                "operationId": "delReservaTaquilla",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DelReservaTaquilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Agregar nuevos productos a una reserva existente en la taquilla especificada.",
                "operationId": "patchReservaTaquilla",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReservaTaquilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/metodoPago": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Obtener informacion de los metodos de pago.",
                "operationId": "getMetodoPago",
                "parameters": [
                    {
                        "name": "idMetodoPago",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetodoPago"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Crear un nuevo metodo de pago.",
                "operationId": "postMetodoPago",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostMetodoPago"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Actualizar datos de un metodo de pago.",
                "operationId": "patchMetodoPago",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchMetodoPago"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/divisa": {
            "post": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Crear nueva divisa.",
                "operationId": "postDivisa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDivisa"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Modificar una divisa.",
                "operationId": "patchDivisa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDivisa"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/denominacionDinero": {
            "post": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Crear nueva denominacion de dinero.",
                "operationId": "postDenominacionDinero",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDenominacionDinero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Modificar una denominacion de dinero.",
                "operationId": "patchDenominacionDinero",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDenominacionDinero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/cerrarTaquilla": {
            "post": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Asignar cantidades de cierre y cerrar taquilla.",
                "operationId": "postAbrirTaquilla",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCerrarTaquilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/abrirTaquilla": {
            "post": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Asignar denominaciones de dinero, cantidades de apertura y abrir taquilla.",
                "operationId": "postAbrirTaquilla_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostAbrirTaquilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/siigo/retrySendSiigo": {
            "post": {
                "tags": [
                    "Siigo"
                ],
                "summary": "Reintentar envio de facturacion electronica a Siigo.",
                "operationId": "postRetrySendSiigo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRetrySendSiigo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/siigo/configuration": {
            "get": {
                "tags": [
                    "Siigo"
                ],
                "summary": "Obtener configuracion de integracion con Siigo.",
                "operationId": "getConfiguration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfiguracionSiigo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "post": {
                "tags": [
                    "Siigo"
                ],
                "summary": "Configurar integracion con Siigo.",
                "operationId": "postConfiguration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostConfiguration"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/siigo/associatePaymentTypes": {
            "post": {
                "tags": [
                    "Siigo"
                ],
                "summary": "Asociar tipos de pago de Siigo con metodos de pago de PCA.",
                "operationId": "postAssociatePaymentTypes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostAssociatePaymentTypes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ubicacionRfid": {
            "post": {
                "tags": [
                    "RFID"
                ],
                "summary": "Crear nueva ubicación RFID",
                "operationId": "postUbicacionRfid",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostUbicacionRfid"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "RFID"
                ],
                "summary": "Actualizar ubicación RFID",
                "operationId": "patchUbicacionRfid",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchUbicacionRfid"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/postZonaRfidLoc": {
            "post": {
                "tags": [
                    "RFID"
                ],
                "summary": "Crear nueva zona en el servicio de RFID",
                "operationId": "postZonaRfidLoc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RfidPostZona"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/postDispositivoRfidLoc": {
            "post": {
                "tags": [
                    "RFID"
                ],
                "summary": "Crear nueva dispositivo de lectura en el servicio de RFID",
                "operationId": "postDispositivoLecturaRfidLoc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RfidPostDispositivoLectura"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/postAntenaRfidLoc": {
            "post": {
                "tags": [
                    "RFID"
                ],
                "summary": "Crear nueva antena en el servicio de RFID",
                "operationId": "postAntenaRfidLoc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RfidPostAntena"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/desconectarReader": {
            "post": {
                "tags": [
                    "RFID"
                ],
                "summary": "Desconectar Reader especifico",
                "operationId": "desconnectReader",
                "parameters": [
                    {
                        "name": "idDispositivo",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/rfid/ext/conectarReader": {
            "post": {
                "tags": [
                    "RFID"
                ],
                "summary": "Conectar Reader especifico",
                "operationId": "connectReader",
                "parameters": [
                    {
                        "name": "idDispositivo",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/passwordUser/correoRestablecerPassword": {
            "post": {
                "tags": [
                    "Gestion de recuperacion de contraseña"
                ],
                "summary": "Enviar correo para restablecimiento de contraseña de usuario",
                "operationId": "sendEmailForResetPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostLinkForPassword"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/api/pasarela/transaccion/iniciar": {
            "post": {
                "tags": [
                    "Pasarela"
                ],
                "summary": "Registrar el inicio de una nueva transaccion de pago.",
                "operationId": "postIniciarTransaccionPasarela",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostIniciarTransaccionPasarela"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/pasarela/transaccion/finalizar": {
            "post": {
                "tags": [
                    "Pasarela"
                ],
                "summary": "Registrar la finalizacion de una transaccion de pago.",
                "operationId": "postFinalizarTransaccionPasarela",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostFinalizarTransaccionPasarela"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/partner/reserva": {
            "post": {
                "tags": [
                    "Partner"
                ],
                "summary": "Crear una reserva de boletas para un cliente, registrar visitantes, reservar parqueaderos y lockers.",
                "operationId": "postReserva",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostReservaPartner"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/partner/reservaBoleta": {
            "post": {
                "tags": [
                    "Partner"
                ],
                "summary": "Reserva una boleta para un cliente.",
                "operationId": "postReservaBoleta",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostReservaBoletaPartner"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/partner/partner": {
            "post": {
                "tags": [
                    "Partner"
                ],
                "summary": "Crear nuevo partner.",
                "operationId": "postPartner",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostPartner"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Partner"
                ],
                "summary": "Actualizar datos del partner.",
                "operationId": "patchPartner",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchPartner"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/zona": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Obtener informacion de las zonas de parqueadero.",
                "operationId": "getZona",
                "parameters": [
                    {
                        "name": "idZonaParqueadero",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ZonaParqueadero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Crear una zona de parqueadero.",
                "operationId": "postZona",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostZonaParqueadero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Actualizar datos de una zona de parqueadero.",
                "operationId": "patchZona",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchZonaParqueadero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/transaccion": {
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Crear una transaccion de pago.",
                "operationId": "postTransaccion_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTransaccionParqueadero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/tipoVehiculo": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Obtener informacion de los tipos de vehiculo existentes.",
                "operationId": "getTipoVehiculo",
                "parameters": [
                    {
                        "name": "idTipoVehiculo",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TipoVehiculo"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Crear un tipo de vehiculo.",
                "operationId": "tipoVehiculo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTipoVehiculo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Actualizar datos de un tipo de vehiculo.",
                "operationId": "patchTipoVehiculo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTipoVehiculo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/tipoServicio": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Obtener informacion de tipos de servicio existentes.",
                "operationId": "getTipoServicio",
                "parameters": [
                    {
                        "name": "idTipoServicio",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TipoServicioParqueadero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Crear un tipo de servicio.",
                "operationId": "tipoServicio",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTipoServicioParqueadero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Actualizar datos de un tipo de servicio.",
                "operationId": "patchTipoServicio",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTipoServicioParqueadero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/tipoNovedad": {
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Crear un tipo de novedad.",
                "operationId": "postTipoNovedad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTipoNovedadParqueadero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Actualizar datos de un tipo de novedad.",
                "operationId": "patchTipoNovedad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTipoNovedadParqueadero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/registroVehiculo": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Obtener el registro un vehiculo.",
                "operationId": "getRegistroVehiculo",
                "parameters": [
                    {
                        "name": "idRegistroVehiculo",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistroVehiculo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Registrar la entrada de un vehiculo.",
                "operationId": "postRegistroVehiculo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRegistroVehiculo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/permitirSalidaTemporal": {
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Permitir la salida de un vehiculo de manera temporal.",
                "operationId": "postPermitirSalidaTemporal",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostPermitirSalidaTemporal"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/novedad": {
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Crear una novedad.",
                "operationId": "postNovedad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostNovedadParqueadero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Actualizar datos de una novedad.",
                "operationId": "patchNovedad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchNovedadParqueadero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/novedadActividad": {
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Crear una actividad para una novedad.",
                "operationId": "postNovedadActividad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostNovedadActividad"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Actualizar datos de actividad de la novedad.",
                "operationId": "patchNovedadActividad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchNovedadActividad"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/novedadActividadEvidencia": {
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Registrar una evidencia para una actividad de una novedad.",
                "operationId": "postNovedadActividadEvidencia",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostNovedadActividadEvidencia"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/motivoLiberacionVehiculo": {
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Crear un nuevo motivo de liberacion de vehiculo.",
                "operationId": "postMotivoLiberacionVehiculo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostMotivoLiberacionVehiculo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Modificar un motivo de liberacion de vehiculo.",
                "operationId": "patchMotivoLiberacionVehiculo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchMotivoLiberacionVehiculo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/infoRegistroVehiculoQR": {
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Obtener informacion del registro de vehiculo usando la imagen del codigo QR.",
                "operationId": "infoRegistroVehiculoQR",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InfoRegistroVehiculoQRRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistroVehiculo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/fotoVehiculo": {
            "post": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Agregar una foto al registro de vehiculo.",
                "operationId": "postFotoVehiculo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRegistroVehiculoFoto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/operarioParqueadero/operadorParqueadero": {
            "post": {
                "tags": [
                    "Gestion de operarios parqueadero"
                ],
                "summary": "Crear nuevo operador.",
                "operationId": "postAccountOperadorParqueadero",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostOperadorParqueadero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Gestion de operarios parqueadero"
                ],
                "summary": "Actualizar datos de un operador.",
                "operationId": "patchAccountOperadorParqueadero",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchOperadorParqueadero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/operarioParqueadero/inicioTurno": {
            "post": {
                "tags": [
                    "Gestion de operarios parqueadero"
                ],
                "summary": "Registrar inicio de turno.",
                "operationId": "PostInicioTurno",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/misc/faceValidation": {
            "post": {
                "tags": [
                    "Misc"
                ],
                "summary": "Valida si en una serie de imagenes contiene un rostro.",
                "operationId": "faceValidation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FaceValidationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageBase64Response"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/misc/consultarClienteBeneficio": {
            "post": {
                "tags": [
                    "Misc"
                ],
                "summary": "Consulta si un cliente tiene un beneficio.",
                "operationId": "postClienteTieneBeneficio",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostClienteTieneBeneficio"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CCBResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/lockers/visitanteCodigoAbrirCasillero": {
            "post": {
                "tags": [
                    "Lockers"
                ],
                "summary": "Abrir locker asociado al visitante especificado usando numero de identificacion y codigo.",
                "operationId": "visitanteCodigoAbrirCasillero",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostVisitanteCodigoAbrirCasillero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/lockers/open": {
            "post": {
                "tags": [
                    "Lockers"
                ],
                "summary": "Apertura de locker.",
                "operationId": "open",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostOpenLocker"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/lockers/codigoAbrirCasillero": {
            "post": {
                "tags": [
                    "Lockers"
                ],
                "summary": "Abrir locker reservado.",
                "operationId": "codigoAbrirCasillero",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCodigoAbrirCasillero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/lectorRfidLocker/lectorRfid": {
            "post": {
                "tags": [
                    "Lector rfid lockers"
                ],
                "summary": "Crear nueva lector rfid.",
                "operationId": "postLectorRfid",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostLectorRfid"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Lector rfid lockers"
                ],
                "summary": "Modificar un lector rfid.",
                "operationId": "patchLectorRfid",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchLectorRfid"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/lectorRfidLocker/desconectarMqtt": {
            "post": {
                "tags": [
                    "Lector rfid lockers"
                ],
                "summary": "Desconectar servidor mqtt lectura Rfid lockers.",
                "operationId": "desconectarMqttLector",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/lectorRfidLocker/conectarMqtt": {
            "post": {
                "tags": [
                    "Lector rfid lockers"
                ],
                "summary": "Conectar servidor mqtt lectura Rfid lockers.",
                "operationId": "conectarMqttLector",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/impresora/personal": {
            "post": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Generar impresion de boleta personal",
                "operationId": "printBoletaPersonal",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostImpresionPersonal"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/impresora/manilla": {
            "post": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Generar impresion de manilla RFID",
                "operationId": "printManilla",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostImpresionManilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/impresora/manillaLogo": {
            "post": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Crear un nuevo logo para manilla.",
                "operationId": "postManillaLogo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostManillaLogo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Modificar un logo de manilla",
                "operationId": "patchManillaLogo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchManillaLogo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/impresora/impresora": {
            "post": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Crear nueva impresora.",
                "operationId": "postImpresora",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostImpresora"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Modificar una impresora.",
                "operationId": "patchImpresora",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchImpresora"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/impresora/general": {
            "post": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Generar impresion de boleta general",
                "operationId": "printBoletaGeneral",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostImpresionGeneral"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/visitante": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Obtener informacion registrada de un visitante.",
                "operationId": "getVisitante",
                "parameters": [
                    {
                        "name": "idVisitante",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Registrar un visitante.",
                "operationId": "postVisitante",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostHCVisitante"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "delete": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Eliminar un visitante.",
                "operationId": "delVisitante",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DelHCVisitante"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Actualizar la informacion del visitante.",
                "operationId": "patchVisitante",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchHCVisitante"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/vehicle": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Obtener informacion registrada de un vehiculo.",
                "operationId": "getVehicle",
                "parameters": [
                    {
                        "name": "vehicleId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Registrar un vehiculo.",
                "operationId": "postVehicle",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostHCVehicle"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "delete": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Eliminar un vehiculo.",
                "operationId": "delVehicle",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DelHCVehicle"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/eventRcv": {
            "post": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "operationId": "eventRcv",
                "parameters": [
                    {
                        "name": "Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonNode"
                            },
                            "examples": {
                                "Hikcentral event": {
                                    "description": "Hikcentral event",
                                    "value": {
                                        "method": "OnEventNotify",
                                        "params": {
                                            "sendTime": "2022-02-26T14:28:04-05:00",
                                            "ability": "event_acs",
                                            "events": [
                                                {
                                                    "eventId": "C70E45D5D9854333AAC0F432065B31C5",
                                                    "srcIndex": "111",
                                                    "srcType": "door",
                                                    "srcName": "Door 01",
                                                    "eventType": 196893,
                                                    "status": 0,
                                                    "happenTime": "2022-02-26T01:26:21-05:00",
                                                    "data": {
                                                        "cardNo": "18446744073609551879",
                                                        "personId": "12",
                                                        "personCode": "3152828164",
                                                        "checkInAndOutType": 0,
                                                        "picUri": "Vsm://PHQG#20220224#20220224_132118052.d:243329093:63179",
                                                        "temperatureData": "36.1",
                                                        "temperatureStatus": 1,
                                                        "wearMaskStatus": 1,
                                                        "readerIndexCode": "21",
                                                        "readerName": "Cardreader 01"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/hikcentral/camaraPlacas": {
            "post": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Registrar una camara de placas.",
                "operationId": "postCamaraPlacas",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostHCCamaraPlacas"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Actualizar datos de una camara de placas.",
                "operationId": "patchCamaraPlacas",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchHCCamaraPlacas"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/biometrico": {
            "post": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Registrar un biometrico.",
                "operationId": "postBiometrico",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostHCBiometrico"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Actualizar datos de un biometrico.",
                "operationId": "patchBiometrico",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchHCBiometrico"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/gestionClientes/empresa": {
            "post": {
                "tags": [
                    "Gestion de Clientes"
                ],
                "summary": "Crear una nueva empresa.",
                "operationId": "postEmpresa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostEmpresa"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Gestion de Clientes"
                ],
                "summary": "Actualizar datos de un empresa.",
                "operationId": "patchEmpresa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchEmpresa"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/gestionClientes/cliente": {
            "get": {
                "tags": [
                    "Gestion de Clientes"
                ],
                "summary": "Obtener informacion de los clientes.",
                "operationId": "getCliente",
                "parameters": [
                    {
                        "name": "tipoIdentificacion",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CC",
                                "NIT",
                                "CE",
                                "PAS",
                                "TI",
                                "RC",
                                "DNI"
                            ]
                        }
                    },
                    {
                        "name": "numeroIdentificacion",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Cliente"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Gestion de Clientes"
                ],
                "summary": "Crear un nuevo cliente.",
                "operationId": "postCliente",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCliente"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Gestion de Clientes"
                ],
                "summary": "Actualizar datos de un cliente.",
                "operationId": "patchCliente",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCliente"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/correo/enviarCorreoPersonalizado": {
            "post": {
                "tags": [
                    "Correo"
                ],
                "summary": "Enviar correo electronico personalizado.",
                "operationId": "postEnviarCorreoPersonalizado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EnviarCorreoPersonalizado"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/correo/enviarCorreoCompraReserva": {
            "post": {
                "tags": [
                    "Correo"
                ],
                "summary": "Enviar correo electronico de confirmacion de compra de reserva.",
                "operationId": "postEnviarCompraReserva",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnviarCorreoCompraReserva"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/correo/enviarCorreoBoletaVisitante": {
            "post": {
                "tags": [
                    "Correo"
                ],
                "summary": "Enviar correo electronico de confirmacion de registro de visitantes.",
                "operationId": "postEnviarCorreoBoletaVisitante",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnviarCorreoBoletaVisitante"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/configuracionGeneral/empresa": {
            "get": {
                "tags": [
                    "Configuracion General"
                ],
                "summary": "Obtener configuracion de los datos generales de la empresa.",
                "operationId": "getEmpresa",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfiguracionGeneralEmpresa"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "post": {
                "tags": [
                    "Configuracion General"
                ],
                "summary": "Crear o actualizar configuracion de los datos generales de la empresa.",
                "operationId": "postEmpresa_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostConfiguracionGeneralEmpresa"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/visitante": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de un visitante.",
                "operationId": "getVisitante_1",
                "parameters": [
                    {
                        "name": "idVisitante",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Visitante"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear un visitante para una reserva especifica.",
                "operationId": "postVisitante_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostVisitante"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponseXVisitante"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Actualizar los datos del visitante.",
                "operationId": "patchVisitante_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchVisitante"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/ubicacionCasillero": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear una ubicacion de casilleros.",
                "operationId": "postUbicacionCasillero",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostUbicacionCasillero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Modificar una ubicacion de casilleros.",
                "operationId": "patchUbicacionCasillero",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchUbicacionCasillero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/tipoCasilla": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear un nuevo tipo de casilla.",
                "operationId": "postTipoCasilla",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTipoCasilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Modificar un tipo de casilla.",
                "operationId": "patchTipoCasilla",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTipoCasilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/tipoBoleta": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear tipo de boleta.",
                "operationId": "postTipoBoleta",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTipoBoleta"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Actualizar datos del tipo boleta.",
                "operationId": "patchTipoBoleta",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTipoBoleta"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/servicioAdicional": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de servicios adicionales.",
                "operationId": "getServicioAdicional",
                "parameters": [
                    {
                        "name": "idServicioAdicional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ServicioAdicional"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear un servicio adicional.",
                "operationId": "postServicioAdicional",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostServicioAdicional"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Actualizar datos de un servicio adicional.",
                "operationId": "patchServicioAdicional",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchServicioAdicional"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/reserva": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de una reserva.",
                "operationId": "getReserva",
                "parameters": [
                    {
                        "name": "idReserva",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reserva"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear una reserva.",
                "operationId": "postReserva_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostReserva"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponseXReserva"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "delete": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Anular una reserva.",
                "operationId": "delReserva",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DelReserva"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Agregar nuevos productos a una reserva existente.",
                "operationId": "patchReserva",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReserva"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/reservaProducto": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear una reserva usando productos.",
                "operationId": "postReservaProducto",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostReservaProducto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Agregar nuevos productos a una reserva existente.",
                "operationId": "patchReservaProducto",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReservaProducto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/reservaAlter": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear una reserva (Metodo alternativo con opciones adicionales).",
                "operationId": "postReservaAlter",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostReservaAlter"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponseXReserva"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Agregar nuevos productos a una reserva existente.",
                "operationId": "patchReservaAlter",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReservaAlter"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/redimirReservaServicioAdicional": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Consumir una reserva de servicios adicionales.",
                "operationId": "redimirReservaServicioAdicional",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRedimirReservaServicioAdicional"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/infoBoletaQR": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de una boleta usando la imagen del codigo QR.",
                "operationId": "infoBoletaQR",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InfoBoletaQRRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Boleta"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/disponibilidadBoletas": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear disponibilidad de boletas para la fecha especificada.",
                "operationId": "postDisponibilidadBoletas",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDisponibilidadBoletas"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "delete": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Borrar disponibilidad de boletas para la fecha especificada.",
                "operationId": "postDisponibilidadBoletas_1",
                "parameters": [
                    {
                        "name": "fecha",
                        "in": "query",
                        "description": "dd-MM-yyyy",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/diaSinDisponibilidad": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de la fechas en las cuales no se ofrece disponibilidad para reservas.",
                "operationId": "getDiaSinDisponibilidad",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DiaSinDisponibilidad"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Añadir fechas en las cuales no se ofrece disponibilidad para reservas.",
                "operationId": "postDiaSinDisponibilidad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDiaSinDisponibilidad"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "delete": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Eliminar fechas en las cuales no se ofrece disponibilidad para reservas.",
                "operationId": "delDiaSinDisponibilidad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DelDiaSinDisponibilidad"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/descuento": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear nuevo descuento.",
                "operationId": "postDescuento",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDescuento"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Modificar el descuento.",
                "operationId": "patchDescuento",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDescuento"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/condicionGeneral": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de las condiciones generales.",
                "operationId": "getCondicionGeneral",
                "parameters": [
                    {
                        "name": "idCondicionGeneral",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CondicionGeneral"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear una condicion general.",
                "operationId": "postCondicionGeneral",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCondicionGeneral"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/condicionAcceso": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de las condiciones de acceso a las atracciones.",
                "operationId": "getCondicionAcceso",
                "parameters": [
                    {
                        "name": "idCondicionAcceso",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CondicionAcceso"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear una condicion de acceso a atracciones.",
                "operationId": "postCondicionAcceso",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCondicionAcceso"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Modificar los datos de una condicion de acceso a atracciones.",
                "operationId": "patchCondicionAcceso",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCondicionAcceso"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/comboProductos": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear un combo de productos.",
                "operationId": "postComboProductos",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostComboProductos"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponseXProducto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Modificar un combo de productos.",
                "operationId": "patchComboProductos",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchComboProductos"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponseXProducto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/categoriaServicio": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de las categorias de servicios adicionales.",
                "operationId": "getCategoriaServicio",
                "parameters": [
                    {
                        "name": "idCategoriaServicio",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoriaServicio"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear una categoria para servicios adicionales.",
                "operationId": "postCategoriaServicio",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCategoriaServicio"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Actualizar datos de una categoria de servicio.",
                "operationId": "patchCategoriaServicioEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCategoriaServicio"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/categoriaEstatura": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de las categorias de estatura.",
                "operationId": "getCategoriaEstatura",
                "parameters": [
                    {
                        "name": "idCategoriaEstatura",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoriaEstatura"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear una nueva categoria de estatura.",
                "operationId": "postCategoriaEstatura",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCategoriaEstatura"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Actualizar datos de una categoria de estatura.",
                "operationId": "patchCategoriaEstatura",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCategoriaEstatura"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/categoriaEdad": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de las categorias de edad.",
                "operationId": "getCategoriaEdad",
                "parameters": [
                    {
                        "name": "idCategoriaEdad",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoriaEdad"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear una categoria de edad.",
                "operationId": "postCategoriaEdad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCategoriaEdad"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Actualizar datos de una categoria de edad.",
                "operationId": "patchCategoriaEdad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCategoriaEdad"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/casillero": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear un casillero.",
                "operationId": "postCasillero",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCasillero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Modificar un casillero.",
                "operationId": "patchCasillero",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCasillero"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/casilleroCasillas": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear casillas para un casillero.",
                "operationId": "postCasilleroCasillas",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCasilleroCasillas"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/calcularValorReserva": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Calcular los valores de pago de la reserva.",
                "operationId": "postCalcularValorReserva",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostReserva"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalcularValorReservaResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Calcular los valores de pago de la reserva al agregar nuevos productos.",
                "operationId": "patchCalcularValorReserva",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReserva"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalcularValorReservaResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/calcularFechasDisponibilidad": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Calcular disponbilidadades en los dias del mes para los productos seleccionados.",
                "operationId": "postCalcularFechasDisponibilidad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCalcularFechasDisponibilidad"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/FechasDisponibilidad"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/calcularFechasDisponibilidadProducto": {
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Calcular disponbilidadades en los dias del mes para los productos seleccionados.",
                "operationId": "postCalcularFechasDisponibilidadProducto",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCalcularFechasDisponibilidadProducto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/FechasDisponibilidad"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/atraccion": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de las atracciones.",
                "operationId": "getAtraccion",
                "parameters": [
                    {
                        "name": "idAtraccion",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Atraccion"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Crear una atraccion.",
                "operationId": "postAtraccion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostAtraccion"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Modificar una atraccion.",
                "operationId": "patchAtraccion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAtraccion"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/auth/token": {
            "post": {
                "tags": [
                    "Autenticacion"
                ],
                "summary": "Obtener tokens para autorizar el acceso a las Apis.",
                "operationId": "token",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/api/auth/refreshtoken": {
            "post": {
                "tags": [
                    "Autenticacion"
                ],
                "summary": "Obtener un token de acceso para autorizar el acceso a las Apis usando el token de refresco.",
                "operationId": "refreshtoken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefreshResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/api/ventaMasiva/registroVentaMasivaEstado": {
            "patch": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Cambiar estado de un registro de venta masiva.",
                "operationId": "patchRegistroVentaMasiva_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchRegistroVentaMasivaEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/ventaMasiva/registroVentaMasivaEstadoPago": {
            "patch": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Cambiar estado de pago y fecha limite de pago un registro de venta masiva (Solo cuando es modalidad credito).",
                "operationId": "patchRegistroVentaMasivaEstadoPago",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchRegistroVentaMasivaEstadoPago"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/ventaMasiva/patchVisitantesEmpresa": {
            "patch": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Actualizar datos de visitantes para carga masiva.",
                "operationId": "patchVisitantesEmpresa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchVisitantesEmpresa"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/ventaMasiva/patchVisitanteEmpresa": {
            "patch": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Actualizar datos de un visitante creado por la empresa.",
                "operationId": "patchVisitanteEmpresa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchVisitante"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/users/roleEstado": {
            "patch": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Cambiar estado de un rol.",
                "operationId": "patchRoleEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchRoleEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/users/restablecerClaveUsuario": {
            "patch": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Restablecer la clave de una cuenta",
                "operationId": "patchPasswordUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAccountPassword"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/users/restablecerClavePorUsuario": {
            "patch": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Restablecer la clave de una cuenta por usuario",
                "operationId": "patchPasswordByUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAccountPasswordByUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/users/menuEstado": {
            "patch": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Cambiar estado de un menu.",
                "operationId": "patchMenuEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchMenuEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/users/accountEstado": {
            "patch": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Cambiar estado de una cuenta de usuario.",
                "operationId": "patchAccountEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAccountEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/users/accountEmpresaEstado": {
            "patch": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Cambiar estado de una cuenta de usuario de empresa.",
                "operationId": "patchAccountEmpresaEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAccountEmpresaEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/taquillaEstado": {
            "patch": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Cambiar estado de una taquilla.",
                "operationId": "taquillaEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTaquillaEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/metodoPagoEstado": {
            "patch": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Cambiar estado de un metodo de pago.",
                "operationId": "patchMetodoPagoEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchMetodoPagoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/denominacionDineroEstado": {
            "patch": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Cambiar estado de una denominacion de dinero.",
                "operationId": "patchDenominacionDineroEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDenominacionDineroEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ubicacionRfidEstado": {
            "patch": {
                "tags": [
                    "RFID"
                ],
                "summary": "Cambiar estado de ubicación RFID",
                "operationId": "patchUbicacionRfidEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchUbicacionRfidEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/readersFrecuenciaConnectados": {
            "patch": {
                "tags": [
                    "RFID"
                ],
                "summary": "Modificar la frecuencia con la que se realiza la lectura de readers conectados",
                "operationId": "patchFrecuencyReadersConnect",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchFrecuencyReadersConnect"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultSetFrecuencyReaders"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/readerNumero": {
            "get": {
                "tags": [
                    "RFID"
                ],
                "summary": "Obtener numero interno de un reader",
                "operationId": "getReaderNumber",
                "parameters": [
                    {
                        "name": "idDispositivoLectura",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "RFID"
                ],
                "summary": "Modificar numero interno de reader",
                "operationId": "patchReaderNumber",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReaderNumber"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/readerFrecuencia": {
            "get": {
                "tags": [
                    "RFID"
                ],
                "summary": "Obtener la frecuencia en segundos en la que un lector especifico hace lectura",
                "operationId": "getReaderFrecuency",
                "parameters": [
                    {
                        "name": "idDispositivoLectura",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "RFID"
                ],
                "summary": "Modificar la frecuencia con la que se realiza la lectura en un reader especifico",
                "operationId": "patchFecuencyReader",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchFrecuencyReader"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/patchZonaEstadoRfidLoc": {
            "patch": {
                "tags": [
                    "RFID"
                ],
                "summary": "Editar el estado de una zona en el servicio de RFID",
                "operationId": "patchZonaEstadoRfidLoc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RfidPatchZonaEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/patchZonaERfidLoc": {
            "patch": {
                "tags": [
                    "RFID"
                ],
                "summary": "Editar una zona en el servicio de RFID",
                "operationId": "patchZonaRfidLoc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RfidPatchZona"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/patchDispositivoEstadoRfidLoc": {
            "patch": {
                "tags": [
                    "RFID"
                ],
                "summary": "Editar el estado de un dispositivo de lectura en el servicio de RFID",
                "operationId": "patchDispositivoLecturaEstadoRfidLoc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RfidPatchDispositivoLecturaEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/patchDispositivoERfidLoc": {
            "patch": {
                "tags": [
                    "RFID"
                ],
                "summary": "Editar un dispositivo de lectura en el servicio de RFID",
                "operationId": "patchDispositivoRfidLoc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RfidPatchDispositivoLectura"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/patchAntenaEstadoRfidLoc": {
            "patch": {
                "tags": [
                    "RFID"
                ],
                "summary": "Editar el estado de una antena en el servicio de RFID",
                "operationId": "patchAntenaEstadoRfidLoc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RfidPatchAntenaEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/patchAntenaERfidLoc": {
            "patch": {
                "tags": [
                    "RFID"
                ],
                "summary": "Editar una antena en el servicio de RFID",
                "operationId": "patchAntenaRfidLoc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RfidPatchAntena"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/reportes/reporteProgramado": {
            "patch": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Modificar configuracion de reporte programado.",
                "operationId": "patchReporteProgramado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReporteProgramado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/reportes/reporteProgramadoEstado": {
            "patch": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Modificar estado de reporte programado.",
                "operationId": "patchReporteProgramadoEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReporteProgramadoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/passwordUser/restablecerPassword": {
            "patch": {
                "tags": [
                    "Gestion de recuperacion de contraseña"
                ],
                "summary": "Restablecer clave mediante el uso de token",
                "operationId": "resetPasswordAccount",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAccountPasswordToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/api/partner/partnerEstado": {
            "patch": {
                "tags": [
                    "Partner"
                ],
                "summary": "Cambiar estado del partner.",
                "operationId": "patchPartnerEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchPartnerEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/zonaEstado": {
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Cambiar estado de una zona de parqueadero.",
                "operationId": "patchZona_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchZonaParqueaderoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/tipoVehiculoEstado": {
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Cambiar el estado del tipo de vehiculo.",
                "operationId": "patchTipoVehiculoEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTipoVehiculoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/tipoServicioEstado": {
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Cambiar el estado del tipo de servicio.",
                "operationId": "patchTipoServicioEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTipoServicioParqueaderoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/tipoNovedadEstado": {
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Cambiar el estado del tipo de novedad.",
                "operationId": "patchTipoNovedadEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTipoNovedadParqueaderoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/registroVehiculoSalida": {
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Registra la salida del vehiculo.",
                "operationId": "patchRegistroVehiculoSalida",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchRegistroVehiculoSalida"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/novedadCerrar": {
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Cerrar o anular una novedad.",
                "operationId": "patchNovedadCerrar",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchNovedadCerrar"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/parqueadero/motivoLiberacionVehiculoEstado": {
            "patch": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Cambiar estado de un motivo de liberacion de vehiculo.",
                "operationId": "patchMotivoLiberacionVehiculoEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchMotivoLiberacionVehiculoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/operarioParqueadero/operadorParqueaderoEstado": {
            "patch": {
                "tags": [
                    "Gestion de operarios parqueadero"
                ],
                "summary": "Actualizar estado de un operador.",
                "operationId": "patchAccountOperadorParqueadero_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchOperadorParqueaderoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/operarioParqueadero/finTurno": {
            "patch": {
                "tags": [
                    "Gestion de operarios parqueadero"
                ],
                "summary": "Registrar finalizacion de turno.",
                "operationId": "PatchFinTurno",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/lectorRfidLocker/lectorRfidEstado": {
            "patch": {
                "tags": [
                    "Lector rfid lockers"
                ],
                "summary": "Cambiar estado de un lector rfid.",
                "operationId": "patchLectorRfidEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchLectorRfidEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/impresora/manillaLogoEstado": {
            "patch": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Cambiar estado de un logo para manilla.",
                "operationId": "PatchManillaLogoEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchManillaLogoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/impresora/impresoraEstado": {
            "patch": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Cambiar estado de una impresora.",
                "operationId": "PatchImpresoraEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchImpresoraEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/visitanteFoto": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Obtener foto registrada del visitante en base64.",
                "operationId": "getVisitanteFoto",
                "parameters": [
                    {
                        "name": "idVisitante",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Actualizar la foto del visitante.",
                "operationId": "patchVisitanteFoto",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchHCVisitante"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/camaraPlacasEstado": {
            "patch": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Cambiar estado de una camara de placas.",
                "operationId": "patchCamaraPlacasEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchHCCamaraPlacasEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/biometricoEstado": {
            "patch": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Cambiar estado de un biometrico.",
                "operationId": "patchBiometricoEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchHCBiometricoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/gestionClientes/empresaEstado": {
            "patch": {
                "tags": [
                    "Gestion de Clientes"
                ],
                "summary": "Cambiar estado de un empresa.",
                "operationId": "patchEmpresaEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchEmpresaEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/gestionClientes/clienteEstado": {
            "patch": {
                "tags": [
                    "Gestion de Clientes"
                ],
                "summary": "Cambiar estado de un cliente.",
                "operationId": "patchClienteEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchClienteEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/visitanteRegistroEntrada": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Agregar la informacion del visitante necesaria para el ingreso al parque.",
                "operationId": "patchVisitanteRegistroEntrada",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchVisitanteRegistroEntrada"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/visitanteCasilla": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Asignar una casilla reservada a un visitante.",
                "operationId": "patchVisitanteCasilla",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchVisistanteCasilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/visitanteCasillaAutoasginacion": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Autoasignar una casilla a un visitante si es posible.",
                "operationId": "patchVisitanteCasillaAutoasignacion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAutoasignarCasilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdMessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/ubicacionCasilleroEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado de una ubicacion de casilleros.",
                "operationId": "patchUbicacionCasilleroEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchUbicacionCasilleroEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/tipoCasillaEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado de un tipo de casilla.",
                "operationId": "patchTipoCasillaEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTipoCasillaEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/tipoBoletaEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado del tipo boleta.",
                "operationId": "patchTipoBoletaEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTipoBoletaEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/servicioAdicionalEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado de un servicio adicional.",
                "operationId": "patchServicioAdicionalEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchServicioAdicionalEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/reservaVehiculo": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Asignar vehiculo a una reserva de parqueadero.",
                "operationId": "patchReservaVehiculo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReservaVehiculo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/reservaServicioAdicional": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Asignar un servicio adicional reservado a un visitante.",
                "operationId": "patchReservaServicioAdicional",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReservaServicioAdicional"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/reservaCasillaReasignacion": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Reasignar una casilla reservada.",
                "operationId": "patchReservaCasillaReasignacion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReservaCasillaReasignacion"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/reservaCambiarFecha": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar la fecha de una reserva",
                "operationId": "patchReservaFecha",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchReservaFecha"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/registrarEntradaVisitante": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Registrar entrada del visitante especificado utilizando id de la boleta.",
                "operationId": "patchRegistrarEntradaVisitante",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchRegistrarEntradaVisitante"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/disponibilidadSemana": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de la disponbilidad para reservas en los dias de la semana.",
                "operationId": "getDisponibilidadSemana",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisponibilidadSemana"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            },
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Modificar la disponibilidad para reservas en los dias de la semana.",
                "operationId": "patchDisponibilidadSemana",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDiponibilidadSemana"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/descuentoEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado de un descuento.",
                "operationId": "patchDescuentoEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDescuentoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/condicionAccesoEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar el estado de una condicion de acceso a atracciones.",
                "operationId": "patchCondicionAccesoEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCondicionAccesoEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/comboProductosEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Modificar estado de un combo de productos.",
                "operationId": "patchComboProductos_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchComboProductosEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponseXProducto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/categoriaServicioEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado de una categoria de servicio.",
                "operationId": "patchCategoriaServicioEstado_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCategoriaServicioEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/categoriaEstaturaEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado de una categoria de estatura.",
                "operationId": "patchCategoriaEstaturaEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCategoriaEstaturaEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/categoriaEdadEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado de una categoria de edad.",
                "operationId": "patchCategoriaEdadEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCategoriaEdadEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/casilleroEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado de un casillero.",
                "operationId": "patchCasilleroEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCasilleroEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/casilla": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Modificar una casilla.",
                "operationId": "patchCasilla",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCasilla"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/casillaEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado de una casilla.",
                "operationId": "patchCasilla_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCasillaEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/canalEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado de un canal.",
                "operationId": "patchCanalEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCanalEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/atraccionEstado": {
            "patch": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Cambiar estado de una atraccion.",
                "operationId": "patchAtraccionEstado",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAtraccionEstado"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/ventaMasiva/buscarReservaEmpresa": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Buscar las reservas asociadas con la cuenta de empresa del usuario actual.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarReservaEmpresa",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reserva"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/ventaMasiva/buscarReservaEmpresaPage": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Buscar las reservas asociadas con la cuenta de empresa del usuario actual.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarReservaEmpresaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageReserva"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/ventaMasiva/buscarRegistroVentaMasiva": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Buscar registros de venta masiva usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRegistroVentaMasiva",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RegistroVentaMasiva"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/ventaMasiva/buscarRegistroVentaMasivaPage": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Buscar registros de venta masiva usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRegistroVentaMasivaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRegistroVentaMasiva"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/ventaMasiva/buscarRegistroVentaMasivaEmpresa": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Buscar los registros de venta masiva asociados con la cuenta de empresa del usuario actual.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRegistroVentaMasivaEmpresa",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RegistroVentaMasiva"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/ventaMasiva/buscarRegistroVentaMasivaEmpresaPage": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Buscar los registros de venta masiva asociados con la cuenta de empresa del usuario actual.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRegistroVentaMasivaEmpresaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRegistroVentaMasiva"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/ventaMasiva/buscarRecargaRegistroVentaMasiva": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Buscar los registros de recargas de bolsas en ventas masivas.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRecargaRegistroVentaMasiva",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRecargaRVM"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/ventaMasiva/buscarHistorial": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Buscar las historial de ventas masivas.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarHistorial",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HistorialVentaMasiva"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/ventaMasiva/buscarHistorialPage": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Buscar las historial de ventas masivas.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarHistorialPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageHistorialVentaMasiva"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/ventaMasiva/buscarHistorialEmpresa": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Buscar las historial de ventas masivas con la cuenta de empresa del usuario actual.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarHistorialEmpresa",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HistorialVentaMasiva"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/ventaMasiva/buscarHistorialEmpresaPage": {
            "get": {
                "tags": [
                    "Ventas Masivas"
                ],
                "summary": "Buscar las historial de ventas masivas con la cuenta de empresa del usuario actual.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarHistorialEmpresaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageHistorialVentaMasiva"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/users/buscarRole": {
            "get": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Buscar roles usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRole",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/users/buscarRolePage": {
            "get": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Buscar roles usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRolePage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRole"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/users/buscarMenu": {
            "get": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Buscar menu usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarMenu",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Menu"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/users/buscarMenuPage": {
            "get": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Buscar menu usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarMenuPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMenu"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/users/buscarAccount": {
            "get": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Buscar cuentas de usuario usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarAccount",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Account"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/users/buscarAccountPage": {
            "get": {
                "tags": [
                    "Gestion de Usuarios"
                ],
                "summary": "Buscar cuentas de usuario usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarAccountPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAccount"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/taquilla/enumRecepcionPago": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Obtener recepciones de pago.",
                "operationId": "getEnumRecepcionPago",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "TAQUILLA",
                                            "PASARELA",
                                            "PARTNER",
                                            "PARQUEADERO"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/taquilla/buscarTaquilla": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Buscar taquilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTaquilla",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Taquilla"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/taquilla/buscarTaquillaPage": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Buscar taquilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTaquillaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTaquilla"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/taquilla/buscarRegistroTaquilla": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Buscar registro de taquilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRegistroTaquilla",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RegistroTaquilla"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/taquilla/buscarRegistroTaquillaPage": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Buscar registro de taquilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRegistroTaquillaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRegistroTaquilla"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/taquilla/buscarMetodoPago": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Buscar metodo de pago usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarMetodoPago",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetodoPago"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/taquilla/buscarMetodoPagoPage": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Buscar metodo de pago usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarMetodoPagoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMetodoPago"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/taquilla/buscarEventoTaquilla": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Buscar eventos de taquilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarEventoTaquilla",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageEventoTaquilla"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/taquilla/buscarDivisa": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Buscar divisa usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarDivisa",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Divisa"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/taquilla/buscarDivisaPage": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Buscar divisa usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarDivisaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDivisa"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/taquilla/buscarDenominacionDinero": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Buscar denominacion de dinero usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarDenominacionDinero",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DenominacionDinero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/taquilla/buscarDenominacionDineroPage": {
            "get": {
                "tags": [
                    "Taquilla"
                ],
                "summary": "Buscar denominacion de dinero usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarDenominacionDineroPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDenominacionDinero"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/siigo/taxes": {
            "get": {
                "tags": [
                    "Siigo"
                ],
                "summary": "Obtener impuestos de Siigo.",
                "operationId": "getTaxes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TaxDTO"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/siigo/sellers": {
            "get": {
                "tags": [
                    "Siigo"
                ],
                "summary": "Obtener vendedores de Siigo.",
                "operationId": "getSellers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SellerDTO"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/siigo/products": {
            "get": {
                "tags": [
                    "Siigo"
                ],
                "summary": "Obtener productos de Siigo.",
                "operationId": "getProducts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductDTO"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/siigo/paymentTypes": {
            "get": {
                "tags": [
                    "Siigo"
                ],
                "summary": "Obtener tipos de pago de Siigo.",
                "operationId": "getPaymentTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentTypeDTO"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/siigo/inventories": {
            "get": {
                "tags": [
                    "Siigo"
                ],
                "summary": "Obtener inventarios de Siigo.",
                "operationId": "getInventories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InventoryDTO"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/siigo/documents": {
            "get": {
                "tags": [
                    "Siigo"
                ],
                "summary": "Obtener tipos de documentos de Siigo.",
                "operationId": "getDocuments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DocumentDTO"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/seguimientoVisitanteRfid": {
            "get": {
                "tags": [
                    "RFID"
                ],
                "summary": "Obtener seguimiento de visitante en las ubicaciones de RFID",
                "operationId": "getSeguimientoVisitanteRfid",
                "parameters": [
                    {
                        "name": "fecha",
                        "in": "query",
                        "description": "dd-MM-yyyy",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "tipoIdentificacion",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CC",
                                "NIT",
                                "CE",
                                "PAS",
                                "TI",
                                "RC",
                                "DNI"
                            ]
                        }
                    },
                    {
                        "name": "numeroIdentificacion",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SeguimientoVisitanteRfid"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/rfid/ext/readerEstado": {
            "get": {
                "tags": [
                    "RFID"
                ],
                "summary": "Obtener el estado de un reader",
                "operationId": "getReaderEstado",
                "parameters": [
                    {
                        "name": "direccionIp",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/rfid/ext/listaReaderConectado": {
            "get": {
                "tags": [
                    "RFID"
                ],
                "summary": "Obtener lista de direcciones ip de readers conectados actualmente",
                "operationId": "getReadersConnect",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetReadersConnect"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/rfid/ext/listZonaRfidLoc": {
            "get": {
                "tags": [
                    "RFID"
                ],
                "summary": "Obtener zonas en el servicio de RFID",
                "operationId": "getListZonaRfidLoc",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 20
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "ASC"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageResponseEntityRfid"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/rfid/ext/listUbicacionRfidLoc": {
            "get": {
                "tags": [
                    "RFID"
                ],
                "summary": "Obtener ubicaciones en el servicio de RFID",
                "operationId": "getListUbicacionRfidLoc",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 20
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "ASC"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageResponseEntityRfid"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/rfid/ext/listDispositivosRfidLoc": {
            "get": {
                "tags": [
                    "RFID"
                ],
                "summary": "Obtener dispositivos de lectura en el servicio de RFID",
                "operationId": "getListDispositivoLecturaRfidLoc",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 20
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "ASC"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageResponseEntityRfid"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/rfid/ext/listAntenaRfidLoc": {
            "get": {
                "tags": [
                    "RFID"
                ],
                "summary": "Obtener antenas en el servicio de RFID",
                "operationId": "getListAntenaRfidLoc",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 20
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "ASC"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageResponseEntityRfid"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/rfid/buscarUbicacionRfid": {
            "get": {
                "tags": [
                    "RFID"
                ],
                "summary": "Buscar ubicaciones de RFID usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarUbicacionRfid",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageUbicacionRfidDto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/rfid/aforoUbicacionesRfid": {
            "get": {
                "tags": [
                    "RFID"
                ],
                "summary": "Obtener aforo de personas en las ubicaciones de RFID",
                "operationId": "getAforoUbicacionesRfid",
                "parameters": [
                    {
                        "name": "fechaHora",
                        "in": "query",
                        "description": "dd-MM-yyyy HH:mm:ss",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AforoUbicacionesRfid"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/ventasMasivas/visitantesFechas": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de cantidades de visitantes de ventas masivas en un rango de fechas.",
                "operationId": "reporteVisitantesEmpresaFechas",
                "parameters": [
                    {
                        "name": "idEmpresa",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteVisitantesFechas"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/ventasMasivas/visitantesFechasRegistrados": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de detalle visitantes de ventas masivas registrados en un rango de fechas.",
                "operationId": "reporteVisitantesEmpresaFechasRegistrados",
                "parameters": [
                    {
                        "name": "idEmpresa",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageVisitante"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/ventasMasivas/visitantesFechasIngresados": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de detalle visitantes de ventas masivas ingresados en un rango de fechas.",
                "operationId": "reporteVisitantesEmpresaFechasIngresados",
                "parameters": [
                    {
                        "name": "idEmpresa",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageVisitante"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/ventasMasivas/boletasFechasReservadas": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de detalle boletas reservadas de ventas masivas en un rango de fechas.",
                "operationId": "reporteBoletasVentasMasivas",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "nombreUsuario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "idBolsa",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "idEmpresa",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageReporteBoletasVMEntry"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/taquilla/valorTotalPorMetodoPago": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Resumen de transacciones por medio de pago.",
                "operationId": "taquillaValorTotalMetodoPago",
                "parameters": [
                    {
                        "name": "idRegistroTaquilla",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteTaquillaValorTotalPorMetodoPago"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/reporteReservaBoleta": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de reservas de boletas en un rango de fechas.",
                "operationId": "getReporteReservaBoleta",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteReservaBoleta"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/reporteProductoVentas": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de ventas por producto.",
                "operationId": "reporteProductosVentas",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "idCanal",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteProductosVentas"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/reporteProductoVentasTaquilla": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de ventas por producto en la taquilla especificada.",
                "operationId": "reporteProductoVentasTaquilla",
                "parameters": [
                    {
                        "name": "idRegistroTaquilla",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteProductosVentasTaquilla"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/reporteParqueaderoVentas": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de ventas de parqueadero en un rango de fechas.",
                "operationId": "getReporteParqueaderoVentas",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "placa",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageReporteParqueaderoVentasEntry"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/reporteParqueaderoIngresadosVentas": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de ingresos y ventas por zona de parqueadero en un rango de fechas.",
                "operationId": "reporteParqueaderoIngresadosVentas",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteParqueaderoIngresadosVentas"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/reporteGeneralVentas": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte general de ventas.",
                "operationId": "reporteGeneralVentas",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "idCanal",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteGeneralVentas"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/reporteGeneralTaquilla": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte general de ventas en taquilla.",
                "operationId": "reporteGeneralTaquilla",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteGeneralTaquilla"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/reporteCierreTaquilla": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de cierre de taquilla.",
                "operationId": "reporteCierreTaquilla",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "idTaquilla",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteCierreTaquilla"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/reporteCasillaVentas": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de ventas de casillas.",
                "operationId": "reporteCasillaVentas",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteCasillaVentas"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/reporteCanal": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de canal.",
                "operationId": "reporteCanal",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "idCanal",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteCanal"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/ingresoFechasZonaParqueadero": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de ingresos por zona de parqueadero en un rango de fechas.",
                "operationId": "reporteIngresoParqueadero",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "zonas",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteIngresoParqueadero"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/comprasFechasTipoProducto": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de compras por tipo de producto en un rango de fechas.",
                "operationId": "reporteCompraTipoProducto",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "tiposProducto",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "BOLETA",
                                    "PARQUEADERO",
                                    "CASILLA",
                                    "SERVICIO_ADICIONAL",
                                    "COMBO"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteCompraTipoProducto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/buscarVenta": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Buscar ventas usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarVenta",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageVenta"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/buscarTransaccionPago": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Buscar transacciones de pago usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTransaccionPago",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransaccionPago"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/buscarTransaccionPagoPage": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Buscar transacciones de pago usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTransaccionPagoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTransaccionPago"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/buscarReporteProgramado": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Buscar reportes programados usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarReporteProgramado",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageReporteProgramado"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/buscarDetalleVentaProducto": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Buscar detalles de ventas de productos usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarDetalleVentaProducto",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DetalleVentaProducto"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/buscarDetalleVentaProductoPage": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Buscar detalles de ventas de productos usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarDetalleVentaProductoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDetalleVentaProducto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/boleteria/visitantesFechas": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de cantidades de visitantes en un rango de fechas.",
                "operationId": "reporteVisitantesFechas",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteVisitantesFechas"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/boleteria/visitantesFechasRegistrados": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de detalle visitantes registrados en un rango de fechas.",
                "operationId": "reporteVisitantesFechasRegistrados",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageVisitante"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/boleteria/visitantesFechasIngresados": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de detalle visitantes ingresados en un rango de fechas.",
                "operationId": "reporteVisitanteFechasIngresados",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageVisitante"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/boleteria/consumoBoletas": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Reporte de consumo de boletas en un rango de fechas.",
                "operationId": "reporteConsumoBoletas",
                "parameters": [
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "description": "dd-MM-yyyy",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "description": "dd-MM-yyyy",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReporteConsumoBoletas"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/reportes/boleteria/atraccionVisitantes": {
            "get": {
                "tags": [
                    "Reportes"
                ],
                "summary": "Obtener reporte de visitantes por atraccion.",
                "operationId": "getReporteAtraccionVisitantes",
                "parameters": [
                    {
                        "name": "fecha",
                        "in": "query",
                        "description": "dd-MM-yyyy",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "idAtraccion",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReporteAtraccionVisitantesCount"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/pasarela/transaccion/buscar": {
            "get": {
                "tags": [
                    "Pasarela"
                ],
                "summary": "Buscar transacciones de pago usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTransaccionPasarela",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransaccionPasarela"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/pasarela/transaccion/buscarPage": {
            "get": {
                "tags": [
                    "Pasarela"
                ],
                "summary": "Buscar transacciones de pago usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTransaccionPasarelaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTransaccionPasarela"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/partner/partnerInfo": {
            "get": {
                "tags": [
                    "Partner"
                ],
                "summary": "Obtener informacion del partner de la cuenta de usuario actual.",
                "operationId": "getPartnerInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Partner"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/partner/generarQRBoleta": {
            "get": {
                "tags": [
                    "Partner"
                ],
                "summary": "Generar imagen del codigo QR de la boleta especificada.",
                "operationId": "generarQRBoleta",
                "parameters": [
                    {
                        "name": "idBoleta",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageBase64Response"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/partner/buscarVentaPartner": {
            "get": {
                "tags": [
                    "Partner"
                ],
                "summary": "Buscar ventas realizadas por el partner de la cuenta actual usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarVentaPartner",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageVenta"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/partner/buscarTipoVehiculo": {
            "get": {
                "tags": [
                    "Partner"
                ],
                "summary": "Buscar tipos de vehiculo usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoVehiculo",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTipoVehiculo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/partner/buscarTipoServicio": {
            "get": {
                "tags": [
                    "Partner"
                ],
                "summary": "Buscar tipos de servicio usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoServicio",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTipoServicioParqueadero"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/partner/buscarTipoCasilla": {
            "get": {
                "tags": [
                    "Partner"
                ],
                "summary": "Buscar tipo de casilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoCasilla",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTipoCasilla"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/partner/buscarTipoBoleta": {
            "get": {
                "tags": [
                    "Partner"
                ],
                "summary": "Buscar tipo de boleta usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoBoleta",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTipoBoleta"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/partner/buscarReserva": {
            "get": {
                "tags": [
                    "Partner"
                ],
                "summary": "Buscar reserva usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarReserva",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageReserva"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/partner/buscarPartner": {
            "get": {
                "tags": [
                    "Partner"
                ],
                "summary": "Buscar partner usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarPartner",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePartner"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/identificarTipoPlaca": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Permite identificar el tipo de placa a partir del texto de la placa.",
                "operationId": "identificarTipoPlaca",
                "parameters": [
                    {
                        "name": "placa",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "maxLength": 6,
                            "minLength": 5,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TipoPlacaResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/generarQRRegistroVehiculo": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Generar imagen del codigo QR del registro de vehiculo especificado.",
                "operationId": "generarQRRegistroVehiculo",
                "parameters": [
                    {
                        "name": "idRegistroVehiculo",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageBase64Response"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/disponibilidadTipoServicio": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Obtener informacion de la disponibilidad de tipos de servicio de parqueadero en la fecha especificada.",
                "operationId": "getdisponibilidadTipoServicio",
                "parameters": [
                    {
                        "name": "fecha",
                        "in": "query",
                        "description": "dd-MM-yyyy",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DisponibilidadTipoServicioParqueadero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarZonaParqueadero": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar zonas de parqueadero usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarZonaParqueadero",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ZonaParqueadero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarZonaParqueaderoPage": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar zonas de parqueadero usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarZonaParqueaderoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageZonaParqueadero"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarTipoVehiculo": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar tipos de vehiculo usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoVehiculo_1",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TipoVehiculo"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarTipoVehiculoPage": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar tipos de vehiculo usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoVehiculoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTipoVehiculo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarTipoServicio": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar tipos de servicio usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoServicio_1",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TipoServicioParqueadero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarTipoServicioPage": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar tipos de servicio usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoServicioPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTipoServicioParqueadero"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarTipoNovedad": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar tipos de novedades usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoNovedad",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TipoNovedadParqueadero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarTipoNovedadPage": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar tipos de novedades usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoNovedadPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTipoNovedadParqueadero"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarRegistroVehiculo": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar registros de vehiculo usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRegistroVehiculo",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RegistroVehiculo"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarRegistroVehiculoPage": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar registros de vehiculo usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRegistroVehiculoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRegistroVehiculo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarRegistroLiberacionVehiculo": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar registros de liberacion de vehiculo usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRegistroLiberacionVehiculo",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RegistroLiberacionVehiculo"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarRegistroLiberacionVehiculoPage": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar registros de liberacion de vehiculo usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarRegistroLiberacionVehiculoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRegistroLiberacionVehiculo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarNovedad": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar novedades usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarNovedad",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NovedadParqueadero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarNovedadPage": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar novedades usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarNovedadPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageNovedadParqueadero"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarNovedadActividad": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar actividades de la novedad usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarNovedadActividad",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NovedadActividad"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarNovedadActividadPage": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar actividades de la novedad usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarNovedadActividadPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageNovedadActividad"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarMotivoLiberacionVehiculo": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar motivos de liberacion de vehiculo usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarMotivoLiberacionVehiculo",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MotivoLiberacionVehiculo"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/buscarMotivoLiberacionVehiculoPage": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Buscar motivos de liberacion de vehiculo usando filtros.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarMotivoLiberacionVehiculoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMotivoLiberacionVehiculo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/parqueadero/aforo": {
            "get": {
                "tags": [
                    "Parqueadero"
                ],
                "summary": "Obtener el aforo de vehiculos.",
                "operationId": "getAforo",
                "parameters": [
                    {
                        "name": "idZonaParqueadero",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Aforo"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/operarioParqueadero/registroTurnoConsolidado": {
            "get": {
                "tags": [
                    "Gestion de operarios parqueadero"
                ],
                "summary": "Obtener registro de turno de operario consolidado en rango fecha especifico.",
                "operationId": "postRegistroTurnoConsolidado",
                "parameters": [
                    {
                        "name": "tipoIdentificacion",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CC",
                                "NIT",
                                "CE",
                                "PAS",
                                "TI",
                                "RC",
                                "DNI"
                            ]
                        }
                    },
                    {
                        "name": "numeroIdentificacion",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fechaInicio",
                        "in": "query",
                        "description": "dd-MM-yyyy",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "fechaFin",
                        "in": "query",
                        "description": "dd-MM-yyyy",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 8
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageResponseRegistroTurnoConsolidado"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/operarioParqueadero/buscarRegistroTurnoOperario": {
            "get": {
                "tags": [
                    "Gestion de operarios parqueadero"
                ],
                "summary": "Buscar registro de turnos de operarios.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTurnoOperario",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResponseRegistroTurno"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/operarioParqueadero/buscarRegistroTurnoOperarioPage": {
            "get": {
                "tags": [
                    "Gestion de operarios parqueadero"
                ],
                "summary": "Buscar registro de turnos de operarios.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTurnoOperarioPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageResponseRegistroTurno"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/operarioParqueadero/buscarOperadorParqueadero": {
            "get": {
                "tags": [
                    "Gestion de operarios parqueadero"
                ],
                "summary": "Buscar operador de parqueadero usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarOperadorParqueadero",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperadorParqueadero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/operarioParqueadero/buscarOperadorParqueaderoPage": {
            "get": {
                "tags": [
                    "Gestion de operarios parqueadero"
                ],
                "summary": "Buscar operador de parqueadero usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarOperadorParqueaderoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOperadorParqueadero"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/misc/enumTipoIdentificacion": {
            "get": {
                "tags": [
                    "Misc"
                ],
                "summary": "Obtiene los tipos de identificacion.",
                "operationId": "getEnumTipoIdentificacion",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "CC",
                                            "NIT",
                                            "CE",
                                            "PAS",
                                            "TI",
                                            "RC",
                                            "DNI"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/misc/buscarPais": {
            "get": {
                "tags": [
                    "Misc"
                ],
                "summary": "Buscar paises usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarPais",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Pais"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/misc/buscarEstado": {
            "get": {
                "tags": [
                    "Misc"
                ],
                "summary": "Buscar estados usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarEstado",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Estado"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/misc/buscarCiudad": {
            "get": {
                "tags": [
                    "Misc"
                ],
                "summary": "Buscar ciudades usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCiudad",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Ciudad"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/lockers/listLockers": {
            "get": {
                "tags": [
                    "Lockers"
                ],
                "summary": "Obtener lista de lockers.",
                "operationId": "listLockers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Locker"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/lockers/listBoxes": {
            "get": {
                "tags": [
                    "Lockers"
                ],
                "summary": "Obtener lista de boxes de un casillero.",
                "operationId": "listBoxes",
                "parameters": [
                    {
                        "name": "lockerName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Box"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/lectorRfidLocker/estadoMqtt": {
            "get": {
                "tags": [
                    "Lector rfid lockers"
                ],
                "summary": "Verificar estado de conexion de servidor mqtt lectura Rfid lockers.",
                "operationId": "estadoMqttLector",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/lectorRfidLocker/buscarLectorRfidPage": {
            "get": {
                "tags": [
                    "Lector rfid lockers"
                ],
                "summary": "Buscar lector rfid usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarImpresoraPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageLectorRfid"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/impresora": {
            "get": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Revisar el estado de una impresora.",
                "operationId": "status",
                "parameters": [
                    {
                        "name": "idImpresora",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/impresora/impresoraEstadoSat": {
            "get": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Revisar el estado de una impresora SAT.",
                "operationId": "statusPrinterSat",
                "parameters": [
                    {
                        "name": "idImpresora",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/impresora/buscarManillaLogo": {
            "get": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Buscar logos para manillas.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarManillaLogoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageManillaLogo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/impresora/buscarImpresora": {
            "get": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Buscar impresora usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarImpresora",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Impresora"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/impresora/buscarImpresoraPage": {
            "get": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Buscar impresora usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarImpresoraPage_1",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageImpresora"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/hikcentral/vehicleGroups": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Obtener la lista de grupos de vehiculos.",
                "operationId": "getVehicleGroups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleGroup"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/validarIngreso": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Validar el ingreso de un visitante por hikcentral usando el id de la boleta.",
                "operationId": "getValidarIngreso",
                "parameters": [
                    {
                        "name": "idBoleta",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/hikcentral/privilegeGroups": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Obtener la lista de grupos de privilegios.",
                "operationId": "getPrivilegeGroups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PrivilegeGroup"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/parkingLots": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Obtener lista de parking lots.",
                "operationId": "getParkingLots",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ParkingLot"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/organizations": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Obtener la lista de organizaciones.",
                "operationId": "getOrganizations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Organization"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/eventImageData": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "operationId": "eventImageData",
                "parameters": [
                    {
                        "name": "picUri",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/hikcentral/doors": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Obtener la lista de puertas (Biometricos).",
                "operationId": "getDoors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Door"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/cameras": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Obtener la lista de camaras.",
                "operationId": "getCameras",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Camera"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/hikcentral/buscarHikcentralAccessControlEvent": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Buscar eventos de acceso usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarHikcentralAccessControlEvent",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HikcentralAccessControlEvent"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/hikcentral/buscarHikcentralAccessControlEventPage": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Buscar eventos de acceso usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarHikcentralAccessControlEventPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageHikcentralAccessControlEvent"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/hikcentral/buscarHikcentralANPREvent": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Buscar eventos de ANPR usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarHikcentralANPREvent",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HikcentralANPREvent"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/hikcentral/buscarHikcentralANPREventPage": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Buscar eventos de ANPR usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarHikcentralANPREventPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageHikcentralANPREvent"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/hikcentral/buscarCamaraPlacas": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Buscar camara de placas usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCamaraPlacas",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CamaraPlacasHikvision"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/hikcentral/buscarCamaraPlacasPage": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Buscar camara de placas usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCamaraPlacasPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCamaraPlacasHikvision"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/hikcentral/buscarBiometrico": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Buscar biometrico usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarBiometrico",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BiometricoHikvision"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/hikcentral/buscarBiometricoPage": {
            "get": {
                "tags": [
                    "Gestion de Hikcentral"
                ],
                "summary": "Buscar biometrico usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarBiometricoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageBiometricoHikvision"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/gestionClientes/buscarEmpresa": {
            "get": {
                "tags": [
                    "Gestion de Clientes"
                ],
                "summary": "Buscar empresa usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarEmpresa",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Empresa"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/gestionClientes/buscarEmpresaPage": {
            "get": {
                "tags": [
                    "Gestion de Clientes"
                ],
                "summary": "Buscar empresa usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarEmpresaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageEmpresa"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/facturacion/buscarFacturaVenta": {
            "get": {
                "tags": [
                    "Facturacion"
                ],
                "summary": "Buscar facturas de venta usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarFacturaVenta",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageFacturaVenta"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/contenido/mapa/pcaRfidMapaCalor": {
            "get": {
                "tags": [
                    "Contenido"
                ],
                "summary": "Mostrar mapa de calor de RFID en PCA",
                "operationId": "pcaRfidMapaCalor",
                "parameters": [
                    {
                        "name": "t",
                        "in": "query",
                        "description": "ContentToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/contenido/mapa/pcaObtenerCoordenadas": {
            "get": {
                "tags": [
                    "Contenido"
                ],
                "summary": "Obtener coordenadas en el mapa de PCA",
                "operationId": "pcaObtenerCoordenadas",
                "parameters": [
                    {
                        "name": "t",
                        "in": "query",
                        "description": "ContentToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/contenido/imagen/publico/{id}": {
            "get": {
                "tags": [
                    "Contenido"
                ],
                "summary": "Obtener una imagen publica usando la id.",
                "operationId": "imagePublic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/contenido/imagen/privado/{id}": {
            "get": {
                "tags": [
                    "Contenido"
                ],
                "summary": "Obtener una imagen privada usando la id.",
                "operationId": "imagePrivate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "ContentToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/boleteria/verificarCodigoDescuento": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Verificar la validez de un codigo de descuento.",
                "operationId": "getVerificarCodigoDescuento",
                "parameters": [
                    {
                        "name": "codigo",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerificacionCodigoDescuento"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/validacionBoleta": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Determina si una boleta es valida para el ingreso en el parque.",
                "operationId": "validacionBoleta",
                "parameters": [
                    {
                        "name": "idBoleta",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/generarQRBoleta": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Generar imagen del codigo QR de la boleta especificada.",
                "operationId": "generarQRBoleta_1",
                "parameters": [
                    {
                        "name": "idBoleta",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageBase64Response"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/enumDescuentoTipoProducto": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener tipos de productos a los cuales se les puede aplicar descuentos.",
                "operationId": "getEnumDescuentoTipoProducto",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "BOLETA",
                                            "PARQUEADERO",
                                            "CASILLA",
                                            "SERVICIO_ADICIONAL",
                                            "COMBO"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        },
        "/api/boleteria/disponibilidadTipoCasilla": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de la disponibilidad de tipos de casillas en la fecha especificada.",
                "operationId": "getdisponibilidadTipoCasilla",
                "parameters": [
                    {
                        "name": "fecha",
                        "in": "query",
                        "description": "dd-MM-yyyy",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DisponibilidadTipoCasilla"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/consultarValorReserva": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Consultar los valores de pago de la reserva.",
                "operationId": "getConsultarValorReserva",
                "parameters": [
                    {
                        "name": "idReserva",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConsultarValorReservaResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/casilleros": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de los casilleros.",
                "operationId": "getCasilleros",
                "parameters": [
                    {
                        "name": "idCasillero",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Casillero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarVisitante": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar visitante usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarVisitante",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Visitante"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarVisitantePage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar visitante usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarVisitantePage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageVisitante"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarUbicacionCasillero": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar ubicacion de casilleros usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarUbicacionCasillero",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UbicacionCasillero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarUbicacionCasilleroPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar ubicacion de casilleros usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarUbicacionCasilleroPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageUbicacionCasillero"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarTipoCasilla": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar tipo de casilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoCasilla_1",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TipoCasilla"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarTipoCasillaPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar tipo de casilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoCasillaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTipoCasilla"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarTipoBoleta": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar tipo de boleta usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoBoleta_1",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TipoBoleta"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarTipoBoletaPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar tipo de boleta usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarTipoBoletaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTipoBoleta"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarServicioAdicional": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar servicio adicional usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarServicioAdicional",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ServicioAdicional"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarServicioAdicionalPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar servicio adicional usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarServicioAdicionalPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageServicioAdicional"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarReserva": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar reserva usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarReserva_1",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reserva"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarReservaVehiculo": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar reservas de vehiculo usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarReservaVehiculo",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReservaVehiculo"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarReservaVehiculoPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar reservas de vehiculo usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarReservaVehiculoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageReservaVehiculo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarReservaPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar reserva usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarReservaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageReserva"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarReservaCasilla": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar reservas de casilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarReservaCasilla",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReservaCasilla"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarReservaCasillaPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar reservas de casilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarReservaCasillaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageReservaCasilla"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarProducto": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar producto usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getProducto",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Producto"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarProductoPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar producto usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarProductoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProducto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarDisponibilidadBoletas": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar disponibilidad de boletas usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarDisponibilidadBoletas",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDisponibilidadBoleta"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarDescuento": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar descuento usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarDescuento",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Descuento"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarDescuentoPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar descuento usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarDescuentoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDescuento"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarDescuentoClienteEspecifico": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar clientes a los aplican descuentos con el parametro de clientes especificos usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarDescuentoClienteEspecificoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDescuentoClienteEspecifico"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCondicionAcceso": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar condicion de acceso usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCondicionAcceso",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CondicionAcceso"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCondicionAccesoPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar condicion de acceso usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCondicionAccesoPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCondicionAcceso"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCategoriaServicio": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar categoria de servicio usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCategoriaServicio",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoriaServicio"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCategoriaServicioPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar categoria de servicio usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCategoriaServicioPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCategoriaServicio"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCategoriaEstatura": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar categoria de estatura usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCategoriaEstatura",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoriaEstatura"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCategoriaEstaturaPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar categoria de estatura usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCategoriaEstaturaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCategoriaEstatura"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCategoriaEdad": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar categoria de edad usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCategoriaEdad",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoriaEdad"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCategoriaEdadPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar categoria de edad usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCategoriaEdadPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCategoriaEdad"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCasillero": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar casillero usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCasillero",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Casillero"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCasilleroPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar casillero usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCasilleroPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCasillero"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCasilla": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar casilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCasilla",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Casilla"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCasillaPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar casilla usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCasillaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCasilla"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCanal": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar canal usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCanal",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Canal"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarCanalPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar canal usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarCanalPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCanal"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarBoleta": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar boleta usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarBoleta",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Boleta"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarBoletaPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar boleta usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarBoletaPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageBoleta"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarAtraccion": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar atraccion usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarAtraccion",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Atraccion"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/buscarAtraccionPage": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Buscar atraccion usando filtros de busqueda.",
                "externalDocs": {
                    "description": "Search filter sintax",
                    "url": "https://infomedia-service.github.io/docs/filter/v2/syntax.html"
                },
                "operationId": "getBuscarAtraccionPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAtraccion"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/boleta": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de una boleta.",
                "operationId": "getBoleta",
                "parameters": [
                    {
                        "name": "idBoleta",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Boleta"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/boletaAutorizacionEntrada": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener autorizacion para la entrada de un visitante.",
                "operationId": "getBoletaAutorizacionEntrada",
                "parameters": [
                    {
                        "name": "idBoleta",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/boletaAutorizacionEntradaSinFoto": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener autorizacion para la entrada de un visitante sin foto.",
                "operationId": "getBoletaAutorizacionEntradaSinFoto",
                "parameters": [
                    {
                        "name": "idBoleta",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/aforoCasillas": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de aforo de casillas en la fecha especificada.",
                "operationId": "getAforoCasillas",
                "parameters": [
                    {
                        "name": "fecha",
                        "in": "query",
                        "description": "dd-MM-yyyy",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "idUbicacion",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "idCasillero",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "idCasilla",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "estado",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DISPONIBLE",
                                "RESERVADO",
                                "INACTIVO"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AforoCasillas"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/boleteria/aforoBoletas": {
            "get": {
                "tags": [
                    "Boleteria"
                ],
                "summary": "Obtener informacion de la disponibilidad de boletas en la fecha especificada.",
                "operationId": "getAforoBoletas",
                "parameters": [
                    {
                        "name": "fecha",
                        "in": "query",
                        "description": "dd-MM-yyyy",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "idCanal",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AforoBoleta"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ]
            }
        },
        "/api/impresora/impresoraBuffer": {
            "delete": {
                "tags": [
                    "Impresora"
                ],
                "summary": "Limpiar cola de impresion de una impresora",
                "operationId": "delColaImpresion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DelImpresoraBuffer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT_Token": []
                    }
                ],
                "parameters": []
            }
        }
    },
    "components": {
        "schemas": {
            "PRReservaProducto": {
                "required": [
                    "cantidad",
                    "idProducto"
                ],
                "type": "object",
                "properties": {
                    "idProducto": {
                        "type": "string",
                        "description": "id del producto",
                        "format": "uuid",
                        "example": "56c9d9b6-dd37-4c39-a4b8-f4763121638c"
                    },
                    "cantidad": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "cantidad del producto a reservar",
                        "format": "int32",
                        "example": 3
                    }
                },
                "description": "lista de productos y cantidades a reservar"
            },
            "PostReservaEmpresa": {
                "required": [
                    "idRegistroVentaMasiva",
                    "productos"
                ],
                "type": "object",
                "properties": {
                    "idRegistroVentaMasiva": {
                        "type": "integer",
                        "description": "id del paquete de venta masiva",
                        "format": "int64",
                        "example": 1
                    },
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de la reserva",
                        "example": "26-04-2024"
                    },
                    "email": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "maxLength": 255,
                            "minLength": 5,
                            "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                            "type": "string",
                            "description": "direcciones de correo electronico para envio de reservas",
                            "example": "example@email.com"
                        }
                    },
                    "productos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaProducto"
                        }
                    }
                }
            },
            "MessageResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "mesaje de respuesta",
                        "example": "respuesta"
                    }
                }
            },
            "PRVMProducto": {
                "required": [
                    "idProducto"
                ],
                "type": "object",
                "properties": {
                    "idProducto": {
                        "type": "string",
                        "description": "id del producto",
                        "format": "uuid"
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor del producto (solo si el paquete es tipo DINERO)",
                        "format": "double",
                        "example": 30000
                    },
                    "cantidad": {
                        "type": "integer",
                        "description": "cantidad del producto (solo si el paquete es tipo CANTIDAD)",
                        "format": "int32",
                        "example": 500
                    }
                },
                "description": "productos ofrecidos en la venta masiva"
            },
            "PostRegistroVentaMasiva": {
                "required": [
                    "idEmpresa",
                    "modalidadPago",
                    "nombre",
                    "productos",
                    "tipoPaquete",
                    "tipoVenta"
                ],
                "type": "object",
                "properties": {
                    "idEmpresa": {
                        "type": "string",
                        "description": "id de la empresa",
                        "format": "uuid",
                        "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre de paquete de venta masiva",
                        "example": "Bolsa A"
                    },
                    "tipoPaquete": {
                        "type": "string",
                        "description": "tipo de paquete de venta masiva",
                        "example": "CANTIDAD",
                        "enum": [
                            "CANTIDAD",
                            "DINERO"
                        ]
                    },
                    "tipoVenta": {
                        "type": "string",
                        "description": "tipo de venta masiva",
                        "example": "CORPORATIVA",
                        "enum": [
                            "CORPORATIVA",
                            "CORTESIA"
                        ]
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor de la venta masiva",
                        "format": "double",
                        "example": 70000000
                    },
                    "modalidadPago": {
                        "type": "string",
                        "description": "Modalidad de pago de la venta masiva",
                        "example": "CONTADO",
                        "enum": [
                            "CREDITO",
                            "CONTADO"
                        ]
                    },
                    "fechaLimitePago": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "Fecha limite de pago (Solo si es en modalidad CREDITO)",
                        "example": "26-04-2024"
                    },
                    "productos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRVMProducto"
                        }
                    }
                }
            },
            "IdMessageResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "mesaje de respuesta",
                        "example": "respuesta"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del objeto",
                        "example": "1"
                    }
                }
            },
            "PostRecargaRVM": {
                "required": [
                    "idRegistroVentaMasiva"
                ],
                "type": "object",
                "properties": {
                    "idRegistroVentaMasiva": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "dineroRecarga": {
                        "maximum": 999999999.99,
                        "exclusiveMaximum": false,
                        "minimum": 1,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double"
                    },
                    "productosRecarga": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostRecargaRVMProducto"
                        }
                    }
                }
            },
            "PostRecargaRVMProducto": {
                "required": [
                    "cantidadRecarga",
                    "idProducto"
                ],
                "type": "object",
                "properties": {
                    "idProducto": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "cantidadRecarga": {
                        "maximum": 999999,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "IdMessageResponseXObject": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "mesaje de respuesta",
                        "example": "respuesta"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del objeto",
                        "example": "1"
                    }
                }
            },
            "PostConfirmarReservaMasiva": {
                "required": [
                    "confirmar",
                    "idRegistroVentaMasiva"
                ],
                "type": "object",
                "properties": {
                    "idRegistroVentaMasiva": {
                        "type": "integer",
                        "description": "id del paquete de venta masiva",
                        "format": "int64",
                        "example": 1
                    },
                    "confirmar": {
                        "type": "boolean",
                        "description": "confirmar o cancelar la reserva (confirmar/true, cancelar/false)",
                        "example": false
                    }
                }
            },
            "PostCargarArchivoPlanoReservaEmpresa": {
                "required": [
                    "base64Data",
                    "extension",
                    "idRegistroVentaMasiva"
                ],
                "type": "object",
                "properties": {
                    "idRegistroVentaMasiva": {
                        "type": "integer",
                        "description": "id del paquete de venta masiva",
                        "format": "int64",
                        "example": 1
                    },
                    "extension": {
                        "type": "string",
                        "description": "extension del archivo",
                        "example": "XLSX",
                        "enum": [
                            "CSV",
                            "XLSX"
                        ]
                    },
                    "base64Data": {
                        "type": "string",
                        "description": "datos binarios del archivo en base64",
                        "example": "UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAAALAAAAdGVzdC50eHRVVAkAA2NvbnRlbnQvZXBvY2g"
                    }
                }
            },
            "PostCargaManualReservaEmpresa": {
                "required": [
                    "idRegistroVentaMasiva",
                    "visitantes"
                ],
                "type": "object",
                "properties": {
                    "idRegistroVentaMasiva": {
                        "type": "integer",
                        "description": "id del paquete de venta masiva",
                        "format": "int64",
                        "example": 1
                    },
                    "visitantes": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VMVisitante"
                        }
                    }
                }
            },
            "VMVisitante": {
                "required": [
                    "apellido",
                    "email",
                    "genero",
                    "idTipoBoleta",
                    "nombre",
                    "numeroIdentificacion",
                    "telefono",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "idTipoBoleta": {
                        "type": "integer",
                        "description": "id del tipo de boleta que se asociara al visitante",
                        "format": "int64",
                        "example": 1
                    },
                    "idTipoCasilla": {
                        "type": "integer",
                        "description": "id del tipo de casilla que se asociara al visitante",
                        "format": "int64",
                        "example": 1
                    },
                    "idTipoServicioParqueadero": {
                        "type": "integer",
                        "description": "id del tipo de parqueadero que se asociara al visitante",
                        "format": "int64",
                        "example": 1
                    },
                    "idTipoVehiculo": {
                        "type": "integer",
                        "description": "id del tipo de vehiculo del visitante",
                        "format": "int64",
                        "example": 1
                    },
                    "placa": {
                        "pattern": "^(?:[A-Z]{3}\\d{3}|[A-Z]{2}\\d{4}|[A-Z]\\d{4}|[A-Z]\\d{5}|[A-Z]{3}\\d{2}[A-Z])$",
                        "type": "string",
                        "description": "placa del vehiculo del visitante",
                        "example": "AAA111"
                    },
                    "idServiciosAdicionales": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "description": "lista de ids de servicios adicionales que se asociaran al visitante",
                            "format": "int64"
                        }
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del visitante",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del visitante",
                        "example": "1111222333"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del visitante",
                        "example": "nombre 1"
                    },
                    "apellido": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "apellido del visitante",
                        "example": "apellido 1"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del visitante",
                        "example": "example@email.com"
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono del visitante",
                        "example": "3005557777"
                    },
                    "paisProcedencia": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "pais de procedencia del visitante",
                        "example": "Colombia"
                    },
                    "ciudadProcedencia": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "ciudad de procedencia del visitante",
                        "example": "Bogota"
                    },
                    "fechaNacimiento": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de nacimiento del visitante",
                        "example": "26-04-2024"
                    },
                    "estaturaMayor145": {
                        "type": "boolean",
                        "description": "estatura del visitante en centimetros es mayor a 145cm si/no",
                        "example": true
                    },
                    "genero": {
                        "type": "string",
                        "description": "genero del visitante",
                        "example": "M",
                        "enum": [
                            "M",
                            "F",
                            "O"
                        ]
                    }
                },
                "description": "lista de visitantes a cargar"
            },
            "PostAsignarFechaReservaCortesia": {
                "required": [
                    "fecha",
                    "idReserva"
                ],
                "type": "object",
                "properties": {
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "58189a1d-aadc-4280-83c7-2fa48003062d"
                    },
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de la reserva",
                        "example": "26-04-2024"
                    }
                }
            },
            "PostRoleMenu": {
                "required": [
                    "idRole",
                    "menus"
                ],
                "type": "object",
                "properties": {
                    "idRole": {
                        "type": "integer",
                        "description": "id del rol",
                        "format": "int64",
                        "example": 1
                    },
                    "menus": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "description": "id los menus",
                            "format": "int64",
                            "example": 1
                        }
                    }
                }
            },
            "PostImagen": {
                "required": [
                    "datosBase64",
                    "formato"
                ],
                "type": "object",
                "properties": {
                    "formato": {
                        "type": "string",
                        "description": "extension del formato de la imagen",
                        "example": "JPG",
                        "enum": [
                            "JPG",
                            "PNG"
                        ]
                    },
                    "datosBase64": {
                        "maxLength": 2147483647,
                        "minLength": 100,
                        "type": "string",
                        "description": "datos binarios de la imagen en base64",
                        "example": "/9j/4AAQSkZJRgABAgAAAQABAAD/7QCEUGhvdG9zaG9wIDMuMAA4QklNBAQAAAAAAGccAigAYkZCTUQwMTAwMGFhNjAzMDAwMDY5MD"
                    }
                }
            },
            "PostMenu": {
                "required": [
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idMenuPadre": {
                        "type": "integer",
                        "description": "id del menu padre de este menu",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del menu",
                        "example": "Menu A"
                    },
                    "menuInfo": {
                        "$ref": "#/components/schemas/PostMenuInfo"
                    }
                }
            },
            "PostMenuInfo": {
                "required": [
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "maxLength": 150,
                        "minLength": 1,
                        "type": "string",
                        "description": "url del menu",
                        "example": "/menuA/index.html"
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PostAccount": {
                "required": [
                    "password",
                    "role",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "maxLength": 30,
                        "minLength": 4,
                        "pattern": "^[A-Za-z0-9]+(?:[_-][A-Za-z0-9]+)*$",
                        "type": "string",
                        "description": "nombre de usuario",
                        "example": "admin"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del usuario",
                        "example": "example@email.com"
                    },
                    "role": {
                        "pattern": "^[A-Za-z]+(_[A-Za-z]+){0,2}$",
                        "type": "string",
                        "description": "nombre del rol",
                        "example": "ADMIN"
                    },
                    "password": {
                        "maxLength": 30,
                        "minLength": 6,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#¿=])[A-Za-z\\d@$!%*?&#¿=]{6,}$",
                        "type": "string",
                        "description": "contraseña",
                        "example": "Abcd1234$"
                    }
                }
            },
            "PostAccountEmpresa": {
                "required": [
                    "idEmpresa",
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "idEmpresa": {
                        "type": "string",
                        "description": "id de la empresa",
                        "format": "uuid",
                        "example": "fed60f91-cf36-4df5-8f4a-6ae81eaba453"
                    },
                    "username": {
                        "maxLength": 30,
                        "minLength": 4,
                        "pattern": "^[A-Za-z0-9]+(?:[_-][A-Za-z0-9]+)*$",
                        "type": "string",
                        "description": "nombre de usuario",
                        "example": "admin"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del usuario",
                        "example": "example@email.com"
                    },
                    "password": {
                        "maxLength": 30,
                        "minLength": 6,
                        "type": "string",
                        "description": "contraseña",
                        "example": "abcd1234"
                    }
                }
            },
            "PTTransaccionCambio": {
                "required": [
                    "cambio",
                    "efectivo"
                ],
                "type": "object",
                "properties": {
                    "efectivo": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "efectivo recibido",
                        "format": "double",
                        "example": 50000
                    },
                    "cambio": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "cambio entregado",
                        "format": "double",
                        "example": 10000
                    }
                },
                "description": "efectivo recibido y cambio entregado"
            },
            "PTTransaccionTaquilla": {
                "required": [
                    "idMetodoPago",
                    "valor"
                ],
                "type": "object",
                "properties": {
                    "idMetodoPago": {
                        "type": "integer",
                        "description": "id del metodo de pago",
                        "format": "int64",
                        "example": 1
                    },
                    "valor": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "valor del pago",
                        "format": "double",
                        "example": 50000
                    },
                    "numeroAutorizacion": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "numero de autorizacion del pago",
                        "example": "00032325"
                    },
                    "ultimosDigitos": {
                        "maxLength": 4,
                        "minLength": 1,
                        "type": "string",
                        "description": "ultimos digitos del metodo de pago",
                        "example": "4488"
                    },
                    "cambioEfectivo": {
                        "$ref": "#/components/schemas/PTTransaccionCambio"
                    }
                },
                "description": "lista de pagos"
            },
            "PostTransaccionTaquilla": {
                "required": [
                    "idReserva",
                    "pagos",
                    "requiereFactura"
                ],
                "type": "object",
                "properties": {
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "1e9a3afa-210e-4ae7-8544-50a4e26478cd"
                    },
                    "idTaquilla": {
                        "type": "integer",
                        "description": "id de la taquilla en la cual se realiza el pago",
                        "format": "int64",
                        "example": 1
                    },
                    "requiereFactura": {
                        "type": "boolean",
                        "description": "cliente requiere factura electronica (si/no)",
                        "example": false
                    },
                    "pagos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PTTransaccionTaquilla"
                        }
                    }
                }
            },
            "PostTaquilla": {
                "required": [
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre de la taquilla",
                        "example": "Taquilla A"
                    }
                }
            },
            "PostTaquillaImpresora": {
                "required": [
                    "idImpresora",
                    "idTaquilla"
                ],
                "type": "object",
                "properties": {
                    "idTaquilla": {
                        "type": "integer",
                        "description": "id de la taquilla",
                        "format": "int64",
                        "example": 1
                    },
                    "idImpresora": {
                        "type": "integer",
                        "description": "id de la impresora",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PRReservaBoletas": {
                "required": [
                    "cantidad",
                    "idTipoBoleta"
                ],
                "type": "object",
                "properties": {
                    "idTipoBoleta": {
                        "type": "integer",
                        "description": "id del tipo de boleta",
                        "format": "int64",
                        "example": 1
                    },
                    "cantidad": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "cantidad de boletas a reservar",
                        "format": "int32",
                        "example": 3
                    }
                }
            },
            "PRReservaCasillas": {
                "required": [
                    "cantidad",
                    "idTipoCasilla"
                ],
                "type": "object",
                "properties": {
                    "idTipoCasilla": {
                        "type": "integer",
                        "description": "id del tipo de casilla",
                        "format": "int64",
                        "example": 1
                    },
                    "cantidad": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "cantidad de casillas a reservar",
                        "format": "int32",
                        "example": 3
                    }
                }
            },
            "PRReservaCombo": {
                "required": [
                    "cantidad",
                    "idCombo"
                ],
                "type": "object",
                "properties": {
                    "idCombo": {
                        "type": "string",
                        "description": "id del combo",
                        "format": "uuid",
                        "example": "3889e90c-3597-4b7c-b7ad-d99ceb6b7dbf"
                    },
                    "cantidad": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "cantidad del combo a reservar",
                        "format": "int32",
                        "example": 2
                    }
                }
            },
            "PRReservaServicioAdicional": {
                "required": [
                    "cantidad",
                    "idServicioAdicional"
                ],
                "type": "object",
                "properties": {
                    "idServicioAdicional": {
                        "type": "integer",
                        "description": "id del servicio adicional",
                        "format": "int64",
                        "example": 1
                    },
                    "cantidad": {
                        "type": "integer",
                        "description": "cantidad a reservar del servicio adicional",
                        "format": "int32",
                        "example": 3
                    }
                }
            },
            "PRReservaVehiculoAlter": {
                "required": [
                    "idTipoServicio",
                    "idTipoVehiculo",
                    "placa"
                ],
                "type": "object",
                "properties": {
                    "idTipoServicio": {
                        "type": "integer",
                        "description": "id del tipo de servicio de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "idTipoVehiculo": {
                        "type": "integer",
                        "description": "id del tipo de vehiculo del vehiculo que se asignara a la reserva de vehiculo",
                        "format": "int64",
                        "example": 1
                    },
                    "placa": {
                        "pattern": "^(?:[A-Z]{3}\\d{3}|[A-Z]{2}\\d{4}|[A-Z]\\d{4}|[A-Z]\\d{5}|[A-Z]{3}\\d{2}[A-Z])$",
                        "type": "string",
                        "description": "placa del vehiculo que se asignara a la reserva de vehiculo",
                        "example": "AAA111"
                    }
                }
            },
            "PostReservaTaquilla": {
                "required": [
                    "idTaquilla",
                    "numeroIdentificacion",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de la reserva",
                        "example": "26-04-2024"
                    },
                    "idTaquilla": {
                        "type": "integer",
                        "description": "id de la taquilla en la cual se realiza la reserva",
                        "format": "int64",
                        "example": 1
                    },
                    "boletas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaBoletas"
                        }
                    },
                    "casillas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCasillas"
                        }
                    },
                    "vehiculos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaVehiculoAlter"
                        }
                    },
                    "serviciosAdicionales": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaServicioAdicional"
                        }
                    },
                    "combos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCombo"
                        }
                    },
                    "codigoDescuento": {
                        "pattern": "^[A-Z0-9]{10}$",
                        "type": "string",
                        "description": "codigo de descuento",
                        "example": "D1AHF524A1"
                    },
                    "clienteEsVisitante": {
                        "type": "boolean",
                        "description": "si es verdadero se llena los datos de todos los visitantes con los datos del cliente",
                        "example": false
                    }
                }
            },
            "PostMetodoPago": {
                "required": [
                    "cuentaDestino",
                    "nombre",
                    "recepcionesPago",
                    "requiereDatosAutorizacion",
                    "tipo"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre del metodo de pago",
                        "example": "Metodo de pago A"
                    },
                    "cuentaDestino": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "cuenta destino a la cual se transfieren los pago realizados",
                        "example": "1111444499997777"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de metodo de pago",
                        "example": "ELECTRONICO",
                        "enum": [
                            "EFECTIVO",
                            "ELECTRONICO",
                            "DATAFONO"
                        ]
                    },
                    "requiereDatosAutorizacion": {
                        "type": "boolean",
                        "description": "el metodo de pago requiere datos de autorizacion (si/no)",
                        "example": false
                    },
                    "recepcionesPago": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "maxLength": 2147483647,
                            "minLength": 1,
                            "type": "string",
                            "description": "lista de recepciones de pago asociadas al metodo de pago",
                            "enum": [
                                "TAQUILLA",
                                "PASARELA",
                                "PARTNER",
                                "PARQUEADERO"
                            ]
                        }
                    }
                }
            },
            "PostDivisa": {
                "required": [
                    "abreviatura",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 4,
                        "type": "string",
                        "description": "nombre de la divisa",
                        "example": "Peso colombiano"
                    },
                    "abreviatura": {
                        "maxLength": 3,
                        "minLength": 3,
                        "pattern": "^[A-Z]{3}$",
                        "type": "string",
                        "description": "abreviatura de la divisa",
                        "example": "COP"
                    }
                }
            },
            "PostDenominacionDinero": {
                "required": [
                    "denominacion",
                    "idDivisa",
                    "tipo"
                ],
                "type": "object",
                "properties": {
                    "tipo": {
                        "type": "string",
                        "description": "tipo de denominacion de dinero",
                        "example": "MONEDA",
                        "enum": [
                            "BILLETE",
                            "MONEDA"
                        ]
                    },
                    "denominacion": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "valor de la denominacion de dinero",
                        "format": "double",
                        "example": 5000
                    },
                    "idDivisa": {
                        "type": "integer",
                        "description": "id de la divisa",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PCTDineroTaquilla": {
                "required": [
                    "cantidadCierre",
                    "idDenominacionDinero"
                ],
                "type": "object",
                "properties": {
                    "idDenominacionDinero": {
                        "type": "integer",
                        "description": "id de la denominacion de dinero",
                        "format": "int64",
                        "example": 1
                    },
                    "cantidadCierre": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "cantidad de la denominacion para cierre",
                        "format": "int32",
                        "example": 10
                    }
                },
                "description": "registro de dinero para cierre"
            },
            "PCTSaldoFinalMetodoPago": {
                "required": [
                    "idMetodoPago",
                    "saldoFinal"
                ],
                "type": "object",
                "properties": {
                    "idMetodoPago": {
                        "type": "integer",
                        "description": "id del metodo de pago",
                        "format": "int64",
                        "example": 1
                    },
                    "saldoFinal": {
                        "minimum": 0,
                        "type": "number",
                        "description": "saldo final del metodo de pago",
                        "format": "double",
                        "example": 10000
                    }
                },
                "description": "saldo final por metodo de pago"
            },
            "PostCerrarTaquilla": {
                "required": [
                    "idTaquilla",
                    "registroDinero"
                ],
                "type": "object",
                "properties": {
                    "idTaquilla": {
                        "type": "integer",
                        "description": "id de la taquilla",
                        "format": "int64",
                        "example": 1
                    },
                    "registroDinero": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PCTDineroTaquilla"
                        }
                    },
                    "saldoFinalMetodosPago": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PCTSaldoFinalMetodoPago"
                        }
                    },
                    "observaciones": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "PATDineroTaquilla": {
                "required": [
                    "cantidadApertura",
                    "idDenominacionDinero"
                ],
                "type": "object",
                "properties": {
                    "idDenominacionDinero": {
                        "type": "integer",
                        "description": "id de la denominacion de dinero",
                        "format": "int64"
                    },
                    "cantidadApertura": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "cantidad de la denominacion para apertura",
                        "format": "int32"
                    }
                },
                "description": "registro de dinero para apertura"
            },
            "PostAbrirTaquilla": {
                "required": [
                    "idAccountUsuario",
                    "idTaquilla",
                    "registroDinero",
                    "saldoInicialCaja"
                ],
                "type": "object",
                "properties": {
                    "idTaquilla": {
                        "type": "integer",
                        "description": "id de la taquilla",
                        "format": "int64",
                        "example": 1
                    },
                    "idAccountUsuario": {
                        "type": "string",
                        "description": "id de la cuenta de usuario que abre la taquilla",
                        "format": "uuid",
                        "example": "ee843a56-41d2-4e3a-b899-51fc5cb218ee"
                    },
                    "saldoInicialCaja": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "saldo inicial de caja para la apertura de taquilla",
                        "format": "double",
                        "example": 50000
                    },
                    "registroDinero": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PATDineroTaquilla"
                        }
                    }
                }
            },
            "PostRetrySendSiigo": {
                "required": [
                    "idFacturaVenta"
                ],
                "type": "object",
                "properties": {
                    "idFacturaVenta": {
                        "type": "integer",
                        "description": "Id de la factura de venta",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PostConfiguration": {
                "required": [
                    "documentId",
                    "inventoryId",
                    "ivaTaxId",
                    "maxSellValuePost",
                    "sellerId",
                    "sendDian",
                    "sendEmail",
                    "sendSiigo"
                ],
                "type": "object",
                "properties": {
                    "documentId": {
                        "type": "integer",
                        "description": "Id del documento de facturacion",
                        "format": "int32",
                        "example": 24446
                    },
                    "sellerId": {
                        "type": "integer",
                        "description": "id del vendedor",
                        "format": "int32",
                        "example": 629
                    },
                    "inventoryId": {
                        "type": "integer",
                        "description": "id del inventario",
                        "format": "int32",
                        "example": 1253
                    },
                    "sendDian": {
                        "type": "boolean",
                        "description": "enviar a la dian (si/no)",
                        "example": false
                    },
                    "sendEmail": {
                        "type": "boolean",
                        "description": "enviar correo al comprador (si/no)",
                        "example": false
                    },
                    "sendSiigo": {
                        "type": "boolean",
                        "description": "enviar a siigo (si/no)",
                        "example": false
                    },
                    "ivaTaxId": {
                        "type": "integer",
                        "description": "id del impuesto iva",
                        "format": "int32",
                        "example": 13156
                    },
                    "maxSellValuePost": {
                        "type": "number",
                        "description": "valor maximo de venta post",
                        "format": "double",
                        "example": 212060
                    }
                }
            },
            "PostAssociatePaymentTypes": {
                "required": [
                    "idMetodoPago"
                ],
                "type": "object",
                "properties": {
                    "idMetodoPago": {
                        "type": "integer",
                        "description": "Id del metodo de pago en pca",
                        "format": "int64",
                        "example": 1
                    },
                    "idPaymentType": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "Id del payment type en siigo",
                        "example": "5638"
                    }
                }
            },
            "PostUbicacionRfid": {
                "required": [
                    "aforoMax",
                    "idZona",
                    "lat",
                    "lng",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "Nombre de la ubicación",
                        "example": "Atraccion X"
                    },
                    "lat": {
                        "type": "number",
                        "description": "Latitud de la ubicación",
                        "format": "double",
                        "example": 4.123456
                    },
                    "lng": {
                        "type": "number",
                        "description": "Longitud de la ubicación",
                        "format": "double",
                        "example": -74.123456
                    },
                    "aforoMax": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Aforo máximo de la ubicación",
                        "format": "int32",
                        "example": 300
                    },
                    "idZona": {
                        "type": "string",
                        "description": "id de la zona",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    }
                }
            },
            "RfidPostZona": {
                "required": [
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la zona",
                        "example": "zona1"
                    }
                }
            },
            "RfidPostDispositivoLectura": {
                "required": [
                    "direccionIp",
                    "direccionMac",
                    "idUbicacion",
                    "marca",
                    "nombre",
                    "referencia"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del dispositivo de lectura",
                        "example": "nombre1"
                    },
                    "referencia": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "referencia del dispositivo",
                        "example": "Referenia1"
                    },
                    "direccionMac": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "diraccion MAC unica del dispositivo",
                        "example": "abcde1234"
                    },
                    "direccionIp": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "direccion ip del dispositivo",
                        "example": "127.0.0.1"
                    },
                    "marca": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "marca del dispositivo",
                        "example": "Speedwork"
                    },
                    "tipoDispositivo": {
                        "type": "string",
                        "description": "tipo de dispositivo",
                        "example": "READER"
                    },
                    "idUbicacion": {
                        "type": "string",
                        "description": "id de la ubicacion",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    }
                }
            },
            "RfidPostAntena": {
                "required": [
                    "canal",
                    "idDispositivoLectura",
                    "idUbicacionDispositivo",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la antena",
                        "example": "antena1"
                    },
                    "canal": {
                        "maximum": 16,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Canal",
                        "format": "int32",
                        "example": 1
                    },
                    "idUbicacionDispositivo": {
                        "type": "string",
                        "description": "id de la ubicacion",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    },
                    "idDispositivoLectura": {
                        "type": "integer",
                        "description": "id del dispositivo de lectura",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PostLinkForPassword": {
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del destinatario",
                        "example": "example@email.com"
                    },
                    "urlName": {
                        "type": "string",
                        "enum": [
                            "EMPRESA",
                            "TAQUILLA"
                        ]
                    }
                }
            },
            "PostIniciarTransaccionPasarela": {
                "required": [
                    "id",
                    "idMetodoPago",
                    "idReserva"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "id de la transaccion",
                        "example": "1c8356b0e24442b2acc579cf1ae4d8145"
                    },
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva que esta asociada con esta transaccion",
                        "format": "uuid",
                        "example": "dd23c94b-7d25-4247-a74a-f15ccd1de435"
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor de la transaccion",
                        "format": "double",
                        "example": 90000
                    },
                    "origen": {
                        "type": "string",
                        "description": "origen de la transaccion",
                        "example": "Origen X"
                    },
                    "ip": {
                        "type": "string",
                        "description": "direccion ip del cliente asociado con esta transaccion",
                        "example": "192.168.1.1"
                    },
                    "idMetodoPago": {
                        "type": "integer",
                        "description": "id del metodo de pago",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PostFinalizarTransaccionPasarela": {
                "required": [
                    "estado",
                    "id",
                    "requiereFactura"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "id de la transaccion transaccion",
                        "example": "1c8356b0e24442b2acc579cf1ae4d8145"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la transaccion al finalizar (No puede ser EN_PROCESO)",
                        "example": "APROBADO",
                        "enum": [
                            "APROBADO",
                            "EN_PROCESO",
                            "CANCELADO",
                            "RECHAZADO"
                        ]
                    },
                    "requiereFactura": {
                        "type": "boolean",
                        "description": "cliente requiere factura electronica (si/no)",
                        "example": false
                    },
                    "jsonResultado": {
                        "type": "string",
                        "description": "json del resultado de la transaccion",
                        "example": "{...}"
                    }
                }
            },
            "PRBPBoleta": {
                "required": [
                    "idTipoBoleta",
                    "visitante"
                ],
                "type": "object",
                "properties": {
                    "idTipoBoleta": {
                        "type": "integer",
                        "description": "id del tipo de boleta",
                        "format": "int64",
                        "example": 1
                    },
                    "visitante": {
                        "$ref": "#/components/schemas/PostVisitante"
                    },
                    "idTipoCasilla": {
                        "type": "integer",
                        "description": "id de la casilla (null si no aplica)",
                        "format": "int64",
                        "example": 1
                    }
                },
                "description": "boletas a reservar"
            },
            "PRBPVehiculo": {
                "required": [
                    "idTipoServicio",
                    "idTipoVehiculo",
                    "placa"
                ],
                "type": "object",
                "properties": {
                    "idTipoServicio": {
                        "type": "integer",
                        "description": "id del tipo de servicio de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "idTipoVehiculo": {
                        "type": "integer",
                        "description": "id del tipo de vehiculo del vehiculo que se asignara a la reserva de vehiculo",
                        "format": "int64",
                        "example": 1
                    },
                    "placa": {
                        "pattern": "^(?:[A-Z]{3}\\d{3}|[A-Z]{2}\\d{4}|[A-Z]\\d{4}|[A-Z]\\d{5}|[A-Z]{3}\\d{2}[A-Z])$",
                        "type": "string",
                        "description": "placa del vehiculo que se asignara a la reserva de vehiculo",
                        "example": "AAA111"
                    }
                },
                "description": "espacio del parqueadero a reservar"
            },
            "PostReservaPartner": {
                "required": [
                    "apellido",
                    "boletas",
                    "email",
                    "fecha",
                    "nombre",
                    "numeroIdentificacion",
                    "telefono",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de la reserva",
                        "example": "26-04-2024"
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111222333"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del cliente",
                        "example": "Juan"
                    },
                    "apellido": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "apellido del cliente",
                        "example": "Perez"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del cliente",
                        "example": "example@email.com"
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono del cliente",
                        "example": "3005557777"
                    },
                    "enviarCorreos": {
                        "type": "boolean",
                        "description": "indica si se deben enviar correos de confirmacion (Correo de compra de reserva, correo boleta codigo QR)",
                        "example": false
                    },
                    "boletas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRBPBoleta"
                        }
                    },
                    "vehiculos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRBPVehiculo"
                        }
                    }
                }
            },
            "PostVisitante": {
                "required": [
                    "apellido",
                    "genero",
                    "nombre",
                    "numeroIdentificacion",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del visitante",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del visitante",
                        "example": "1111222333"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del visitante",
                        "example": "nombre 1"
                    },
                    "apellido": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "apellido del visitante",
                        "example": "apellido 1"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del visitante",
                        "example": "example@email.com"
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono del visitante",
                        "example": "3005557777"
                    },
                    "paisProcedencia": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "pais de procedencia del visitante",
                        "example": "Colombia"
                    },
                    "ciudadProcedencia": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "ciudad de procedencia del visitante",
                        "example": "Bogota"
                    },
                    "fechaNacimiento": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de nacimiento del visitante",
                        "example": "26-04-2024"
                    },
                    "estaturaMayor145": {
                        "type": "boolean",
                        "description": "estatura del visitante en centimetros es mayor a 145cm si/no",
                        "example": true
                    },
                    "genero": {
                        "type": "string",
                        "description": "genero del visitante",
                        "example": "M",
                        "enum": [
                            "M",
                            "F",
                            "O"
                        ]
                    }
                },
                "description": "datos del visitante"
            },
            "PostReservaBoletaPartner": {
                "required": [
                    "apellido",
                    "email",
                    "nombre",
                    "numeroIdentificacion",
                    "tarifa",
                    "telefono",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de la reserva",
                        "example": "26-04-2024"
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111222333"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del cliente",
                        "example": "Juan"
                    },
                    "apellido": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "apellido del cliente",
                        "example": "Perez"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del cliente",
                        "example": "example@email.com"
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono del cliente",
                        "example": "3005557777"
                    },
                    "tarifa": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "tipo de boleta vendido (Adulto o Niño)",
                        "example": "Adulto"
                    },
                    "barcode": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "codigo de barras de la boleta",
                        "example": "1234567890123456789012"
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "id de la orden",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PostAccountPartner": {
                "required": [
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "maxLength": 30,
                        "minLength": 4,
                        "type": "string",
                        "description": "nombre de usuario",
                        "example": "admin"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "type": "string",
                        "description": "direccion de correo electronico del usuario",
                        "example": "example@email.com"
                    },
                    "password": {
                        "maxLength": 30,
                        "minLength": 6,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#¿=])[A-Za-z\\d@$!%*?&#¿=]{6,}$",
                        "type": "string",
                        "description": "contraseña",
                        "example": "Abcd1234$"
                    }
                }
            },
            "PostPartner": {
                "required": [
                    "nombre",
                    "usuario"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "usuario": {
                        "$ref": "#/components/schemas/PostAccountPartner"
                    },
                    "tarifas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostTarifaPartner"
                        }
                    }
                }
            },
            "PostTarifaPartner": {
                "required": [
                    "idTipoBoleta"
                ],
                "type": "object",
                "properties": {
                    "idTipoBoleta": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombre": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "PostZonaParqueadero": {
                "required": [
                    "aforoMax",
                    "idTipoServicio",
                    "listaBlancaSalidaIndexCode",
                    "listaNegraEntradaIndexCode",
                    "nombre",
                    "parkingLotIndexCode",
                    "reservaMax",
                    "tiempoMaxSalidaSinCobro"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la zona de parqueadero",
                        "example": "Zona de paqueadero A"
                    },
                    "idTipoServicio": {
                        "type": "integer",
                        "description": "id del tipo de servicio que se ofrece en esta zona de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "aforoMax": {
                        "type": "integer",
                        "description": "cantidad maxima de vehiculos que permite esta zona de parqueaderos",
                        "format": "int32",
                        "example": 40
                    },
                    "tiempoMaxSalidaSinCobro": {
                        "type": "integer",
                        "description": "tiempo maximo de estadia en el parqueadero sin cobro en minutos",
                        "format": "int32",
                        "example": 15
                    },
                    "reservaMax": {
                        "type": "integer",
                        "description": "cantidad maxima reservable de espacios en la zona de parqueadero por dia",
                        "format": "int32",
                        "example": 30
                    },
                    "parkingLotIndexCode": {
                        "type": "string",
                        "description": "id del parqueadero de hikcentral",
                        "example": "1"
                    },
                    "listaNegraEntradaIndexCode": {
                        "type": "string",
                        "description": "id del grupo de vehiculos de la lista de negra de entrada",
                        "example": "1"
                    },
                    "listaBlancaSalidaIndexCode": {
                        "type": "string",
                        "description": "id del grupo de vehiculos de la lista de blanca de salida",
                        "example": "1"
                    }
                }
            },
            "PTTransaccionParqueadero": {
                "required": [
                    "idMetodoPago",
                    "valor"
                ],
                "type": "object",
                "properties": {
                    "idMetodoPago": {
                        "type": "integer",
                        "description": "id del metodo de pago",
                        "format": "int64",
                        "example": 1
                    },
                    "valor": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "valor del pago",
                        "format": "double",
                        "example": 50000
                    },
                    "numeroAutorizacion": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "numero de autorizacion del pago",
                        "example": "00032325"
                    },
                    "ultimosDigitos": {
                        "maxLength": 4,
                        "minLength": 1,
                        "type": "string",
                        "description": "ultimos digitos del metodo de pago",
                        "example": "4488"
                    },
                    "cambioEfectivo": {
                        "$ref": "#/components/schemas/PTTransaccionCambio"
                    }
                },
                "description": "lista de pagos"
            },
            "PostTransaccionParqueadero": {
                "required": [
                    "idRegistroVehiculo",
                    "numeroIdentificacionCliente",
                    "pagos",
                    "requiereFactura",
                    "tipoIdentificacionCliente"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacionCliente": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacionCliente": {
                        "maxLength": 20,
                        "minLength": 0,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111222333"
                    },
                    "idRegistroVehiculo": {
                        "type": "string",
                        "description": "id del registro de vehiculo",
                        "format": "uuid",
                        "example": "1e9a3afa-210e-4ae7-8544-50a4e26478cd"
                    },
                    "requiereFactura": {
                        "type": "boolean",
                        "description": "cliente requiere factura electronica (si/no)",
                        "example": false
                    },
                    "pagos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PTTransaccionParqueadero"
                        }
                    }
                }
            },
            "PostTipoVehiculo": {
                "required": [
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del tipo de vehiculo",
                        "example": "Tipo de vehiculo A"
                    }
                }
            },
            "PostTipoServicioParqueadero": {
                "required": [
                    "descripcion",
                    "nombre",
                    "precio",
                    "tiposVehiculo"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del tipo de servicio de parqueadero",
                        "example": "Tipo de servicio X"
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 3,
                        "type": "string",
                        "description": "descripcion del tipo de servicio de parqueadero",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "precio": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "precio del tipo de servicio de parqueadero",
                        "format": "double",
                        "example": 30000
                    },
                    "tiposVehiculo": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "description": "id de tipos de vehiculo que permite el servicio",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PostTipoNovedadParqueadero": {
                "required": [
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del tipo de novedad",
                        "example": "Tipo de novedad A"
                    }
                }
            },
            "PostRegistroVehiculo": {
                "required": [
                    "idZonaParqueadero",
                    "placa"
                ],
                "type": "object",
                "properties": {
                    "placa": {
                        "maxLength": 8,
                        "minLength": 5,
                        "pattern": "^(?:[A-Z]{3}\\d{3}|[A-Z]{2}\\d{4}|[A-Z]\\d{4}|[A-Z]\\d{5}|[A-Z]{3}\\d{2}[A-Z])$",
                        "type": "string",
                        "description": "placa del vehiculo",
                        "example": "AAA111"
                    },
                    "foto": {
                        "$ref": "#/components/schemas/PostImagen"
                    },
                    "idZonaParqueadero": {
                        "type": "integer",
                        "description": "id de la zona de parqueadero",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PostPermitirSalidaTemporal": {
                "required": [
                    "idMotivoLiberacionVehiculo",
                    "idZonaParqueadero",
                    "placa"
                ],
                "type": "object",
                "properties": {
                    "idZonaParqueadero": {
                        "type": "integer",
                        "description": "id de la zona de parqueadero de la cual se le permitira la salida al vehiculo",
                        "format": "int64",
                        "example": 1
                    },
                    "placa": {
                        "maxLength": 8,
                        "minLength": 6,
                        "type": "string",
                        "description": "placa del vehiculo al cual se le permitira la salida",
                        "example": "AAA111"
                    },
                    "idMotivoLiberacionVehiculo": {
                        "type": "integer",
                        "description": "id del motivo por el cual se le permitira la salida al vehiculo",
                        "format": "int64",
                        "example": 1
                    },
                    "observaciones": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string",
                        "description": "observaciones de la liberacion del vehiculo",
                        "example": "El vehiculo se le permitio la salida por que..."
                    }
                }
            },
            "PostNovedadParqueadero": {
                "required": [
                    "descripcion",
                    "fechaHoraReporte",
                    "idTipoNovedad",
                    "nombre",
                    "numeroIdentificacion",
                    "placa",
                    "propietario",
                    "telefono",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "idTipoNovedad": {
                        "type": "integer",
                        "description": "id del tipo de novedad",
                        "format": "int64",
                        "example": 1
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string",
                        "description": "descripcion de la novedad",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "fechaHoraReporte": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha y hora de reporte de la novedad",
                        "example": "26-04-2024 16:33:02"
                    },
                    "placa": {
                        "maxLength": 8,
                        "minLength": 5,
                        "pattern": "^(?:[A-Z]{3}\\d{3}|[A-Z]{2}\\d{4}|[A-Z]\\d{4}|[A-Z]\\d{5}|[A-Z]{3}\\d{2}[A-Z])$",
                        "type": "string",
                        "description": "placa del vehiculo implicado en la novedad",
                        "example": "AAA111"
                    },
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva implicada en la novedad",
                        "format": "uuid",
                        "example": "927e1835-9699-49d1-83d3-f08830878ebc"
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion de quien reporta",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion de quien reporta",
                        "example": "1111111111"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de quien reporta",
                        "example": "Nombre 1"
                    },
                    "propietario": {
                        "type": "boolean",
                        "description": "quien reporta es el propietario (si/no)",
                        "example": false
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono de quien reporta",
                        "example": "3005557777"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico de quien reporta",
                        "example": "example@email.com"
                    }
                }
            },
            "PostNovedadActividad": {
                "required": [
                    "descripcion",
                    "fechaHoraFin",
                    "fechaHoraInicio",
                    "idNovedad"
                ],
                "type": "object",
                "properties": {
                    "idNovedad": {
                        "type": "integer",
                        "description": "id de la novedad",
                        "format": "int64",
                        "example": 1
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string",
                        "description": "descripcion de la actividad",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "fechaHoraInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha y hora de inicio de la actividad",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fechaHoraFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha y hora de finalizacion de la actividad",
                        "example": "26-04-2024 16:33:02"
                    }
                }
            },
            "PostNovedadActividadEvidencia": {
                "required": [
                    "idActividad",
                    "imagen"
                ],
                "type": "object",
                "properties": {
                    "idActividad": {
                        "type": "integer",
                        "description": "id de la actividad",
                        "format": "int64",
                        "example": 1
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PostMotivoLiberacionVehiculo": {
                "required": [
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 120,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre del motivo de liberacion del vehiculo",
                        "example": "Motivo 1"
                    }
                }
            },
            "InfoRegistroVehiculoQRRequest": {
                "required": [
                    "imageBase64",
                    "mimeType"
                ],
                "type": "object",
                "properties": {
                    "mimeType": {
                        "type": "string",
                        "description": "mimetype de la imagen",
                        "example": "image/jpeg"
                    },
                    "imageBase64": {
                        "type": "string",
                        "description": "datos binarios de la imagen en base64",
                        "example": "/9j/4AAQSkZJRgABAgAAAQABAAD/7QCEUGhvdG9zaG9wIDMuMAA4QklNBAQAAAAAAGccAigAYkZCTUQwMTAwMGFhNjAzMDAwMDY5MD"
                    }
                }
            },
            "CamaraPlacasHikvision": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la camara de placas",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la camara de placas",
                        "example": "Camara de placas 1"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de uso de la camara de placas",
                        "enum": [
                            "ENTRADA",
                            "SALIDA"
                        ]
                    },
                    "zonaParqueadero": {
                        "$ref": "#/components/schemas/ZonaParqueadero"
                    },
                    "cameraIndexCode": {
                        "type": "string",
                        "description": "id la camara de placas de hikcentral",
                        "example": "1"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado la camara de placas de hikcentral",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "EspacioParqueaderoDia": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "zonaParqueadero": {
                        "$ref": "#/components/schemas/ZonaParqueadero"
                    },
                    "vehiculo": {
                        "$ref": "#/components/schemas/Vehiculo"
                    },
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "estadoPago": {
                        "type": "string",
                        "enum": [
                            "APROBADO",
                            "PENDIENTE",
                            "ANULADO"
                        ]
                    }
                }
            },
            "Producto": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del producto",
                        "format": "uuid",
                        "example": "6c872a0f-4e21-460a-ae3d-2f3994f73dc6"
                    },
                    "codigo": {
                        "type": "string",
                        "description": "codigo del producto",
                        "example": "111555"
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del producto",
                        "example": "Producto A"
                    },
                    "descripcion": {
                        "type": "string",
                        "description": "descripcion del producto",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "valorVariable": {
                        "type": "boolean",
                        "description": "indica si el valor del producto es variable",
                        "example": false
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor del producto",
                        "format": "double",
                        "example": 30000
                    },
                    "imagenId": {
                        "type": "string",
                        "description": "id de la imagen del producto del producto",
                        "format": "uuid",
                        "example": "644176ac-41f6-48ac-a4ef-3db5eb09fbf9"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de producto",
                        "enum": [
                            "BOLETA",
                            "PARQUEADERO",
                            "CASILLA",
                            "SERVICIO_ADICIONAL",
                            "COMBO"
                        ]
                    },
                    "productosCombo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductoCombo"
                        }
                    },
                    "ventaFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de inicio de venta del producto",
                        "example": "26-04-2024"
                    },
                    "ventaFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de fin de venta del producto",
                        "example": "26-04-2024"
                    },
                    "consumoFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de inicio de consumo del producto",
                        "example": "26-04-2024"
                    },
                    "consumoFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de fin de consumo del producto",
                        "example": "26-04-2024"
                    },
                    "excepcionesDiasSemana": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductoExcepcionesDiasSemana"
                        }
                    },
                    "activacionDesactivacionAutomatica": {
                        "type": "boolean",
                        "description": "indica si la activacion y desactivacion del producto es automatica",
                        "example": false
                    }
                },
                "description": "detalle del producto"
            },
            "ProductoCombo": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "producto": {
                        "$ref": "#/components/schemas/Producto"
                    },
                    "cantidad": {
                        "type": "integer",
                        "description": "cantidad del producto en el combo",
                        "format": "int32",
                        "example": 1
                    }
                },
                "description": "productos del combo"
            },
            "ProductoExcepcionesDiasSemana": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "id de la excepcion de dias de la semana",
                        "format": "int64",
                        "example": 1
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de excepcion de dias de la semana",
                        "enum": [
                            "VENTA",
                            "CONSUMO"
                        ]
                    },
                    "lunes": {
                        "type": "boolean",
                        "description": "indica si la excepcion aplica para el dia lunes",
                        "example": false
                    },
                    "martes": {
                        "type": "boolean",
                        "description": "indica si la excepcion aplica para el dia martes",
                        "example": false
                    },
                    "miercoles": {
                        "type": "boolean",
                        "description": "indica si la excepcion aplica para el dia miercoles",
                        "example": false
                    },
                    "jueves": {
                        "type": "boolean",
                        "description": "indica si la excepcion aplica para el dia jueves",
                        "example": false
                    },
                    "viernes": {
                        "type": "boolean",
                        "description": "indica si la excepcion aplica para el dia viernes",
                        "example": false
                    },
                    "sabado": {
                        "type": "boolean",
                        "description": "indica si la excepcion aplica para el dia sabado",
                        "example": false
                    },
                    "domingo": {
                        "type": "boolean",
                        "description": "indica si la excepcion aplica para el dia domingo",
                        "example": false
                    }
                },
                "description": "excepciones de dias de la semana del producto"
            },
            "RegistroVehiculo": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del registro de vehiculo",
                        "format": "uuid",
                        "example": "ae73f57e-b053-4b50-bfa0-84966ac3d790"
                    },
                    "zonaParqueadero": {
                        "$ref": "#/components/schemas/ZonaParqueadero"
                    },
                    "espacioParqueaderoDia": {
                        "$ref": "#/components/schemas/EspacioParqueaderoDia"
                    },
                    "fechaEntrada": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de entrada del vehiculo",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fechaSalida": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de salida del vehiculo",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fotoVehiculoImagenId": {
                        "type": "string",
                        "description": "id de la imagen del vehiculo",
                        "format": "uuid",
                        "example": "5d209cff-fbb7-46f2-8d1f-51a8b03183ac"
                    }
                }
            },
            "TipoServicioParqueadero": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del tipo de servicio de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "producto": {
                        "$ref": "#/components/schemas/Producto"
                    },
                    "tiposVehiculo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TipoVehiculo"
                        }
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del tipo de servicio de parqueadero",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "TipoVehiculo": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del tipo de vehiculo",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del tipo de vehiculo",
                        "example": "AUTOMOVIL"
                    }
                },
                "description": "tipo de vehiculo"
            },
            "Vehiculo": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del vehiculo",
                        "format": "uuid",
                        "example": "a90fbb8e-6318-4d52-812b-2b98018460c5"
                    },
                    "placa": {
                        "type": "string",
                        "description": "placa del vehiculo",
                        "example": "AAA111"
                    },
                    "tipo": {
                        "$ref": "#/components/schemas/TipoVehiculo"
                    },
                    "hikcentralVehicleId": {
                        "type": "string",
                        "description": "id del vehiculo en hikcentral",
                        "example": "1"
                    }
                }
            },
            "ZonaParqueadero": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la zona de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la zona de parqueadero",
                        "example": "Zona de paqueadero A"
                    },
                    "aforoMax": {
                        "type": "integer",
                        "description": "cantidad maxima de vehiculos que permite esta zona de parqueaderos",
                        "format": "int32",
                        "example": 40
                    },
                    "reservaMax": {
                        "type": "integer",
                        "description": "cantidad maxima reservable de espacios en la zona de parqueadero por dia",
                        "format": "int32",
                        "example": 30
                    },
                    "tiempoMaxSalidaSinCobro": {
                        "type": "integer",
                        "description": "tiempo maximo de estadia en el parqueadero sin cobro en minutos",
                        "format": "int32",
                        "example": 15
                    },
                    "tipoServicio": {
                        "$ref": "#/components/schemas/TipoServicioParqueadero"
                    },
                    "camarasPlaca": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CamaraPlacasHikvision"
                        }
                    },
                    "parkingLotIndexCode": {
                        "type": "string",
                        "description": "id del parqueadero de hikcentral",
                        "example": "1"
                    },
                    "listaNegraEntradaIndexCode": {
                        "type": "string",
                        "description": "id del grupo de vehiculos de la lista de negra de entrada",
                        "example": "1"
                    },
                    "listaBlancaSalidaIndexCode": {
                        "type": "string",
                        "description": "id del grupo de vehiculos de la lista de blanca de salida",
                        "example": "1"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la zona de parqueadero",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PostRegistroVehiculoFoto": {
                "required": [
                    "foto",
                    "idZonaParqueadero",
                    "placa"
                ],
                "type": "object",
                "properties": {
                    "placa": {
                        "maxLength": 8,
                        "minLength": 5,
                        "pattern": "^(?:[A-Z]{3}\\d{3}|[A-Z]{2}\\d{4}|[A-Z]\\d{4}|[A-Z]\\d{5}|[A-Z]{3}\\d{2}[A-Z])$",
                        "type": "string",
                        "description": "placa del vehiculo",
                        "example": "AAA111"
                    },
                    "idZonaParqueadero": {
                        "type": "integer",
                        "description": "id de la zona de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "foto": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PostAccountOperadorParqueadero": {
                "required": [
                    "email",
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "maxLength": 30,
                        "minLength": 4,
                        "type": "string",
                        "description": "nombre de usuario",
                        "example": "admin"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del operador",
                        "example": "example@email.com"
                    },
                    "password": {
                        "maxLength": 30,
                        "minLength": 6,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#¿=])[A-Za-z\\d@$!%*?&#¿=]{6,}$",
                        "type": "string",
                        "description": "contraseña",
                        "example": "Abcd1234$"
                    }
                }
            },
            "PostOperadorParqueadero": {
                "required": [
                    "account",
                    "nombre",
                    "numeroDocumento",
                    "telefono"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del operador",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroDocumento": {
                        "maxLength": 20,
                        "minLength": 6,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de documento",
                        "example": "123456789"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del operador",
                        "example": "nombre1"
                    },
                    "telefono": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "telefono del operador",
                        "example": "3005557777"
                    },
                    "account": {
                        "$ref": "#/components/schemas/PostAccountOperadorParqueadero"
                    }
                }
            },
            "FaceValidationRequest": {
                "type": "object",
                "properties": {
                    "imagesBase64": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ImageBase64Response": {
                "type": "object",
                "properties": {
                    "mimeType": {
                        "type": "string",
                        "description": "mimetype de la imagen"
                    },
                    "imageBase64": {
                        "type": "string",
                        "description": "datos binarios de la imagen en base64",
                        "example": "/9j/4AAQSkZJRgABAgAAAQABAAD/7QCEUGhvdG9zaG9wIDMuMAA4QklNBAQAAAAAAGccAigAYkZCTUQwMTAwMGFhNjAzMDAwMDY5MD"
                    }
                }
            },
            "PostClienteTieneBeneficio": {
                "required": [
                    "numeroIdentificacion",
                    "tipo",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipo": {
                        "type": "string",
                        "description": "tipo de beneficio",
                        "example": "MOVISTAR_BLACK",
                        "enum": [
                            "MOVISTAR_BLACK"
                        ]
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion",
                        "example": "1111222333"
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono",
                        "example": "3005557777"
                    }
                }
            },
            "CCBResponse": {
                "type": "object",
                "properties": {
                    "clienteTieneBeneficio": {
                        "type": "boolean"
                    }
                }
            },
            "PostVisitanteCodigoAbrirCasillero": {
                "required": [
                    "clave",
                    "codigo",
                    "numeroIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "codigo": {
                        "type": "string",
                        "description": "codigo del visitante",
                        "example": "H47QT"
                    },
                    "numeroIdentificacion": {
                        "type": "string",
                        "description": "numero de identificacion del visitante",
                        "example": "1111111111"
                    },
                    "clave": {
                        "type": "string",
                        "description": "clave unica del locker",
                        "example": "H47QT"
                    }
                }
            },
            "PostOpenLocker": {
                "required": [
                    "boxId",
                    "lockerName"
                ],
                "type": "object",
                "properties": {
                    "lockerName": {
                        "type": "string"
                    },
                    "boxId": {
                        "type": "string"
                    }
                }
            },
            "PostCodigoAbrirCasillero": {
                "required": [
                    "clave",
                    "codigo"
                ],
                "type": "object",
                "properties": {
                    "codigo": {
                        "type": "string",
                        "description": "codigo para apertura sin visitante",
                        "example": "H47QT"
                    },
                    "clave": {
                        "type": "string",
                        "description": "clave unica del locker",
                        "example": "H47QT"
                    }
                }
            },
            "PostLectorRfid": {
                "required": [
                    "hid",
                    "marca",
                    "nombre",
                    "referencia",
                    "serial"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre unico del lector rfid",
                        "example": "nombre1"
                    },
                    "hid": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "id hardware lector rfid",
                        "example": "WKT-1232"
                    },
                    "marca": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "marca del lector rfid",
                        "example": "nombre1"
                    },
                    "referencia": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "referencia del lector rfid",
                        "example": "nombre1"
                    },
                    "serial": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "serial lector rfid",
                        "example": "12345abcdef"
                    },
                    "idCasillero": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "PostImpresionPersonal": {
                "required": [
                    "idVisitante"
                ],
                "type": "object",
                "properties": {
                    "idVisitante": {
                        "type": "string",
                        "description": "id del visitante",
                        "format": "uuid",
                        "example": "8a365ba0-93ba-4c19-b1f4-67566e475a5c"
                    },
                    "idImpresora": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "PostImpresionManilla": {
                "required": [
                    "idVisitante"
                ],
                "type": "object",
                "properties": {
                    "idVisitante": {
                        "type": "string",
                        "description": "id del visitante",
                        "format": "uuid",
                        "example": "8a365ba0-93ba-4c19-b1f4-67566e475a5c"
                    },
                    "idImpresora": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "PostManillaLogo": {
                "required": [
                    "fechaFinal",
                    "fechaInicial",
                    "imagen",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del logo",
                        "example": "Logo1"
                    },
                    "fechaInicial": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha inicial para uso del logo",
                        "example": "26-04-2024"
                    },
                    "fechaFinal": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha final para uso del logo",
                        "example": "26-04-2024"
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PostImpresora": {
                "required": [
                    "direccionIp",
                    "nombre",
                    "referencia",
                    "serial"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la impresora",
                        "example": "nombre1"
                    },
                    "direccionIp": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "direccion IP",
                        "example": "172.10.30.21"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado actual de la impresora",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO",
                            "MANTENIMIENTO"
                        ]
                    },
                    "marca": {
                        "type": "string",
                        "description": "marca de la impresora",
                        "example": "ZEBRA",
                        "enum": [
                            "ZEBRA",
                            "CHAINWAY",
                            "GAINSCHA",
                            "SAT"
                        ]
                    },
                    "referencia": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "referencia de la impresora",
                        "example": "ZD621R"
                    },
                    "serial": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "serial de la impresora",
                        "example": "123456789"
                    },
                    "tipoImpresora": {
                        "type": "string",
                        "description": "tipo de impresora",
                        "example": "IMPRESORA_MANILLAS",
                        "enum": [
                            "IMPRESORA_MANILLAS",
                            "IMPRESORA_BOLETAS"
                        ]
                    }
                }
            },
            "PostImpresionGeneral": {
                "required": [
                    "idImpresora",
                    "idVenta"
                ],
                "type": "object",
                "properties": {
                    "idVenta": {
                        "type": "integer",
                        "description": "id de la venta",
                        "format": "int64",
                        "example": 1
                    },
                    "idImpresora": {
                        "type": "integer",
                        "description": "id de impresora",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PostHCVisitante": {
                "required": [
                    "idVisitante"
                ],
                "type": "object",
                "properties": {
                    "idVisitante": {
                        "type": "string",
                        "description": "id del visitante",
                        "format": "uuid",
                        "example": "7d275c4d-f35b-4117-9189-59a9d9ccbe84"
                    }
                }
            },
            "PostHCVehicle": {
                "required": [
                    "plateNo",
                    "vehicleGroupIndexCode"
                ],
                "type": "object",
                "properties": {
                    "plateNo": {
                        "maxLength": 8,
                        "minLength": 6,
                        "type": "string",
                        "description": "numero de placa del vehiculo",
                        "example": "AAA111"
                    },
                    "vehicleGroupIndexCode": {
                        "type": "string",
                        "description": "id del grupo de vehiculos de hikcentral",
                        "example": "2"
                    }
                }
            },
            "JsonNode": {
                "type": "object"
            },
            "PostHCCamaraPlacas": {
                "required": [
                    "cameraIndexCode",
                    "idZonaParqueadero",
                    "nombre",
                    "tipo"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la camara de placas",
                        "example": "Camara de placas 1"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de uso de la camara de placas",
                        "example": "ENTRADA",
                        "enum": [
                            "ENTRADA",
                            "SALIDA"
                        ]
                    },
                    "idZonaParqueadero": {
                        "type": "integer",
                        "description": "id de la zona de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "cameraIndexCode": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "id la camara de placas de hikcentral",
                        "example": "1"
                    }
                }
            },
            "PostHCBiometrico": {
                "required": [
                    "doorIndexCode",
                    "nombre",
                    "tipo"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del biometrico",
                        "example": "Biometrico 1"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de uso del biometrico",
                        "example": "ENTRADA",
                        "enum": [
                            "ENTRADA",
                            "CASILLERO",
                            "ATRACCION",
                            "VENDING_MACHINE",
                            "INDEFINIDO"
                        ]
                    },
                    "doorIndexCode": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "id del biometrico de hikcentral (door)",
                        "example": "1"
                    }
                }
            },
            "PostEmpresa": {
                "required": [
                    "email",
                    "nit",
                    "nombre",
                    "razonSocial",
                    "telefono"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la empresa",
                        "example": "empresa"
                    },
                    "razonSocial": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "razon social de la empresa",
                        "example": "empresa"
                    },
                    "nit": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^\\d{9}-\\d$",
                        "type": "string",
                        "description": "nit de la empresa",
                        "example": "999588662-1"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico de la empresa",
                        "example": "example@email.com"
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono de la empresa",
                        "example": "3005557777"
                    },
                    "idCiudad": {
                        "maxLength": 15,
                        "minLength": 1,
                        "type": "string",
                        "description": "id de la ciudad de la empresa",
                        "example": "11001.11.Co"
                    },
                    "direccion": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "direccion de la empresa",
                        "example": "Calle 1 # 1 - 1"
                    }
                }
            },
            "PostCliente": {
                "required": [
                    "email",
                    "numeroIdentificacion",
                    "primerApellido",
                    "primerNombre",
                    "telefono",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "primerNombre": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "primer nombre del cliente",
                        "example": "Nombre 1"
                    },
                    "segundoNombre": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "segundo nombre del cliente",
                        "example": "Nombre 2"
                    },
                    "primerApellido": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "primer apellido del cliente",
                        "example": "Apellido 1"
                    },
                    "segundoApellido": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "segundo apellido del cliente",
                        "example": "Apellido 2"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del cliente",
                        "example": "example@email.com"
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono del cliente",
                        "example": "3005557777"
                    },
                    "genero": {
                        "type": "string",
                        "description": "genero del cliente",
                        "example": "M",
                        "enum": [
                            "M",
                            "F",
                            "O"
                        ]
                    },
                    "idCiudad": {
                        "maxLength": 15,
                        "minLength": 1,
                        "type": "string",
                        "description": "id de la ciudad del cliente",
                        "example": "11001.11.Co"
                    },
                    "direccion": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "direccion del cliente",
                        "example": "Calle 1 # 1 - 1"
                    },
                    "fechaNacimiento": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de nacimiento del cliente",
                        "example": "26-04-2024"
                    }
                }
            },
            "EnviarCorreoPersonalizado": {
                "required": [
                    "asunto",
                    "correo"
                ],
                "type": "object",
                "properties": {
                    "correo": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del destinatario",
                        "example": "example@email.com"
                    },
                    "asunto": {
                        "maxLength": 2147483647,
                        "minLength": 3,
                        "type": "string"
                    },
                    "titulo": {
                        "type": "string"
                    },
                    "parrafo": {
                        "type": "string"
                    },
                    "parrafoFinal": {
                        "type": "string"
                    },
                    "imagenUrl": {
                        "type": "string"
                    },
                    "boton": {
                        "type": "boolean"
                    },
                    "botonUrl": {
                        "type": "string"
                    },
                    "botonTexto": {
                        "type": "string"
                    }
                }
            },
            "EnviarCorreoCompraReserva": {
                "required": [
                    "reservas"
                ],
                "type": "object",
                "properties": {
                    "correo": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del destinatario",
                        "example": "example@email.com"
                    },
                    "reservas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                }
            },
            "EnviarCorreoBoletaVisitante": {
                "required": [
                    "boletas"
                ],
                "type": "object",
                "properties": {
                    "boletas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                }
            },
            "PostConfiguracionGeneralEmpresa": {
                "required": [
                    "accountAdminId",
                    "nit",
                    "nombre",
                    "razonSocial",
                    "telefono"
                ],
                "type": "object",
                "properties": {
                    "nit": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "nit de la empresa",
                        "example": "999588662"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la empresa",
                        "example": "Empresa A"
                    },
                    "telefono": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "telefono de la empresa",
                        "example": "420222999"
                    },
                    "direccion": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "direccion de la empresa",
                        "example": "Calle 90 Carrera 25 #90-88"
                    },
                    "url": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "url de la empresa",
                        "example": "www.example-empresa.com"
                    },
                    "razonSocial": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "razon social de la empresa",
                        "example": "Razon social A"
                    },
                    "terminosCondiciones": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "terminos y condiciones de la empresa",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                    },
                    "resolucionDian": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "resolucion de la dian",
                        "example": "00009988"
                    },
                    "decimales": {
                        "maximum": 10,
                        "minimum": 1,
                        "type": "integer",
                        "description": "presicion de decimales a mostrar",
                        "format": "int32",
                        "example": 2
                    },
                    "formatoMoneda": {
                        "maxLength": 2,
                        "minLength": 1,
                        "type": "string",
                        "description": "simbolo de la moneda a utilizar",
                        "example": "$"
                    },
                    "edadAdulto": {
                        "maximum": 99,
                        "minimum": 1,
                        "type": "integer",
                        "description": "edad en la que una persona se considera adulto",
                        "format": "int32",
                        "example": 18
                    },
                    "accountAdminId": {
                        "type": "string",
                        "description": "id de la cuenta de administrador",
                        "format": "uuid",
                        "example": "b1753453-bda0-452d-b396-1847f5b77ea6"
                    },
                    "emailRemitente": {
                        "maxLength": 255,
                        "minLength": 5,
                        "type": "string",
                        "description": "direccion de correo electronico que se usara para la emision de correos",
                        "example": "example@email.com"
                    },
                    "logo": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "IdMessageResponseXVisitante": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "mesaje de respuesta",
                        "example": "respuesta"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del objeto",
                        "example": "1"
                    }
                }
            },
            "PostUbicacionCasillero": {
                "required": [
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la ubicacion de casilleros",
                        "example": "Ubicacion A"
                    }
                }
            },
            "PostTipoCasilla": {
                "required": [
                    "descripcion",
                    "nombre",
                    "precio"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del tipo de casilla",
                        "example": "Tipo de casilla A"
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 3,
                        "type": "string",
                        "description": "descripcion del tipo de casilla",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "precio": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "precio del tipo de casilla",
                        "format": "double",
                        "example": 30000
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PExepcionesDiasSemana": {
                "required": [
                    "domingo",
                    "jueves",
                    "lunes",
                    "martes",
                    "miercoles",
                    "sabado",
                    "tipo",
                    "viernes"
                ],
                "type": "object",
                "properties": {
                    "tipo": {
                        "type": "string",
                        "enum": [
                            "VENTA",
                            "CONSUMO"
                        ]
                    },
                    "lunes": {
                        "type": "boolean"
                    },
                    "martes": {
                        "type": "boolean"
                    },
                    "miercoles": {
                        "type": "boolean"
                    },
                    "jueves": {
                        "type": "boolean"
                    },
                    "viernes": {
                        "type": "boolean"
                    },
                    "sabado": {
                        "type": "boolean"
                    },
                    "domingo": {
                        "type": "boolean"
                    }
                },
                "description": "lista de excepciones de dias de la semana"
            },
            "PostTipoBoleta": {
                "required": [
                    "descripcion",
                    "hikcentralPrivilegeGroupId",
                    "idCategoriaEdad",
                    "idCategoriaEstatura",
                    "nombre",
                    "precio"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre del tipo de boleta",
                        "example": "Tipo de boleta A"
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 3,
                        "type": "string",
                        "description": "descripcion del servicio adicional",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "precio": {
                        "type": "number",
                        "description": "precio del tipo de boleta",
                        "format": "double",
                        "example": 30000
                    },
                    "idCategoriaEdad": {
                        "type": "integer",
                        "description": "id de la categoria de edad",
                        "format": "int64",
                        "example": 1
                    },
                    "idCategoriaEstatura": {
                        "type": "integer",
                        "description": "id de la categoria de estatura",
                        "format": "int64",
                        "example": 1
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    },
                    "hikcentralPrivilegeGroupId": {
                        "type": "string",
                        "description": "id del grupo de privilegios de hikcentral",
                        "example": "1"
                    },
                    "ventaFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de inicio de venta del tipo de boleta",
                        "example": "26-04-2024"
                    },
                    "ventaFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de fin de venta del tipo de boleta",
                        "example": "26-04-2024"
                    },
                    "consumoFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de inicio de consumo del tipo de boleta",
                        "example": "26-04-2024"
                    },
                    "consumoFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de fin de consumo del tipo de boleta",
                        "example": "26-04-2024"
                    },
                    "excepcionesDiasSemana": {
                        "maxItems": 2,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PExepcionesDiasSemana"
                        }
                    },
                    "activacionDesactivacionAutomatica": {
                        "type": "boolean",
                        "description": "permitir activacion y desactivacion automatica del tipo de boleta"
                    }
                }
            },
            "PostServicioAdicional": {
                "required": [
                    "descripcion",
                    "idCategoriaServicio",
                    "nombre",
                    "precio"
                ],
                "type": "object",
                "properties": {
                    "idCategoriaServicio": {
                        "type": "integer",
                        "description": "id de la categoria del servicio adicional",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del servicio adicional",
                        "example": "Servicio Adicional X"
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 3,
                        "type": "string",
                        "description": "descripcion del servicio adicional",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "precio": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "precio del servicio adicional",
                        "format": "double",
                        "example": 30000
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PRReservaVehiculo": {
                "required": [
                    "cantidad",
                    "idTipoServicio"
                ],
                "type": "object",
                "properties": {
                    "idTipoServicio": {
                        "type": "integer",
                        "description": "id del tipo de servicio de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "cantidad": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "cantidad de reservas de parqueadero",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "PostReserva": {
                "required": [
                    "fecha",
                    "idCanal",
                    "numeroIdentificacion",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de la reserva",
                        "example": "26-04-2024"
                    },
                    "idCanal": {
                        "type": "integer",
                        "description": "id del canal en el cual se realiza la reserva",
                        "format": "int64",
                        "example": 1
                    },
                    "boletas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaBoletas"
                        }
                    },
                    "casillas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCasillas"
                        }
                    },
                    "vehiculos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaVehiculo"
                        }
                    },
                    "serviciosAdicionales": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaServicioAdicional"
                        }
                    },
                    "combos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCombo"
                        }
                    },
                    "codigoDescuento": {
                        "pattern": "^[A-Z0-9]{10}$",
                        "type": "string",
                        "description": "codigo de descuento",
                        "example": "D1AHF524A1"
                    },
                    "clienteEsVisitante": {
                        "type": "boolean",
                        "description": "si es verdadero se llena los datos de todos los visitantes con los datos del cliente",
                        "example": false
                    }
                }
            },
            "IdMessageResponseXReserva": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "mesaje de respuesta",
                        "example": "respuesta"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del objeto",
                        "example": "1"
                    }
                }
            },
            "PostReservaProducto": {
                "required": [
                    "idCanal",
                    "numeroIdentificacion",
                    "productos",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de la reserva",
                        "example": "26-04-2024"
                    },
                    "idCanal": {
                        "type": "integer",
                        "description": "id del canal en el cual se realiza la reserva",
                        "format": "int64",
                        "example": 1
                    },
                    "productos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaProducto"
                        }
                    },
                    "codigoDescuento": {
                        "pattern": "^[A-Z0-9]{10}$",
                        "type": "string",
                        "description": "codigo de descuento",
                        "example": "D1AHF524A1"
                    },
                    "clienteEsVisitante": {
                        "type": "boolean",
                        "description": "si es verdadero se llena los datos de todos los visitantes con los datos del cliente",
                        "example": false
                    }
                }
            },
            "PostReservaAlter": {
                "required": [
                    "idCanal",
                    "numeroIdentificacion",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de la reserva",
                        "example": "26-04-2024"
                    },
                    "idCanal": {
                        "type": "integer",
                        "description": "id del canal en el cual se realiza la reserva",
                        "format": "int64",
                        "example": 1
                    },
                    "boletas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaBoletas"
                        }
                    },
                    "casillas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCasillas"
                        }
                    },
                    "vehiculos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaVehiculoAlter"
                        }
                    },
                    "serviciosAdicionales": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaServicioAdicional"
                        }
                    },
                    "combos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCombo"
                        }
                    },
                    "codigoDescuento": {
                        "pattern": "^[A-Z0-9]{10}$",
                        "type": "string",
                        "description": "codigo de descuento",
                        "example": "D1AHF524A1"
                    },
                    "clienteEsVisitante": {
                        "type": "boolean",
                        "description": "si es verdadero se llena los datos de todos los visitantes con los datos del cliente",
                        "example": false
                    }
                }
            },
            "PostRedimirReservaServicioAdicional": {
                "required": [
                    "idReserva",
                    "idReservaServicioAdicional"
                ],
                "type": "object",
                "properties": {
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "1e9a3afa-210e-4ae7-8544-50a4e26478cd"
                    },
                    "idReservaServicioAdicional": {
                        "type": "string",
                        "description": "id de la reserva de servicio adicional",
                        "format": "uuid",
                        "example": "9fb1a63a-26c4-438b-aa96-5dcc46ac4b4e"
                    }
                }
            },
            "InfoBoletaQRRequest": {
                "required": [
                    "imageBase64",
                    "mimeType"
                ],
                "type": "object",
                "properties": {
                    "mimeType": {
                        "type": "string",
                        "description": "mimetype de la imagen",
                        "example": "image/jpeg"
                    },
                    "imageBase64": {
                        "type": "string",
                        "description": "datos binarios de la imagen en base64",
                        "example": "/9j/4AAQSkZJRgABAgAAAQABAAD/7QCEUGhvdG9zaG9wIDMuMAA4QklNBAQAAAAAAGccAigAYkZCTUQwMTAwMGFhNjAzMDAwMDY5MD"
                    }
                }
            },
            "Boleta": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id de la boleta",
                        "format": "uuid",
                        "example": "807064fe-7ba8-45fe-8bf5-793782dadb96"
                    },
                    "tipoBoleta": {
                        "$ref": "#/components/schemas/TipoBoleta"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la boleta",
                        "example": "PENDIENTE",
                        "enum": [
                            "PENDIENTE",
                            "ACTIVA",
                            "ANULADA"
                        ]
                    },
                    "reserva": {
                        "$ref": "#/components/schemas/Reserva"
                    },
                    "visitante": {
                        "$ref": "#/components/schemas/Visitante"
                    },
                    "estadoPago": {
                        "type": "string",
                        "description": "estado del pago de la boleta",
                        "enum": [
                            "APROBADO",
                            "PENDIENTE",
                            "ANULADO"
                        ]
                    }
                }
            },
            "Canal": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del canal",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del canal",
                        "example": "Canal A"
                    }
                },
                "description": "canal asociado con esta reserva"
            },
            "Casilla": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la casilla",
                        "format": "int64",
                        "example": 1
                    },
                    "hid": {
                        "type": "string",
                        "description": "id de hardware la casilla",
                        "example": "1527-1"
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la casilla",
                        "example": "226"
                    },
                    "casillero": {
                        "$ref": "#/components/schemas/Casillero"
                    },
                    "tipo": {
                        "$ref": "#/components/schemas/TipoCasilla"
                    },
                    "clave": {
                        "type": "string",
                        "description": "clave de la casilla",
                        "example": "F457U"
                    }
                },
                "description": "casilla de la reserva"
            },
            "Casillero": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del casillero",
                        "format": "int64",
                        "example": 1
                    },
                    "hid": {
                        "type": "string",
                        "description": "id de hardware del casillero",
                        "example": "wkt1310"
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del casillero",
                        "example": "Casillero 1"
                    },
                    "hikcentralPrivilegeGroupId": {
                        "type": "string",
                        "description": "id del grupo de privilegios de hikcentral",
                        "example": "1"
                    },
                    "ubicacion": {
                        "$ref": "#/components/schemas/UbicacionCasillero"
                    },
                    "prioridad": {
                        "type": "integer",
                        "description": "prioridad del casillero",
                        "format": "int32",
                        "example": 1
                    }
                },
                "description": "casillero de la casilla en el cual se encuentra la casilla"
            },
            "CategoriaEdad": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la categoria de edad",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la categoria de edad",
                        "example": "Categoria de edad A"
                    },
                    "edadInicial": {
                        "type": "integer",
                        "description": "edad inicial de la categoria de edad",
                        "format": "int32",
                        "example": 8
                    },
                    "edadFinal": {
                        "type": "integer",
                        "description": "edad final de la categoria de edad",
                        "format": "int32",
                        "example": 60
                    }
                },
                "description": "categoria de edad"
            },
            "CategoriaEstatura": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la categoria de estatura",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la categoria de estatura",
                        "example": "Categoria de estatura A"
                    },
                    "estaturaCmMin": {
                        "type": "integer",
                        "description": "estatura minima de la categoria en centimetros",
                        "format": "int32",
                        "example": 120
                    },
                    "estaturaCmMax": {
                        "type": "integer",
                        "description": "estatura maxima de la categoria en centimetros",
                        "format": "int32",
                        "example": 180
                    }
                },
                "description": "categoria de estatura"
            },
            "CategoriaServicio": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la categoria de servicios adicionales",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la categoria de servicios adicionales",
                        "example": "Servicios A"
                    }
                }
            },
            "Ciudad": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "codigo": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "estado": {
                        "$ref": "#/components/schemas/Estado"
                    }
                },
                "description": "ciudad del cliente",
                "example": "11001.11.Co"
            },
            "Cliente": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "identificacion": {
                        "$ref": "#/components/schemas/Identificacion"
                    },
                    "primerNombre": {
                        "type": "string",
                        "description": "primer nombre del cliente",
                        "example": "Nombre 1"
                    },
                    "segundoNombre": {
                        "type": "string",
                        "description": "segundo nombre del cliente",
                        "example": "Nombre 2"
                    },
                    "primerApellido": {
                        "type": "string",
                        "description": "primer apellido del cliente",
                        "example": "Apellido 1"
                    },
                    "segundoApellido": {
                        "type": "string",
                        "description": "segundo apellido del cliente",
                        "example": "Apellido 2"
                    },
                    "nombreCompleto": {
                        "type": "string",
                        "description": "nombre completo del cliente",
                        "example": "Nombre 1 Nombre 2 Apellido 1 Apellido 2"
                    },
                    "email": {
                        "type": "string",
                        "description": "direccion de correo electronico del cliente",
                        "example": "example@email.com"
                    },
                    "telefono": {
                        "type": "string",
                        "description": "telefono del cliente",
                        "example": "3005557777"
                    },
                    "genero": {
                        "type": "string",
                        "description": "genero del cliente",
                        "example": "M",
                        "enum": [
                            "M",
                            "F",
                            "O"
                        ]
                    },
                    "fechaNacimiento": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de nacimiento del cliente",
                        "example": "26-04-2024"
                    },
                    "ciudad": {
                        "$ref": "#/components/schemas/Ciudad"
                    },
                    "direccion": {
                        "type": "string",
                        "description": "direccion del cliente",
                        "example": "Calle 1 # 1 - 1"
                    }
                },
                "description": "cliente asociado con esta reserva"
            },
            "Descuento": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del descuento",
                        "format": "uuid",
                        "example": "6ae369b6-847e-446a-a096-06e589c63db7"
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del descuento",
                        "example": "Descuento A"
                    },
                    "tiposProducto": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DescuentoTipoProducto"
                        }
                    },
                    "aplicarConCodigo": {
                        "type": "boolean",
                        "description": "determina si el descuento se aplica usando el codigo, de lo contrario se aplicara a todas las compras de productos que cumplan con las condiciones",
                        "example": true
                    },
                    "codigo": {
                        "type": "string",
                        "description": "codigo del descuento",
                        "example": "D1AHF524A0"
                    },
                    "aplicarConVigencia": {
                        "type": "boolean",
                        "description": "determina si el descuento se aplica usando vigencia de tiempo, de lo contrario se aplicara a todas las compras de productos sin importar la fecha",
                        "example": true
                    },
                    "vigenciaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de inicio de vigencia del descuento",
                        "example": "26-04-2024 16:33:02"
                    },
                    "vigenciaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de finalizacion de vigencia del descuento",
                        "example": "26-04-2024 16:33:02"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de descuento",
                        "example": "PORCENTAJE",
                        "enum": [
                            "PORCENTAJE",
                            "MONTO_FIJO"
                        ]
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor del descuento",
                        "format": "double",
                        "example": 20
                    },
                    "consumoMax": {
                        "type": "integer",
                        "description": "numero de consumos maximo del descuento, 0 para consumo ilimitado",
                        "format": "int32",
                        "example": 100
                    },
                    "consumoMaxCliente": {
                        "type": "integer",
                        "description": "numero de consumos maximo por cliente, 0 para consumo ilimitado",
                        "format": "int32",
                        "example": 1
                    },
                    "consumo": {
                        "type": "integer",
                        "description": "numero de consumos realizados hasta el momento",
                        "format": "int32",
                        "example": 5
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del descuento",
                        "example": "ACTIVO",
                        "enum": [
                            "INACTIVO",
                            "ACTIVO"
                        ]
                    },
                    "clientesObjetivo": {
                        "type": "boolean",
                        "description": "determina si el descuento se aplica a los clientes objetivo, de lo contrario se aplicara a todos los clientes",
                        "example": true
                    },
                    "clientesCompraronEnFechas": {
                        "type": "boolean",
                        "description": "determina si los clientes objetivo seran los que hayan comprado dentro de el rango de fechas especificado tener compras en fechas especificas (si/no)",
                        "example": true
                    },
                    "ccefFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de inicio en la que los clientes objetivo compraron",
                        "example": "26-04-2024 16:33:02"
                    },
                    "ccefFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de finalizacion en la que los clientes objetivo compraron",
                        "example": "26-04-2024 16:33:02"
                    },
                    "clientesEspecificos": {
                        "type": "boolean",
                        "description": "determina si los clientes objetivo seran clientes especificos (si/no)",
                        "example": false
                    }
                },
                "description": "descuento asociado con esta reserva"
            },
            "DescuentoTipoProducto": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "tipoProducto": {
                        "type": "string",
                        "enum": [
                            "BOLETA",
                            "PARQUEADERO",
                            "CASILLA",
                            "SERVICIO_ADICIONAL",
                            "COMBO"
                        ]
                    },
                    "cantidadMax": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "Tipos de producto a los cuales se aplica este descuento, vacio para aplicar a todos"
            },
            "Estado": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "codigo": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "pais": {
                        "$ref": "#/components/schemas/Pais"
                    }
                }
            },
            "Identificacion": {
                "type": "object",
                "properties": {
                    "tipo": {
                        "type": "string",
                        "description": "tipo de identificacion",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numero": {
                        "type": "string",
                        "description": "numero de identificacion",
                        "example": "1111111111"
                    }
                },
                "description": "identificacion del cliente"
            },
            "Pais": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "codigo": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    }
                }
            },
            "Reserva": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "c42f2c16-13e8-4d95-af60-134881bfbba7"
                    },
                    "codigo": {
                        "type": "string",
                        "description": "codigo de la reserva",
                        "example": "Q6ASG1"
                    },
                    "cliente": {
                        "$ref": "#/components/schemas/Cliente"
                    },
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de la reserva",
                        "example": "26-04-2024"
                    },
                    "canal": {
                        "$ref": "#/components/schemas/Canal"
                    },
                    "boletas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Boleta"
                        }
                    },
                    "serviciosAdicionales": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReservaServicioAdicional"
                        }
                    },
                    "casillas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReservaCasilla"
                        }
                    },
                    "vehiculos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReservaVehiculo"
                        }
                    },
                    "combos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReservaCombo"
                        }
                    },
                    "descuento": {
                        "$ref": "#/components/schemas/Descuento"
                    },
                    "cortesia": {
                        "$ref": "#/components/schemas/ReservaCortesia"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la reserva",
                        "example": "ACTIVA",
                        "enum": [
                            "ACTIVA",
                            "EN_TRANSACCION",
                            "ANULADA",
                            "TEMPORAL",
                            "FECHA_PENDIENTE"
                        ]
                    },
                    "registroVentaMasivaId": {
                        "type": "integer",
                        "description": "id de la bolsa de ventas masivas asociada con esta reserva",
                        "format": "int64",
                        "example": 1
                    },
                    "historialVentaMasivaId": {
                        "type": "integer",
                        "description": "id del historial de ventas masivas asociado con esta reserva",
                        "format": "int64",
                        "example": 1
                    }
                },
                "description": "reserva asociada a la boleta"
            },
            "ReservaCasilla": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id de la reserva de casilla",
                        "format": "uuid",
                        "example": "e3617a05-6e65-433f-b0db-c2a8747f3314"
                    },
                    "casilla": {
                        "$ref": "#/components/schemas/Casilla"
                    },
                    "visitanteId": {
                        "type": "string",
                        "description": "id del visitante que tiene asginada esta reserva de casilla",
                        "format": "uuid",
                        "example": "71b09bc0-f6f6-4f86-b937-6c6689187632"
                    },
                    "codigo": {
                        "type": "string",
                        "description": "codigo para apertura sin visitante",
                        "example": "6A5SD"
                    },
                    "fechaPrimeraApertura": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de la primera apertura de la casilla",
                        "example": "26-04-2024 16:33:02"
                    },
                    "estadoPago": {
                        "type": "string",
                        "description": "estado del pago de la reserva de casilla",
                        "enum": [
                            "APROBADO",
                            "PENDIENTE",
                            "ANULADO"
                        ]
                    }
                },
                "description": "casillas asociadas con esta reserva"
            },
            "ReservaCombo": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id de la reserva de combo",
                        "format": "uuid",
                        "example": "df668ac0-9ea6-4772-b396-ed7e4b6e11fb"
                    },
                    "combo": {
                        "$ref": "#/components/schemas/Producto"
                    },
                    "reservaProducto": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReservaComboProducto"
                        }
                    },
                    "estadoPago": {
                        "type": "string",
                        "enum": [
                            "APROBADO",
                            "PENDIENTE",
                            "ANULADO"
                        ]
                    }
                },
                "description": "combos de productos asociados con esta reserva"
            },
            "ReservaComboProducto": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "tipoProducto": {
                        "type": "string",
                        "description": "tipo de producto",
                        "example": "BOLETA",
                        "enum": [
                            "BOLETA",
                            "PARQUEADERO",
                            "CASILLA",
                            "SERVICIO_ADICIONAL",
                            "COMBO"
                        ]
                    },
                    "reservaProductoId": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "ReservaCortesia": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "fechaExpiracion": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    }
                },
                "description": "cortesia asociada con esta reserva"
            },
            "ReservaServicioAdicional": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id de la reserva de servicio adicional",
                        "format": "uuid"
                    },
                    "servicioAdicional": {
                        "$ref": "#/components/schemas/ServicioAdicional"
                    },
                    "visitanteId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "consumido": {
                        "type": "boolean",
                        "description": "el servicio adicional ya ha sido consumido (si/no)",
                        "example": false
                    },
                    "estadoPago": {
                        "type": "string",
                        "enum": [
                            "APROBADO",
                            "PENDIENTE",
                            "ANULADO"
                        ]
                    }
                },
                "description": "servicios adicionales asociados con esta reserva"
            },
            "ReservaVehiculo": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id de la reserva de vehiculo",
                        "format": "uuid",
                        "example": "df668ac0-9ea6-4772-b396-ed7e4b6e11fb"
                    },
                    "vehiculo": {
                        "$ref": "#/components/schemas/Vehiculo"
                    },
                    "zonaParqueadero": {
                        "$ref": "#/components/schemas/ZonaParqueadero"
                    },
                    "visitanteId": {
                        "type": "string",
                        "description": "id del visitante asociado a la reserva",
                        "format": "uuid",
                        "example": "df668ac0-9ea6-4772-b396-ed7e4b6e11fb"
                    },
                    "estadoPago": {
                        "type": "string",
                        "description": "estado del pago de la reserva",
                        "enum": [
                            "APROBADO",
                            "PENDIENTE",
                            "ANULADO"
                        ]
                    }
                },
                "description": "vehiculos asociados con esta reserva"
            },
            "ServicioAdicional": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del servicio adicional",
                        "format": "int64",
                        "example": 1
                    },
                    "producto": {
                        "$ref": "#/components/schemas/Producto"
                    },
                    "categoriaServicio": {
                        "$ref": "#/components/schemas/CategoriaServicio"
                    }
                }
            },
            "TipoBoleta": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del tipo de boleta",
                        "format": "int64",
                        "example": 1
                    },
                    "producto": {
                        "$ref": "#/components/schemas/Producto"
                    },
                    "categoriaEdad": {
                        "$ref": "#/components/schemas/CategoriaEdad"
                    },
                    "categoriaEstatura": {
                        "$ref": "#/components/schemas/CategoriaEstatura"
                    },
                    "hikcentralPrivilegeGroupId": {
                        "type": "string",
                        "description": "id del grupo de privilegios de hikcentral",
                        "example": "1"
                    }
                },
                "description": "tipo de boleta"
            },
            "TipoCasilla": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del tipo de casilla",
                        "format": "int64",
                        "example": 1
                    },
                    "producto": {
                        "$ref": "#/components/schemas/Producto"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del tipo de casilla",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                },
                "description": "tipo de casilla"
            },
            "UbicacionCasillero": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la ubicacion",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la ubicacion",
                        "example": "Ubicacion A"
                    }
                },
                "description": "ubicacion del casillero"
            },
            "Visitante": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del visitante",
                        "format": "uuid",
                        "example": "71b09bc0-f6f6-4f86-b937-6c6689187632"
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del visitante",
                        "example": "nombre 1"
                    },
                    "apellido": {
                        "type": "string",
                        "description": "apellido del visitante",
                        "example": "apellido 1"
                    },
                    "nombreCompleto": {
                        "type": "string",
                        "description": "nombre completo del visitante",
                        "example": "Nombre 1 Apellido 1"
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del visitante",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "type": "string",
                        "description": "numero de identificacion del visitante",
                        "example": "1111222333"
                    },
                    "email": {
                        "type": "string",
                        "description": "direccion de correo electronico del visitante",
                        "example": "example@email.com"
                    },
                    "telefono": {
                        "type": "string",
                        "description": "telefono del visitante",
                        "example": "3005557777"
                    },
                    "paisProcedencia": {
                        "type": "string",
                        "description": "pais de procedencia del visitante",
                        "example": "Colombia"
                    },
                    "ciudadProcedencia": {
                        "type": "string",
                        "description": "ciudad de procedencia del visitante",
                        "example": "Bogotá"
                    },
                    "fechaNacimiento": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de nacimiento del visitante",
                        "example": "26-04-2024"
                    },
                    "estaturaMayor145": {
                        "type": "boolean",
                        "description": "estatura del visitante en centimetros es mayor a 145cm si/no",
                        "example": true
                    },
                    "genero": {
                        "type": "string",
                        "description": "genero del visitante",
                        "example": "M",
                        "enum": [
                            "M",
                            "F",
                            "O"
                        ]
                    },
                    "fotoVisitanteImagenId": {
                        "type": "string",
                        "description": "id de la imagen del visitante",
                        "format": "uuid",
                        "example": "12546456-8c01-499b-bf11-686c52018442"
                    },
                    "tagRfid": {
                        "type": "string",
                        "description": "codigo del tag rfid asociado al visitante",
                        "example": "fa4sd65asd46a54sd6fgha"
                    },
                    "codigo": {
                        "type": "string",
                        "description": "codigo del visitante",
                        "example": "6A5SD"
                    },
                    "hikcentralPersonId": {
                        "type": "string",
                        "description": "id del visitante en hikcentral",
                        "example": "1"
                    },
                    "hikcentralPersonCode": {
                        "type": "string",
                        "description": "codigo del visitante en hikcentral",
                        "example": "698453"
                    },
                    "fechaIngreso": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de ingreso del visitante",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fechaRegistroHikcentral": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de ingreso del visitante",
                        "example": "26-04-2024 16:33:02"
                    },
                    "reservaCasilla": {
                        "$ref": "#/components/schemas/ReservaCasilla"
                    }
                },
                "description": "visitante asociado a la boleta"
            },
            "PostDisponibilidadBoletas": {
                "required": [
                    "aforoGeneral",
                    "aforoMax"
                ],
                "type": "object",
                "properties": {
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "aforoMax": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "aforoGeneral": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "disponibilidadCanales": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostDisponibilidadBoletasCanal"
                        }
                    }
                }
            },
            "PostDisponibilidadBoletasCanal": {
                "required": [
                    "aforoCanal",
                    "idCanal"
                ],
                "type": "object",
                "properties": {
                    "idCanal": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "aforoCanal": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PDSDFecha": {
                "required": [
                    "fecha"
                ],
                "type": "object",
                "properties": {
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    }
                },
                "description": "fechas para añadir"
            },
            "PostDiaSinDisponibilidad": {
                "required": [
                    "fechas"
                ],
                "type": "object",
                "properties": {
                    "fechas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PDSDFecha"
                        }
                    }
                }
            },
            "PDTipoProductoCantidadMax": {
                "required": [
                    "cantidadMax",
                    "tipoProducto"
                ],
                "type": "object",
                "properties": {
                    "tipoProducto": {
                        "type": "string",
                        "description": "tipo de producto",
                        "example": "BOLETA",
                        "enum": [
                            "BOLETA",
                            "PARQUEADERO",
                            "CASILLA",
                            "SERVICIO_ADICIONAL",
                            "COMBO"
                        ]
                    },
                    "cantidadMax": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "cantidad maxima de productos de este tipo que se pueden comprar con el descuento, 0 para cantidad ilimitada",
                        "format": "int32",
                        "example": 4
                    }
                },
                "description": "Tipos de producto a los cuales se aplica este descuento"
            },
            "PostDescuento": {
                "required": [
                    "aplicarConCodigo",
                    "aplicarConVigencia",
                    "clientesObjetivo",
                    "nombre",
                    "tipo",
                    "tiposProducto",
                    "valor"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string",
                        "description": "nombre del descuento",
                        "example": "Descuento A"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de descuento",
                        "example": "PORCENTAJE",
                        "enum": [
                            "PORCENTAJE",
                            "MONTO_FIJO"
                        ]
                    },
                    "aplicarConCodigo": {
                        "type": "boolean",
                        "description": "determina si el descuento se aplica usando el codigo, de lo contrario se aplicara a todas las compras de productos que cumplan con las condiciones",
                        "example": true
                    },
                    "codigo": {
                        "pattern": "^[A-Z0-9]{10}$",
                        "type": "string",
                        "description": "codigo del descuento",
                        "example": "D1AHF524A0"
                    },
                    "aplicarConVigencia": {
                        "type": "boolean",
                        "description": "determina si el descuento se aplica usando vigencia de tiempo, de lo contrario se aplicara a todas las compras de productos sin importar la fecha",
                        "example": true
                    },
                    "vigenciaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de inicio de vigencia del descuento",
                        "example": "26-04-2024 16:33:02"
                    },
                    "vigenciaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de finalizacion de vigencia del descuento",
                        "example": "26-04-2024 16:33:02"
                    },
                    "tiposProducto": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PDTipoProductoCantidadMax"
                        }
                    },
                    "valor": {
                        "maximum": 9999999,
                        "exclusiveMaximum": false,
                        "minimum": 1,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "valor del descuento",
                        "format": "double",
                        "example": 20
                    },
                    "consumoMax": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "numero de consumos maximo del descuento, 0 para consumo ilimitado",
                        "format": "int32",
                        "example": 100
                    },
                    "consumoMaxCliente": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "numero de consumos maximo por cliente, 0 para consumo ilimitado",
                        "format": "int32",
                        "example": 1
                    },
                    "clientesObjetivo": {
                        "type": "boolean",
                        "description": "determina si el descuento se aplica a los clientes objetivo, de lo contrario se aplicara a todos los clientes",
                        "example": false
                    },
                    "clientesCompraronEnFechas": {
                        "type": "boolean",
                        "description": "determina si los clientes objetivo seran los que hayan comprado dentro de el rango de fechas especificado (si/no)",
                        "example": false
                    },
                    "ccefFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de inicio en la que los clientes objetivo compraron",
                        "example": "26-04-2024 16:33:02"
                    },
                    "ccefFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de finalizacion en la que los clientes objetivo compraron",
                        "example": "26-04-2024 16:33:02"
                    },
                    "clientesEspecificos": {
                        "type": "boolean",
                        "description": "determina si los clientes objetivo seran clientes especificos (si/no)",
                        "example": false
                    },
                    "ceExtension": {
                        "type": "string",
                        "description": "extension del archivo plano para la carga de clientes especificos",
                        "example": "XLSX",
                        "enum": [
                            "CSV",
                            "XLSX"
                        ]
                    },
                    "ceBase64Data": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "datos binarios del archivo plano para carga de clientes especificos en base64",
                        "example": "UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAAALAAAAdGVzdC50eHRVVAkAA2NvbnRlbnQvZXBvY2g"
                    }
                }
            },
            "PostCondicionGeneral": {
                "required": [
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre de la condicion general",
                        "example": "Condicion general A"
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PostCondicionAcceso": {
                "required": [
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre de la condicion de acceso",
                        "example": "Condicion de acceso A"
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PostComboProductos": {
                "required": [
                    "descripcion",
                    "nombre",
                    "precio",
                    "productos"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre del combo",
                        "example": "Combo A"
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 3,
                        "type": "string",
                        "description": "descripcion del combo de productos",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "precio": {
                        "type": "number",
                        "description": "precio del combo",
                        "format": "double",
                        "example": 150000
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    },
                    "ventaFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de inicio de venta del combo",
                        "example": "26-04-2024"
                    },
                    "ventaFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de fin de venta del combo",
                        "example": "26-04-2024"
                    },
                    "consumoFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de inicio de consumo del combo",
                        "example": "26-04-2024"
                    },
                    "consumoFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de fin de consumo del combo",
                        "example": "26-04-2024"
                    },
                    "excepcionesDiasSemana": {
                        "maxItems": 2,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PExepcionesDiasSemana"
                        }
                    },
                    "productos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductoUUIDCantidad"
                        }
                    },
                    "activacionDesactivacionAutomatica": {
                        "type": "boolean",
                        "description": "permitir activacion y desactivacion automatica del combo"
                    }
                }
            },
            "ProductoUUIDCantidad": {
                "required": [
                    "cantidad",
                    "idProducto"
                ],
                "type": "object",
                "properties": {
                    "idProducto": {
                        "type": "string",
                        "description": "id del producto",
                        "format": "uuid",
                        "example": "56c9d9b6-dd37-4c39-a4b8-f4763121638c"
                    },
                    "cantidad": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "cantidad del producto",
                        "format": "int32",
                        "example": 1
                    }
                },
                "description": "lista de ids de los productos que componen el combo"
            },
            "IdMessageResponseXProducto": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "mesaje de respuesta",
                        "example": "respuesta"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del objeto",
                        "example": "1"
                    }
                }
            },
            "PostCategoriaServicio": {
                "required": [
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre de la categoria de servicios adicionales",
                        "example": "Servicios A"
                    }
                }
            },
            "PostCategoriaEstatura": {
                "required": [
                    "estaturaCmMax",
                    "estaturaCmMin",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la categoria de estatura",
                        "example": "Categoria de estatura A"
                    },
                    "estaturaCmMin": {
                        "maximum": 220,
                        "minimum": 30,
                        "type": "integer",
                        "description": "estatura minima de la categoria en centimetros",
                        "format": "int32",
                        "example": 120
                    },
                    "estaturaCmMax": {
                        "maximum": 220,
                        "minimum": 30,
                        "type": "integer",
                        "description": "estatura maxima de la categoria en centimetros",
                        "format": "int32",
                        "example": 180
                    }
                }
            },
            "PostCategoriaEdad": {
                "required": [
                    "edadFinal",
                    "edadInicial",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la categoria de edad",
                        "example": "Categoria de edad A"
                    },
                    "edadInicial": {
                        "maximum": 120,
                        "minimum": 0,
                        "type": "integer",
                        "description": "edad inicial de la categoria de edad",
                        "format": "int32",
                        "example": 8
                    },
                    "edadFinal": {
                        "maximum": 120,
                        "minimum": 0,
                        "type": "integer",
                        "description": "edad final de la categoria de edad",
                        "format": "int32",
                        "example": 60
                    }
                }
            },
            "PostCasillero": {
                "required": [
                    "hid",
                    "hikcentralPrivilegeGroupId",
                    "idUbicacion",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "hid": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "id de hardware del casillero",
                        "example": "wkt1351"
                    },
                    "nombre": {
                        "maxLength": 30,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre del casillero",
                        "example": "Casillero 1"
                    },
                    "hikcentralPrivilegeGroupId": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "id del grupo de privilegios de hikcentral",
                        "example": "1"
                    },
                    "idUbicacion": {
                        "type": "integer",
                        "description": "id de la ubicacion",
                        "format": "int64",
                        "example": 1
                    },
                    "prioridad": {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "prioridad del casillero",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "PostCasilla": {
                "required": [
                    "hid",
                    "idTipoCasilla",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "hid": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "id de hardware de la casilla",
                        "example": "1528-0"
                    },
                    "nombre": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la casilla",
                        "example": "226"
                    },
                    "idTipoCasilla": {
                        "type": "integer",
                        "description": "id del tipo de casilla",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PostCasilleroCasillas": {
                "required": [
                    "casillas",
                    "idCasillero"
                ],
                "type": "object",
                "properties": {
                    "idCasillero": {
                        "type": "integer",
                        "description": "id del casillero",
                        "format": "int64",
                        "example": 1
                    },
                    "casillas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostCasilla"
                        }
                    }
                }
            },
            "CalcularValorReservaResponse": {
                "type": "object",
                "properties": {
                    "productos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VRProductoA"
                        }
                    },
                    "valorBruto": {
                        "type": "number",
                        "description": "Valor total los productos comprados en la reserva (sin descuentos)",
                        "format": "double",
                        "example": 150000
                    },
                    "valorDescuento": {
                        "type": "number",
                        "description": "Valor total de descuentos",
                        "format": "double",
                        "example": 20000
                    },
                    "valorNeto": {
                        "type": "number",
                        "description": "Valor total de los productos comprados en la reserva (con descuentos aplicados)",
                        "format": "double",
                        "example": 130000
                    },
                    "valorPendiente": {
                        "type": "number",
                        "description": "Valor pendiente por pagar",
                        "format": "double",
                        "example": 40000
                    },
                    "valorPagado": {
                        "type": "number",
                        "description": "Valor pagado hasta el momento",
                        "format": "double",
                        "example": 90000
                    }
                }
            },
            "VRProductoA": {
                "type": "object",
                "properties": {
                    "productoId": {
                        "type": "string",
                        "description": "id del producto",
                        "format": "uuid",
                        "example": "49dc554e-b29b-4c66-b275-78951a72ba86"
                    },
                    "productoTipo": {
                        "type": "string",
                        "description": "tipo de producto",
                        "example": "BOLETA",
                        "enum": [
                            "BOLETA",
                            "PARQUEADERO",
                            "CASILLA",
                            "SERVICIO_ADICIONAL",
                            "COMBO"
                        ]
                    },
                    "productoNombre": {
                        "type": "string",
                        "description": "nombre del producto",
                        "example": "Boleta X"
                    },
                    "productoValor": {
                        "type": "number",
                        "description": "valor del producto",
                        "format": "double",
                        "example": 15000
                    },
                    "descuentoValor": {
                        "type": "number",
                        "description": "valor del descuento",
                        "format": "double",
                        "example": 15000
                    },
                    "descuento": {
                        "$ref": "#/components/schemas/Descuento"
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor a pagar",
                        "format": "double",
                        "example": 15000
                    },
                    "estadoPago": {
                        "type": "string",
                        "description": "estado de pago del producto",
                        "example": "APROBADO",
                        "enum": [
                            "APROBADO",
                            "PENDIENTE",
                            "ANULADO"
                        ]
                    }
                },
                "description": "Lista de productos vendidos en la reserva"
            },
            "PostCalcularFechasDisponibilidad": {
                "required": [
                    "idCanal",
                    "mes"
                ],
                "type": "object",
                "properties": {
                    "mes": {
                        "type": "object",
                        "properties": {
                            "year": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "month": {
                                "type": "string",
                                "enum": [
                                    "JANUARY",
                                    "FEBRUARY",
                                    "MARCH",
                                    "APRIL",
                                    "MAY",
                                    "JUNE",
                                    "JULY",
                                    "AUGUST",
                                    "SEPTEMBER",
                                    "OCTOBER",
                                    "NOVEMBER",
                                    "DECEMBER"
                                ]
                            },
                            "monthValue": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "leapYear": {
                                "type": "boolean"
                            }
                        },
                        "description": "mes del año",
                        "example": "06-2023"
                    },
                    "idCanal": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "boletas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaBoletas"
                        }
                    },
                    "casillas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCasillas"
                        }
                    },
                    "vehiculos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaVehiculo"
                        }
                    },
                    "serviciosAdicionales": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaServicioAdicional"
                        }
                    },
                    "combos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCombo"
                        }
                    }
                }
            },
            "FechasDisponibilidad": {
                "type": "object",
                "properties": {
                    "fechas": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "fechas que tienen disponibilidad registrada",
                            "format": "date",
                            "example": "0006-07-15"
                        }
                    }
                }
            },
            "PostCalcularFechasDisponibilidadProducto": {
                "required": [
                    "idCanal",
                    "mes"
                ],
                "type": "object",
                "properties": {
                    "mes": {
                        "type": "object",
                        "properties": {
                            "year": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "month": {
                                "type": "string",
                                "enum": [
                                    "JANUARY",
                                    "FEBRUARY",
                                    "MARCH",
                                    "APRIL",
                                    "MAY",
                                    "JUNE",
                                    "JULY",
                                    "AUGUST",
                                    "SEPTEMBER",
                                    "OCTOBER",
                                    "NOVEMBER",
                                    "DECEMBER"
                                ]
                            },
                            "monthValue": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "leapYear": {
                                "type": "boolean"
                            }
                        },
                        "description": "mes del año",
                        "example": "06-2023"
                    },
                    "idCanal": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "productos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaProducto"
                        }
                    }
                }
            },
            "PostAtraccion": {
                "required": [
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre de la atraccion",
                        "example": "Atraccion A"
                    },
                    "condicionesAcceso": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "description": "condiciones de acceso de la atraccion",
                            "format": "int64"
                        }
                    },
                    "biometricosHikvision": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "description": "biometricos de la atraccion",
                            "format": "int64"
                        }
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "LoginRequest": {
                "required": [
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "nombre de usuario",
                        "example": "admin"
                    },
                    "password": {
                        "type": "string",
                        "description": "contraseña",
                        "example": "abcd1234"
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "id del usuario",
                        "format": "uuid",
                        "example": "b331336a-46f4-4fe4-a850-3208bfc2c398"
                    },
                    "username": {
                        "type": "string",
                        "description": "nombre del usuario",
                        "example": "admin"
                    },
                    "role": {
                        "type": "string",
                        "description": "rol del usuario",
                        "example": "ADMIN"
                    },
                    "accessToken": {
                        "$ref": "#/components/schemas/TokenResponse"
                    },
                    "contentToken": {
                        "$ref": "#/components/schemas/TokenResponse"
                    },
                    "refreshToken": {
                        "$ref": "#/components/schemas/TokenResponse"
                    }
                }
            },
            "TokenResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "token",
                        "example": "3L3DBnz4d8T8bMAEkX8uityJEDZKXoucVa2Ynde6bdX8nhN8kfbJq8GSTLyY9QfJCwMeZnQSL1kt4EXoxD"
                    },
                    "expiresIn": {
                        "type": "integer",
                        "description": "duracion del token",
                        "format": "int64",
                        "example": 3600
                    }
                }
            },
            "TokenRefreshRequest": {
                "required": [
                    "refreshToken"
                ],
                "type": "object",
                "properties": {
                    "refreshToken": {
                        "type": "string",
                        "description": "token de refresco",
                        "example": "3L3DBnz4d8T8bMAEkX8uityJEDZKXoucVa2Ynde6bdX8nhN8kfbJq8GSTLyY9QfJCwMeZnQSL1kt4EXoxD"
                    }
                }
            },
            "TokenRefreshResponse": {
                "type": "object",
                "properties": {
                    "accessToken": {
                        "$ref": "#/components/schemas/TokenResponse"
                    },
                    "contentToken": {
                        "$ref": "#/components/schemas/TokenResponse"
                    }
                }
            },
            "PatchRegistroVentaMasiva": {
                "required": [
                    "idEmpresa",
                    "idRegistroVentaMasiva",
                    "modalidadPago",
                    "nombre",
                    "productos",
                    "tipoPaquete",
                    "tipoVenta",
                    "valor"
                ],
                "type": "object",
                "properties": {
                    "idRegistroVentaMasiva": {
                        "type": "integer",
                        "description": "id del paquete de venta masiva",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre de paquete de venta masiva",
                        "example": "Bolsa A"
                    },
                    "idEmpresa": {
                        "type": "string",
                        "description": "id de la empresa",
                        "format": "uuid",
                        "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                    },
                    "tipoPaquete": {
                        "type": "string",
                        "description": "tipo de paquete de venta masiva",
                        "example": "CANTIDAD",
                        "enum": [
                            "CANTIDAD",
                            "DINERO"
                        ]
                    },
                    "tipoVenta": {
                        "type": "string",
                        "description": "tipo de venta masiva",
                        "example": "CORPORATIVA",
                        "enum": [
                            "CORPORATIVA",
                            "CORTESIA"
                        ]
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor de la venta masiva",
                        "format": "double",
                        "example": 70000000
                    },
                    "modalidadPago": {
                        "type": "string",
                        "description": "Modalidad de pago de la venta masiva",
                        "example": "CONTADO",
                        "enum": [
                            "CREDITO",
                            "CONTADO"
                        ]
                    },
                    "fechaLimitePago": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "Fecha limite de pago (Solo si es en modalidad CREDITO)",
                        "example": "26-04-2024"
                    },
                    "productos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRVMProducto"
                        }
                    }
                }
            },
            "PatchRegistroVentaMasivaEstado": {
                "required": [
                    "estado",
                    "idRegistroVentaMasiva"
                ],
                "type": "object",
                "properties": {
                    "idRegistroVentaMasiva": {
                        "type": "integer",
                        "description": "id del paquete de venta masiva",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del registro de venta masiva",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchRegistroVentaMasivaEstadoPago": {
                "required": [
                    "estadoPago",
                    "idRegistroVentaMasiva"
                ],
                "type": "object",
                "properties": {
                    "idRegistroVentaMasiva": {
                        "type": "integer",
                        "description": "id del paquete de venta masiva",
                        "format": "int64",
                        "example": 1
                    },
                    "estadoPago": {
                        "type": "string",
                        "description": "estado de pago de la bolsa",
                        "example": "PAGADO",
                        "enum": [
                            "PAGADO",
                            "PENDIENTE"
                        ]
                    },
                    "fechaLimitePago": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha limite de pago de la bolsa",
                        "example": "26-04-2024"
                    }
                }
            },
            "PatchVisitante": {
                "required": [
                    "apellido",
                    "genero",
                    "idVisitante",
                    "nombre",
                    "numeroIdentificacion",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "idVisitante": {
                        "type": "string",
                        "description": "id del visitante",
                        "format": "uuid",
                        "example": "8a365ba0-93ba-4c19-b1f4-67566e475a5c"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre del visitante",
                        "example": "nombre 1"
                    },
                    "apellido": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "apellido del visitante",
                        "example": "apellido 1"
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del visitante",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 3,
                        "type": "string",
                        "description": "numero de identificacion del visitante",
                        "example": "1111222333"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "type": "string",
                        "description": "direccion de correo electronico del visitante",
                        "example": "example@email.com"
                    },
                    "telefono": {
                        "maxLength": 20,
                        "minLength": 3,
                        "type": "string",
                        "description": "telefono del visitante",
                        "example": "3005557777"
                    },
                    "paisProcedencia": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "pais de procedencia del visitante",
                        "example": "Colombia"
                    },
                    "ciudadProcedencia": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "ciudad de procedencia del visitante",
                        "example": "Bogota"
                    },
                    "fechaNacimiento": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de nacimiento del visitante",
                        "example": "26-04-2024"
                    },
                    "estaturaMayor145": {
                        "type": "boolean",
                        "description": "estatura del visitante en centimetros es mayor a 145cm si/no",
                        "example": true
                    },
                    "genero": {
                        "type": "string",
                        "description": "genero del visitante",
                        "example": "M",
                        "enum": [
                            "M",
                            "F",
                            "O"
                        ]
                    }
                },
                "description": "Lista de visitantes a modificar"
            },
            "PatchVisitantesEmpresa": {
                "required": [
                    "idRegistroVentaMasiva",
                    "visitantes"
                ],
                "type": "object",
                "properties": {
                    "idRegistroVentaMasiva": {
                        "type": "integer",
                        "description": "id del paquete de venta masiva",
                        "format": "int64",
                        "example": 1
                    },
                    "visitantes": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchVisitante"
                        }
                    }
                }
            },
            "PatchRoleEstado": {
                "required": [
                    "estado",
                    "idRole"
                ],
                "type": "object",
                "properties": {
                    "idRole": {
                        "type": "integer",
                        "description": "id del rol",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del rol",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchAccountPassword": {
                "required": [
                    "idAccount",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "idAccount": {
                        "type": "string",
                        "description": "id del usuario",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    },
                    "password": {
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#¿=])[A-Za-z\\d@$!%*?&#¿=]{6,}$",
                        "type": "string",
                        "description": "contraseña",
                        "example": "Abcd1234$"
                    }
                }
            },
            "PatchAccountPasswordByUser": {
                "required": [
                    "nuevaContraseña"
                ],
                "type": "object",
                "properties": {
                    "nuevaContraseña": {
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#¿=])[A-Za-z\\d@$!%*?&#¿=]{6,}$",
                        "type": "string",
                        "description": "contraseña",
                        "example": "Abcd1234$"
                    },
                    "actualContraseña": {
                        "type": "string"
                    }
                }
            },
            "PatchMenu": {
                "required": [
                    "idMenu"
                ],
                "type": "object",
                "properties": {
                    "idMenu": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "idMenuPadre": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "menuInfo": {
                        "$ref": "#/components/schemas/PatchMenuInfo"
                    }
                }
            },
            "PatchMenuInfo": {
                "type": "object",
                "properties": {
                    "url": {
                        "maxLength": 150,
                        "minLength": 1,
                        "type": "string"
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PatchMenuEstado": {
                "required": [
                    "estado",
                    "idMenu"
                ],
                "type": "object",
                "properties": {
                    "idMenu": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchAccount": {
                "required": [
                    "email",
                    "idAccount",
                    "role"
                ],
                "type": "object",
                "properties": {
                    "idAccount": {
                        "type": "string",
                        "description": "id del usuario",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico",
                        "example": "example@email.com"
                    },
                    "role": {
                        "maxLength": 20,
                        "minLength": 3,
                        "pattern": "^[A-Za-z]+(_[A-Za-z]+){0,2}$",
                        "type": "string",
                        "description": "nombre del rol",
                        "example": "ADMIN"
                    }
                }
            },
            "PatchAccountEstado": {
                "required": [
                    "estado",
                    "idAccount"
                ],
                "type": "object",
                "properties": {
                    "idAccount": {
                        "type": "string",
                        "description": "id del usuario",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del usuario",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchAccountEmpresa": {
                "required": [
                    "email",
                    "idAccount",
                    "idEmpresa"
                ],
                "type": "object",
                "properties": {
                    "idEmpresa": {
                        "type": "string",
                        "description": "id de la empresa",
                        "format": "uuid",
                        "example": "fed60f91-cf36-4df5-8f4a-6ae81eaba453"
                    },
                    "idAccount": {
                        "type": "string",
                        "description": "id del usuario",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico",
                        "example": "example@email.com"
                    }
                }
            },
            "PatchAccountEmpresaEstado": {
                "required": [
                    "estado",
                    "idAccount",
                    "idEmpresa"
                ],
                "type": "object",
                "properties": {
                    "idEmpresa": {
                        "type": "string",
                        "description": "id de la empresa",
                        "format": "uuid",
                        "example": "fed60f91-cf36-4df5-8f4a-6ae81eaba453"
                    },
                    "idAccount": {
                        "type": "string",
                        "description": "id del usuario",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la cuenta",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchTaquilla": {
                "required": [
                    "idTaquilla",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idTaquilla": {
                        "type": "integer",
                        "description": "id de la taquilla",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre de la taquilla",
                        "example": "Taquilla A"
                    }
                }
            },
            "PatchTaquillaEstado": {
                "required": [
                    "estado",
                    "idTaquilla"
                ],
                "type": "object",
                "properties": {
                    "idTaquilla": {
                        "type": "integer",
                        "description": "id de la taquilla",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la taquilla",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchReservaTaquilla": {
                "required": [
                    "idReserva",
                    "idTaquilla",
                    "numeroIdentificacion",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "9b7c6306-0ca1-48c3-8117-03b0bbd7569a"
                    },
                    "idTaquilla": {
                        "type": "integer",
                        "description": "id de la taquilla en la cual se realiza la reserva",
                        "format": "int64",
                        "example": 1
                    },
                    "boletas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaBoletas"
                        }
                    },
                    "casillas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCasillas"
                        }
                    },
                    "vehiculos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaVehiculoAlter"
                        }
                    },
                    "serviciosAdicionales": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaServicioAdicional"
                        }
                    },
                    "combos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCombo"
                        }
                    },
                    "clienteEsVisitante": {
                        "type": "boolean",
                        "description": "si es verdadero se llena los datos de todos los visitantes con los datos del cliente",
                        "example": false
                    }
                }
            },
            "PatchMetodoPago": {
                "required": [
                    "cuentaDestino",
                    "idMetodoPago",
                    "nombre",
                    "recepcionesPago",
                    "requiereDatosAutorizacion",
                    "tipo"
                ],
                "type": "object",
                "properties": {
                    "idMetodoPago": {
                        "type": "integer",
                        "description": "id del metodo de pago",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre del metodo de pago",
                        "example": "Metodo de pago A"
                    },
                    "cuentaDestino": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "cuenta destino a la cual se transfieren los pago realizados",
                        "example": "1111444499997777"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de metodo de pago",
                        "example": "ELECTRONICO",
                        "enum": [
                            "EFECTIVO",
                            "ELECTRONICO",
                            "DATAFONO"
                        ]
                    },
                    "requiereDatosAutorizacion": {
                        "type": "boolean",
                        "description": "el metodo de pago requiere datos de autorizacion (si/no)",
                        "example": false
                    },
                    "recepcionesPago": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "maxLength": 2147483647,
                            "minLength": 1,
                            "type": "string",
                            "description": "lista de recepciones de pago asociadas al metodo de pago",
                            "enum": [
                                "TAQUILLA",
                                "PASARELA",
                                "PARTNER",
                                "PARQUEADERO"
                            ]
                        }
                    }
                }
            },
            "PatchMetodoPagoEstado": {
                "required": [
                    "estado",
                    "idMetodoPago"
                ],
                "type": "object",
                "properties": {
                    "idMetodoPago": {
                        "type": "integer",
                        "description": "id del metodo de pago",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del metodo de pago",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchDivisa": {
                "required": [
                    "abreviatura",
                    "idDivisa",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idDivisa": {
                        "type": "integer",
                        "description": "id de la divisa",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 4,
                        "type": "string",
                        "description": "nombre de la divisa",
                        "example": "Peso colombiano"
                    },
                    "abreviatura": {
                        "pattern": "^[A-Z]{3}$",
                        "type": "string",
                        "description": "abreviatura de la divisa",
                        "example": "COP"
                    }
                }
            },
            "PatchDenominacionDinero": {
                "required": [
                    "denominacion",
                    "idDenominacionDinero",
                    "idDivisa",
                    "tipo"
                ],
                "type": "object",
                "properties": {
                    "idDenominacionDinero": {
                        "type": "integer",
                        "description": "id de la denominacion de dinero",
                        "format": "int64",
                        "example": 1
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de denominacion de dinero",
                        "example": "MONEDA",
                        "enum": [
                            "BILLETE",
                            "MONEDA"
                        ]
                    },
                    "denominacion": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "valor de la denominacion de dinero",
                        "format": "double",
                        "example": 5000
                    },
                    "idDivisa": {
                        "type": "integer",
                        "description": "id de la divisa",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PatchDenominacionDineroEstado": {
                "required": [
                    "idDenominacionDinero"
                ],
                "type": "object",
                "properties": {
                    "idDenominacionDinero": {
                        "type": "integer",
                        "description": "id de la denominacion de dinero",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la denominacion de dinero",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchUbicacionRfid": {
                "required": [
                    "aforoMax",
                    "idUbicacionRfid",
                    "idUbicacionServicioRfid",
                    "lat",
                    "lng",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idUbicacionRfid": {
                        "type": "integer",
                        "description": "Id de la ubicación RFID",
                        "format": "int64",
                        "example": 1
                    },
                    "idUbicacionServicioRfid": {
                        "type": "string",
                        "description": "Id de la ubicación en el servicio RFID",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "Nombre de la ubicación",
                        "example": "Atraccion X"
                    },
                    "lat": {
                        "type": "number",
                        "description": "Latitud de la ubicación",
                        "format": "double",
                        "example": 4.123456
                    },
                    "lng": {
                        "type": "number",
                        "description": "Longitud de la ubicación",
                        "format": "double",
                        "example": -74.123456
                    },
                    "aforoMax": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Aforo máximo de la ubicación",
                        "format": "int32",
                        "example": 300
                    },
                    "idZona": {
                        "type": "string",
                        "description": "id zona",
                        "format": "uuid"
                    }
                }
            },
            "PatchUbicacionRfidEstado": {
                "required": [
                    "estado",
                    "idUbicacionRfid"
                ],
                "type": "object",
                "properties": {
                    "idUbicacionRfid": {
                        "type": "integer",
                        "description": "Id de la ubicación RFID",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "Estado de la ubicación",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchFrecuencyReadersConnect": {
                "type": "object",
                "properties": {
                    "tiempoFrecuenciaLecutra": {
                        "maximum": 120,
                        "minimum": 1,
                        "type": "integer",
                        "description": "tiempo de frecuencia en segundos en el que se realiza la lectura",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "ResultSetFrecuencyReaders": {
                "type": "object",
                "properties": {
                    "dispositivosConfigurados": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dispositivosFallidos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PatchReaderNumber": {
                "type": "object",
                "properties": {
                    "idDispositivo": {
                        "type": "integer",
                        "description": "id del dispositivo de lectura",
                        "format": "int64",
                        "example": 1
                    },
                    "numeroDispositivo": {
                        "maximum": 9,
                        "minimum": 1,
                        "type": "integer",
                        "description": "numero para asignar en configuracion interna del reader",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "PatchFrecuencyReader": {
                "type": "object",
                "properties": {
                    "idDispositivo": {
                        "type": "integer",
                        "description": "id del dispositivo de lectura",
                        "format": "int64",
                        "example": 1
                    },
                    "tiempoFrecuenciaLecutra": {
                        "maximum": 120,
                        "minimum": 1,
                        "type": "integer",
                        "description": "tiempo de frecuencia en segundos en el que se realiza la lectura",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "RfidPatchZonaEstado": {
                "required": [
                    "idZona"
                ],
                "type": "object",
                "properties": {
                    "idZona": {
                        "type": "string",
                        "description": "id de la zona",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la zona",
                        "example": "ACTIVO"
                    }
                }
            },
            "RfidPatchZona": {
                "required": [
                    "idZona",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idZona": {
                        "type": "string",
                        "description": "id de la zona",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    },
                    "nombre": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la zona",
                        "example": "zona1"
                    }
                }
            },
            "RfidPatchDispositivoLecturaEstado": {
                "required": [
                    "estado"
                ],
                "type": "object",
                "properties": {
                    "idDispositivo": {
                        "type": "integer",
                        "description": "id del dispositivo de lectura",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del dispositivo",
                        "example": "ACTIVO"
                    }
                }
            },
            "RfidPatchDispositivoLectura": {
                "required": [
                    "direccionIp",
                    "direccionMac",
                    "marca",
                    "nombre",
                    "referencia"
                ],
                "type": "object",
                "properties": {
                    "idDispositivo": {
                        "type": "integer",
                        "description": "id del dispositivo de lectura",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del dispositivo de lectura",
                        "example": "nombre1"
                    },
                    "referencia": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "referencia del dispositivo",
                        "example": "Referenia1"
                    },
                    "direccionMac": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "diraccion MAC unica del dispositivo",
                        "example": "abcde1234"
                    },
                    "direccionIp": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "direccion ip del dispositivo",
                        "example": "127.0.0.1"
                    },
                    "marca": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "marca del dispositivo",
                        "example": "Speedwork"
                    },
                    "idUbicacion": {
                        "type": "string",
                        "description": "id ubicacion",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    },
                    "tipoDispositivo": {
                        "type": "string"
                    }
                }
            },
            "RfidPatchAntenaEstado": {
                "type": "object",
                "properties": {
                    "idAntena": {
                        "type": "integer",
                        "description": "id de la antena",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la antena",
                        "example": "ACTIVO"
                    }
                }
            },
            "RfidPatchAntena": {
                "required": [
                    "canal",
                    "idDipositivoLectura",
                    "idUbicacionDispositivio",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idAntena": {
                        "type": "integer",
                        "description": "id de la antena",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la antena",
                        "example": "antena1"
                    },
                    "canal": {
                        "maximum": 16,
                        "minimum": 1,
                        "type": "integer",
                        "description": "numero de canal",
                        "format": "int32",
                        "example": 1
                    },
                    "idUbicacionDispositivio": {
                        "type": "string",
                        "description": "id ubicacion",
                        "format": "uuid",
                        "example": "9440b3dd-da8b-46ac-ac1a-06ec7ebd6c1e"
                    },
                    "idDipositivoLectura": {
                        "type": "integer",
                        "description": "id dispositivoLectura",
                        "format": "int64"
                    }
                }
            },
            "LocalTime": {
                "type": "object",
                "properties": {
                    "hour": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minute": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "second": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nano": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "Hora de envio del reporte programado",
                "example": "09:00"
            },
            "PatchReporteProgramado": {
                "required": [
                    "correos",
                    "hora",
                    "id",
                    "tipoPeriodicidad"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "id del reporte programado a modificar",
                        "format": "int64"
                    },
                    "tipoPeriodicidad": {
                        "type": "string",
                        "description": "Tipo de periodicidad del reporte programado",
                        "enum": [
                            "MENSUAL",
                            "SEMANAL",
                            "DIARIO"
                        ]
                    },
                    "hora": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "diaSemana": {
                        "type": "string",
                        "description": "Dia de la semana en que se envia el reporte programado",
                        "enum": [
                            "LUNES",
                            "MARTES",
                            "MIERCOLES",
                            "JUEVES",
                            "VIERNES",
                            "SABADO",
                            "DOMINGO"
                        ]
                    },
                    "diaMes": {
                        "maximum": 28,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Dia del mes en que se envia el reporte programado",
                        "format": "int32"
                    },
                    "correos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "description": "Correos a los que se envia el reporte programado",
                        "example": [
                            "example@email.com"
                        ],
                        "items": {
                            "type": "object",
                            "description": "Correos a los que se envia el reporte programado",
                            "example": [
                                "example@email.com"
                            ]
                        }
                    }
                }
            },
            "PatchReporteProgramadoEstado": {
                "required": [
                    "estado",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "id del reporte programado a modificar",
                        "format": "int64"
                    },
                    "estado": {
                        "type": "string",
                        "description": "nuevo estado del reporte programado",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchAccountPasswordToken": {
                "required": [
                    "token"
                ],
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Token de autorizacion para restablecimiento contraseña"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "PatchPartner": {
                "required": [
                    "idPartner",
                    "nombre",
                    "tarifas"
                ],
                "type": "object",
                "properties": {
                    "idPartner": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "tarifas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostTarifaPartner"
                        }
                    }
                }
            },
            "PatchPartnerEstado": {
                "required": [
                    "estado",
                    "idPartner"
                ],
                "type": "object",
                "properties": {
                    "idPartner": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "INACTIVO",
                            "ACTIVO"
                        ]
                    }
                }
            },
            "PatchZonaParqueadero": {
                "required": [
                    "aforoMax",
                    "idTipoServicio",
                    "idZonaParqueadero",
                    "listaBlancaSalidaIndexCode",
                    "listaNegraEntradaIndexCode",
                    "nombre",
                    "parkingLotIndexCode",
                    "reservaMax",
                    "tiempoMaxSalidaSinCobro"
                ],
                "type": "object",
                "properties": {
                    "idZonaParqueadero": {
                        "type": "integer",
                        "description": "id de la zona de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la zona de parqueadero",
                        "example": "Zona de paqueadero A"
                    },
                    "idTipoServicio": {
                        "type": "integer",
                        "description": "id del tipo de servicio que se ofrece en esta zona de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "aforoMax": {
                        "type": "integer",
                        "description": "cantidad maxima de vehiculos que permite esta zona de parqueaderos",
                        "format": "int32",
                        "example": 40
                    },
                    "tiempoMaxSalidaSinCobro": {
                        "type": "integer",
                        "description": "tiempo maximo de estadia en el parqueadero sin cobro en minutos",
                        "format": "int32",
                        "example": 15
                    },
                    "reservaMax": {
                        "type": "integer",
                        "description": "cantidad maxima reservable de espacios en la zona de parqueadero por dia",
                        "format": "int32",
                        "example": 30
                    },
                    "parkingLotIndexCode": {
                        "type": "string",
                        "description": "id del parqueadero de hikcentral",
                        "example": "1"
                    },
                    "listaNegraEntradaIndexCode": {
                        "type": "string",
                        "description": "id del grupo de vehiculos de la lista de negra de entrada",
                        "example": "1"
                    },
                    "listaBlancaSalidaIndexCode": {
                        "type": "string",
                        "description": "id del grupo de vehiculos de la lista de blanca de salida",
                        "example": "1"
                    }
                }
            },
            "PatchZonaParqueaderoEstado": {
                "required": [
                    "estado",
                    "idZonaParqueadero"
                ],
                "type": "object",
                "properties": {
                    "idZonaParqueadero": {
                        "type": "integer",
                        "description": "id de la zona de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la zona de parqueadero",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchTipoVehiculo": {
                "required": [
                    "idTipoVehiculo",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idTipoVehiculo": {
                        "type": "integer",
                        "description": "id del tipo de vehiculo",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del tipo de vehiculo",
                        "example": "Tipo de vehiculo A"
                    }
                }
            },
            "PatchTipoVehiculoEstado": {
                "required": [
                    "estado",
                    "idTipoVehiculo"
                ],
                "type": "object",
                "properties": {
                    "idTipoVehiculo": {
                        "type": "integer",
                        "description": "id del tipo de vehiculo",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del tipo de vehiculo",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchTipoServicioParqueadero": {
                "required": [
                    "descripcion",
                    "idTipoServicio",
                    "nombre",
                    "precio",
                    "tiposVehiculo"
                ],
                "type": "object",
                "properties": {
                    "idTipoServicio": {
                        "type": "integer",
                        "description": "id del tipo de servicio de paqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del tipo de servicio de parqueadero",
                        "example": "Tipo de servicio X"
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 3,
                        "type": "string",
                        "description": "descripcion del tipo de servicio de parqueadero",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "precio": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "precio del tipo de servicio de parqueadero",
                        "format": "double",
                        "example": 30000
                    },
                    "tiposVehiculo": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "id de tipos de vehiculo que permite el servicio",
                            "example": 1
                        }
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PatchTipoServicioParqueaderoEstado": {
                "required": [
                    "estado",
                    "idTipoServicio"
                ],
                "type": "object",
                "properties": {
                    "idTipoServicio": {
                        "type": "integer",
                        "description": "id del tipo de servicio de paqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del tipo de servicio de paqueadero",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchTipoNovedadParqueadero": {
                "required": [
                    "idTipoNovedad",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idTipoNovedad": {
                        "type": "integer",
                        "description": "id del tipo de novedad",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del tipo de novedad",
                        "example": "Tipo de novedad A"
                    }
                }
            },
            "PatchTipoNovedadParqueaderoEstado": {
                "required": [
                    "estado",
                    "idTipoNovedad"
                ],
                "type": "object",
                "properties": {
                    "idTipoNovedad": {
                        "type": "integer",
                        "description": "id del tipo de novedad",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del tipo de novedad",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchRegistroVehiculoSalida": {
                "required": [
                    "idZonaParqueadero",
                    "placa"
                ],
                "type": "object",
                "properties": {
                    "placa": {
                        "maxLength": 8,
                        "minLength": 5,
                        "pattern": "^(?:[A-Z]{3}\\d{3}|[A-Z]{2}\\d{4}|[A-Z]\\d{4}|[A-Z]\\d{5}|[A-Z]{3}\\d{2}[A-Z])$",
                        "type": "string",
                        "description": "placa del vehiculo",
                        "example": "AAA111"
                    },
                    "idZonaParqueadero": {
                        "type": "integer",
                        "description": "id de la zona de parqueadero",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PatchNovedadParqueadero": {
                "required": [
                    "descripcion",
                    "fechaHoraReporte",
                    "idNovedad",
                    "idTipoNovedad",
                    "nombre",
                    "numeroIdentificacion",
                    "placa",
                    "propietario",
                    "telefono",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "idNovedad": {
                        "type": "integer",
                        "description": "id de la novedad",
                        "format": "int64",
                        "example": 1
                    },
                    "idTipoNovedad": {
                        "type": "integer",
                        "description": "id del tipo de novedad",
                        "format": "int64",
                        "example": 1
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string",
                        "description": "descripcion de la novedad",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "fechaHoraReporte": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha y hora de reporte de la novedad",
                        "example": "26-04-2024 16:33:02"
                    },
                    "placa": {
                        "maxLength": 6,
                        "minLength": 5,
                        "type": "string",
                        "description": "placa del vehiculo implicado en la novedad",
                        "example": "AAA111"
                    },
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva implicada en la novedad",
                        "format": "uuid",
                        "example": "927e1835-9699-49d1-83d3-f08830878ebc"
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion de quien reporta",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "numero de identificacion de quien reporta",
                        "example": "1111111111"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de quien reporta",
                        "example": "Nombre 1"
                    },
                    "propietario": {
                        "type": "boolean",
                        "description": "quien reporta es el propietario (si/no)",
                        "example": false
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono de quien reporta",
                        "example": "3005557777"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico de quien reporta",
                        "example": "example@email.com"
                    }
                }
            },
            "PatchNovedadCerrar": {
                "required": [
                    "idNovedad"
                ],
                "type": "object",
                "properties": {
                    "idNovedad": {
                        "type": "integer",
                        "description": "id de la novedad",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PatchNovedadActividad": {
                "required": [
                    "descripcion",
                    "fechaHoraFin",
                    "fechaHoraInicio",
                    "idActividad"
                ],
                "type": "object",
                "properties": {
                    "idActividad": {
                        "type": "integer",
                        "description": "id de la actividad",
                        "format": "int64",
                        "example": 1
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string",
                        "description": "descripcion de la actividad",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "fechaHoraInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha y hora de inicio de la actividad",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fechaHoraFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha y hora de finalizacion de la actividad",
                        "example": "26-04-2024 16:33:02"
                    }
                }
            },
            "PatchMotivoLiberacionVehiculo": {
                "required": [
                    "idMotivoLiberacionVehiculo",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idMotivoLiberacionVehiculo": {
                        "type": "integer",
                        "description": "id del motivo de liberacion del vehiculo",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 120,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre del motivo de liberacion del vehiculo",
                        "example": "Motivo 1"
                    }
                }
            },
            "PatchMotivoLiberacionVehiculoEstado": {
                "required": [
                    "estado",
                    "idMotivoLiberacionVehiculo"
                ],
                "type": "object",
                "properties": {
                    "idMotivoLiberacionVehiculo": {
                        "type": "integer",
                        "description": "id del motivo de liberacion del vehiculo",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del motivo de liberacion del vehiculo",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchOperadorParqueadero": {
                "required": [
                    "email",
                    "idOperador",
                    "nombre",
                    "telefono"
                ],
                "type": "object",
                "properties": {
                    "idOperador": {
                        "type": "string",
                        "description": "id del operador",
                        "format": "uuid",
                        "example": "8a365ba0-93ba-4c19-b1f4-67566e475a5c"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del operador",
                        "example": "nombre1"
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono del operador",
                        "example": "3005557777"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del operador",
                        "example": "example@email.com"
                    }
                }
            },
            "PatchOperadorParqueaderoEstado": {
                "required": [
                    "estado",
                    "idOperador"
                ],
                "type": "object",
                "properties": {
                    "idOperador": {
                        "type": "string",
                        "description": "id del operador",
                        "format": "uuid",
                        "example": "8a365ba0-93ba-4c19-b1f4-67566e475a5c"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del operador",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchLectorRfid": {
                "required": [
                    "hid",
                    "idCasillero",
                    "idLectorRfid",
                    "marca",
                    "nombre",
                    "referencia",
                    "serial"
                ],
                "type": "object",
                "properties": {
                    "idLectorRfid": {
                        "type": "integer",
                        "description": "Id del lector rfid",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre unico del lector rfid",
                        "example": "nombre1"
                    },
                    "hid": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "id hardware lector rfid",
                        "example": "WKT-1232"
                    },
                    "marca": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "marca del lector rfid",
                        "example": "nombre1"
                    },
                    "referencia": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "referencia del lector rfid",
                        "example": "nombre1"
                    },
                    "serial": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "serial lector rfid",
                        "example": "12345abcdef"
                    },
                    "idCasillero": {
                        "type": "integer",
                        "description": "Id de un casillero",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PatchLectorRfidEstado": {
                "required": [
                    "idLectorRfid"
                ],
                "type": "object",
                "properties": {
                    "idLectorRfid": {
                        "type": "integer",
                        "description": "Id del lector rfid",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del lector rfid",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO",
                            "MANTENIMIENTO"
                        ]
                    }
                }
            },
            "PatchManillaLogo": {
                "required": [
                    "fechaFinal",
                    "fechaInicial",
                    "id",
                    "imagen",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id del logo para manilla",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "Nombre del logo para manilla",
                        "example": "nombre1"
                    },
                    "fechaInicial": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha inicial para uso del logo",
                        "example": "26-04-2024"
                    },
                    "fechaFinal": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha final para uso del logo",
                        "example": "26-04-2024"
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PatchManillaLogoEstado": {
                "required": [
                    "idManillaLogo"
                ],
                "type": "object",
                "properties": {
                    "idManillaLogo": {
                        "type": "integer",
                        "description": "Id de el logo para manilla",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del logo para manilla",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchImpresora": {
                "required": [
                    "direccionIP",
                    "idImpresora",
                    "nombre",
                    "referencia",
                    "serial"
                ],
                "type": "object",
                "properties": {
                    "idImpresora": {
                        "type": "integer",
                        "description": "Id de impresora",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la impresora",
                        "example": "nombre1"
                    },
                    "direccionIP": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "direccion IP",
                        "example": "172.10.30.21"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado actual de la impresora",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO",
                            "MANTENIMIENTO"
                        ]
                    },
                    "marca": {
                        "type": "string",
                        "description": "marca de la impresora",
                        "example": "ZEBRA",
                        "enum": [
                            "ZEBRA",
                            "CHAINWAY",
                            "GAINSCHA",
                            "SAT"
                        ]
                    },
                    "referencia": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "referencia de la impresora",
                        "example": "ZD621R"
                    },
                    "serial": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "serial de la impresora",
                        "example": "123456789"
                    },
                    "tipoImpresora": {
                        "type": "string",
                        "description": "tipo de impresora",
                        "example": "IMPRESORA_MANILLAS",
                        "enum": [
                            "IMPRESORA_MANILLAS",
                            "IMPRESORA_BOLETAS"
                        ]
                    }
                }
            },
            "PatchImpresoraEstado": {
                "required": [
                    "idImpresora"
                ],
                "type": "object",
                "properties": {
                    "idImpresora": {
                        "type": "integer",
                        "description": "Id de impresora",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de impresora",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO",
                            "MANTENIMIENTO"
                        ]
                    }
                }
            },
            "PatchHCVisitante": {
                "required": [
                    "idVisitante"
                ],
                "type": "object",
                "properties": {
                    "idVisitante": {
                        "type": "string",
                        "description": "id del visitante",
                        "format": "uuid",
                        "example": "7d275c4d-f35b-4117-9189-59a9d9ccbe84"
                    }
                }
            },
            "PatchHCCamaraPlacas": {
                "required": [
                    "cameraIndexCode",
                    "idCamaraPlacas",
                    "idZonaParqueadero",
                    "nombre",
                    "tipo"
                ],
                "type": "object",
                "properties": {
                    "idCamaraPlacas": {
                        "type": "integer",
                        "description": "id de la camara de placas",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la camara de placas",
                        "example": "Camara de placas 1"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de uso de la camara de placas",
                        "example": "ENTRADA",
                        "enum": [
                            "ENTRADA",
                            "SALIDA"
                        ]
                    },
                    "idZonaParqueadero": {
                        "type": "integer",
                        "description": "id de la zona de parqueadero",
                        "format": "int64",
                        "example": 1
                    },
                    "cameraIndexCode": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "id la camara de placas de hikcentral",
                        "example": "1"
                    }
                }
            },
            "PatchHCCamaraPlacasEstado": {
                "required": [
                    "estado",
                    "idCamaraPlacas"
                ],
                "type": "object",
                "properties": {
                    "idCamaraPlacas": {
                        "type": "integer",
                        "description": "id de la camara de placas",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la camara de placas",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchHCBiometrico": {
                "required": [
                    "doorIndexCode",
                    "idBiometrico",
                    "nombre",
                    "tipo"
                ],
                "type": "object",
                "properties": {
                    "idBiometrico": {
                        "type": "integer",
                        "description": "id del biometrico",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del biometrico",
                        "example": "Biometrico 1"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de uso del biometrico",
                        "example": "ENTRADA",
                        "enum": [
                            "ENTRADA",
                            "CASILLERO",
                            "ATRACCION",
                            "VENDING_MACHINE",
                            "INDEFINIDO"
                        ]
                    },
                    "doorIndexCode": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "id del biometrico de hikcentral (door)",
                        "example": "1"
                    }
                }
            },
            "PatchHCBiometricoEstado": {
                "required": [
                    "estado",
                    "idBiometrico"
                ],
                "type": "object",
                "properties": {
                    "idBiometrico": {
                        "type": "integer",
                        "description": "id del biometrico",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del biometrico",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchEmpresa": {
                "required": [
                    "email",
                    "id",
                    "nombre",
                    "razonSocial",
                    "telefono"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "id de la empresa",
                        "format": "uuid",
                        "example": "fed60f91-cf36-4df5-8f4a-6ae81eaba453"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la empresa",
                        "example": "empresa"
                    },
                    "razonSocial": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "razon social de la empresa",
                        "example": "empresa"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico de la empresa",
                        "example": "example@email.com"
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono de la empresa",
                        "example": "3005557777"
                    },
                    "idCiudad": {
                        "maxLength": 15,
                        "minLength": 1,
                        "type": "string",
                        "description": "id de la ciudad de la empresa",
                        "example": "11001.11.Co"
                    },
                    "direccion": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "direccion de la empresa",
                        "example": "Calle 1 # 1 - 1"
                    }
                }
            },
            "PatchEmpresaEstado": {
                "required": [
                    "estado",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "id de la empresa",
                        "format": "uuid",
                        "example": "fed60f91-cf36-4df5-8f4a-6ae81eaba453"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la empresa",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchCliente": {
                "required": [
                    "email",
                    "numeroIdentificacion",
                    "primerApellido",
                    "primerNombre",
                    "telefono",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "primerNombre": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "primer nombre del cliente",
                        "example": "Nombre 1"
                    },
                    "segundoNombre": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "segundo nombre del cliente",
                        "example": "Nombre 2"
                    },
                    "primerApellido": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "primer apellido del cliente",
                        "example": "Apellido 1"
                    },
                    "segundoApellido": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "segundo apellido del cliente",
                        "example": "Apellido 2"
                    },
                    "email": {
                        "maxLength": 255,
                        "minLength": 5,
                        "pattern": "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                        "type": "string",
                        "description": "direccion de correo electronico del cliente",
                        "example": "example@email.com"
                    },
                    "telefono": {
                        "pattern": "^\\+?\\d{5,20}$",
                        "type": "string",
                        "description": "telefono del cliente",
                        "example": "3005557777"
                    },
                    "genero": {
                        "type": "string",
                        "description": "genero del cliente",
                        "example": "M",
                        "enum": [
                            "M",
                            "F",
                            "O"
                        ]
                    },
                    "idCiudad": {
                        "maxLength": 15,
                        "minLength": 1,
                        "type": "string",
                        "description": "id de la ciudad del cliente",
                        "example": "11001.11.Co"
                    },
                    "direccion": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "direccion del cliente",
                        "example": "Calle 1 # 1 - 1"
                    },
                    "fechaNacimiento": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de nacimiento del cliente",
                        "example": "26-04-2024"
                    }
                }
            },
            "PatchClienteEstado": {
                "required": [
                    "estado",
                    "numeroIdentificacion",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del cliente",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchVisitanteRegistroEntrada": {
                "required": [
                    "foto",
                    "idVisitante"
                ],
                "type": "object",
                "properties": {
                    "idVisitante": {
                        "type": "string",
                        "description": "id del visitante",
                        "format": "uuid",
                        "example": "8a365ba0-93ba-4c19-b1f4-67566e475a5c"
                    },
                    "foto": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PatchVisistanteCasilla": {
                "required": [
                    "idCasilla",
                    "idCasillero",
                    "idVisitante"
                ],
                "type": "object",
                "properties": {
                    "idVisitante": {
                        "type": "string",
                        "description": "id del visitante",
                        "format": "uuid",
                        "example": "8a365ba0-93ba-4c19-b1f4-67566e475a5c"
                    },
                    "idCasilla": {
                        "type": "integer",
                        "description": "id de la casilla que se asignara al visitante (debe ser una casilla asociada con la reserva del visitante)",
                        "format": "int64"
                    },
                    "idCasillero": {
                        "type": "integer",
                        "description": "id del casillero",
                        "format": "int64"
                    }
                }
            },
            "PatchAutoasignarCasilla": {
                "required": [
                    "idReserva"
                ],
                "type": "object",
                "properties": {
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "9b7c6306-0ca1-48c3-8117-03b0bbd7569a"
                    }
                }
            },
            "PatchUbicacionCasillero": {
                "required": [
                    "idUbicacionCasillero",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idUbicacionCasillero": {
                        "type": "integer",
                        "description": "id de la ubicacion de casilleros",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la ubicacion de casilleros",
                        "example": "Ubicacion A"
                    }
                }
            },
            "PatchUbicacionCasilleroEstado": {
                "required": [
                    "estado",
                    "idUbicacionCasillero"
                ],
                "type": "object",
                "properties": {
                    "idUbicacionCasillero": {
                        "type": "integer",
                        "description": "id de la ubicacion de casilleros",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la ubicacion de casilleros",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchTipoCasilla": {
                "required": [
                    "descripcion",
                    "idTipoCasilla",
                    "nombre",
                    "precio"
                ],
                "type": "object",
                "properties": {
                    "idTipoCasilla": {
                        "type": "integer",
                        "description": "id del tipo de casilla",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del tipo de casilla",
                        "example": "Tipo de casilla A"
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 3,
                        "type": "string",
                        "description": "descripcion del tipo de casilla",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "precio": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "precio del tipo de casilla",
                        "format": "double",
                        "example": 30000
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PatchTipoCasillaEstado": {
                "required": [
                    "estado",
                    "idTipoCasilla"
                ],
                "type": "object",
                "properties": {
                    "idTipoCasilla": {
                        "type": "integer",
                        "description": "id del tipo de casilla",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del tipo de casilla",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchTipoBoleta": {
                "required": [
                    "hikcentralPrivilegeGroupId",
                    "idCategoriaEdad",
                    "idCategoriaEstatura",
                    "idTipoBoleta",
                    "precio"
                ],
                "type": "object",
                "properties": {
                    "idTipoBoleta": {
                        "type": "integer",
                        "description": "id del tipo de boleta",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre del tipo de boleta",
                        "example": "Tipo de boleta A"
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 3,
                        "type": "string",
                        "description": "descripcion del tipo de boleta",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "precio": {
                        "type": "number",
                        "description": "precio del tipo de boleta",
                        "format": "double",
                        "example": 30000
                    },
                    "idCategoriaEdad": {
                        "type": "integer",
                        "description": "id de la categoria de edad",
                        "format": "int64",
                        "example": 1
                    },
                    "idCategoriaEstatura": {
                        "type": "integer",
                        "description": "id de la categoria de estatura",
                        "format": "int64",
                        "example": 1
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    },
                    "hikcentralPrivilegeGroupId": {
                        "type": "string",
                        "description": "id del grupo de privilegios de hikcentral",
                        "example": "1"
                    },
                    "ventaFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de inicio de venta del tipo de boleta",
                        "example": "26-04-2024"
                    },
                    "ventaFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de fin de venta del tipo de boleta",
                        "example": "26-04-2024"
                    },
                    "consumoFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de inicio de consumo del tipo de boleta",
                        "example": "26-04-2024"
                    },
                    "consumoFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de fin de consumo del tipo de boleta",
                        "example": "26-04-2024"
                    },
                    "excepcionesDiasSemana": {
                        "maxItems": 2,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PExepcionesDiasSemana"
                        }
                    },
                    "activacionDesactivacionAutomatica": {
                        "type": "boolean",
                        "description": "permitir activacion y desactivacion automatica del tipo de boleta"
                    }
                }
            },
            "PatchTipoBoletaEstado": {
                "required": [
                    "estado",
                    "idTipoBoleta"
                ],
                "type": "object",
                "properties": {
                    "idTipoBoleta": {
                        "type": "integer",
                        "description": "id del tipo de boleta",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del tipo de boleta",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchServicioAdicional": {
                "required": [
                    "descripcion",
                    "idCategoriaServicio",
                    "idServicioAdicional",
                    "nombre",
                    "precio"
                ],
                "type": "object",
                "properties": {
                    "idServicioAdicional": {
                        "type": "integer",
                        "description": "id del servicio adicional",
                        "format": "int64",
                        "example": 1
                    },
                    "idCategoriaServicio": {
                        "type": "integer",
                        "description": "id de la categoria del servicio adicional",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre del servicio adicional",
                        "example": "Servicio Adicional X"
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 3,
                        "type": "string",
                        "description": "descripcion del servicio adicional",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "precio": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "precio del servicio adicional",
                        "format": "double",
                        "example": 30000
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PatchServicioAdicionalEstado": {
                "required": [
                    "estado",
                    "idServicioAdicional"
                ],
                "type": "object",
                "properties": {
                    "idServicioAdicional": {
                        "type": "integer",
                        "description": "id del servicio adicional",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del servicio adicional",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchReserva": {
                "required": [
                    "idReserva",
                    "numeroIdentificacion",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "9b7c6306-0ca1-48c3-8117-03b0bbd7569a"
                    },
                    "boletas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaBoletas"
                        }
                    },
                    "casillas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCasillas"
                        }
                    },
                    "vehiculos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaVehiculo"
                        }
                    },
                    "serviciosAdicionales": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaServicioAdicional"
                        }
                    },
                    "combos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCombo"
                        }
                    },
                    "clienteEsVisitante": {
                        "type": "boolean",
                        "description": "si es verdadero se llena los datos de todos los visitantes con los datos del cliente",
                        "example": false
                    }
                }
            },
            "PatchReservaVehiculo": {
                "required": [
                    "idReserva",
                    "idReservaVehiculo",
                    "idTipoVehiculo",
                    "placa"
                ],
                "type": "object",
                "properties": {
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "1e9a3afa-210e-4ae7-8544-50a4e26478cd"
                    },
                    "idReservaVehiculo": {
                        "type": "string",
                        "description": "id de la reserva de vehiculo",
                        "format": "uuid",
                        "example": "80ebdca9-7647-4be2-9f2a-8fa856672a2b"
                    },
                    "idTipoVehiculo": {
                        "type": "integer",
                        "description": "id del tipo de vehiculo del vehiculo que se asignara a la reserva de vehiculo",
                        "format": "int64",
                        "example": 1
                    },
                    "placa": {
                        "pattern": "^(?:[A-Z]{3}\\d{3}|[A-Z]{2}\\d{4}|[A-Z]\\d{4}|[A-Z]\\d{5}|[A-Z]{3}\\d{2}[A-Z])$",
                        "type": "string",
                        "description": "placa del vehiculo que se asignara a la reserva de vehiculo",
                        "example": "AAA111"
                    },
                    "idVisitante": {
                        "type": "string",
                        "description": "id del visitante que se hara responsable del vehiculo",
                        "format": "uuid",
                        "example": "e210c03a-82e5-4c81-a6e5-fbce44a88073"
                    }
                }
            },
            "PatchReservaServicioAdicional": {
                "required": [
                    "idReserva",
                    "idReservaServicioAdicional",
                    "idVisitante"
                ],
                "type": "object",
                "properties": {
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "1e9a3afa-210e-4ae7-8544-50a4e26478cd"
                    },
                    "idReservaServicioAdicional": {
                        "type": "string",
                        "description": "id de la reserva de servicio adicional",
                        "format": "uuid",
                        "example": "80ebdca9-7647-4be2-9f2a-8fa856672a2b"
                    },
                    "idVisitante": {
                        "type": "string",
                        "description": "id del visitante al que se le asignara el servicio adicional",
                        "format": "uuid",
                        "example": "e210c03a-82e5-4c81-a6e5-fbce44a88073"
                    }
                }
            },
            "PatchReservaProducto": {
                "required": [
                    "idReserva",
                    "numeroIdentificacion",
                    "productos",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "9b7c6306-0ca1-48c3-8117-03b0bbd7569a"
                    },
                    "productos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaProducto"
                        }
                    },
                    "clienteEsVisitante": {
                        "type": "boolean",
                        "description": "si es verdadero se llena los datos de todos los visitantes con los datos del cliente",
                        "example": false
                    }
                }
            },
            "PatchReservaCasillaReasignacion": {
                "required": [
                    "idCasilla",
                    "idReservaCasilla"
                ],
                "type": "object",
                "properties": {
                    "idReservaCasilla": {
                        "type": "string",
                        "description": "id de la reserva de casilla",
                        "format": "uuid",
                        "example": "9b7c6306-0ca1-48c3-8117-03b0bbd7569a"
                    },
                    "idCasilla": {
                        "type": "integer",
                        "description": "id de la nueva casilla a asignar",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PatchReservaFecha": {
                "required": [
                    "fecha",
                    "idReserva"
                ],
                "type": "object",
                "properties": {
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "9b7c6306-0ca1-48c3-8117-03b0bbd7569a"
                    },
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de la reserva",
                        "example": "26-04-2024"
                    },
                    "sinRestriccionHoras": {
                        "type": "boolean",
                        "description": "indica si se debe aplicar restricciones de horario",
                        "example": false
                    }
                }
            },
            "PatchReservaAlter": {
                "required": [
                    "idReserva",
                    "numeroIdentificacion",
                    "tipoIdentificacion"
                ],
                "type": "object",
                "properties": {
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9A-Z-]+$",
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "9b7c6306-0ca1-48c3-8117-03b0bbd7569a"
                    },
                    "boletas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaBoletas"
                        }
                    },
                    "casillas": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCasillas"
                        }
                    },
                    "vehiculos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaVehiculoAlter"
                        }
                    },
                    "serviciosAdicionales": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaServicioAdicional"
                        }
                    },
                    "combos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PRReservaCombo"
                        }
                    },
                    "clienteEsVisitante": {
                        "type": "boolean",
                        "description": "si es verdadero se llena los datos de todos los visitantes con los datos del cliente",
                        "example": false
                    }
                }
            },
            "PatchRegistrarEntradaVisitante": {
                "required": [
                    "idBoleta"
                ],
                "type": "object",
                "properties": {
                    "idBoleta": {
                        "type": "string",
                        "description": "id de la boleta",
                        "format": "uuid",
                        "example": "8a365ba0-93ba-4c19-b1f4-67566e475a5c"
                    }
                }
            },
            "PatchDiponibilidadSemana": {
                "required": [
                    "domingo",
                    "jueves",
                    "lunes",
                    "martes",
                    "miercoles",
                    "sabado",
                    "viernes"
                ],
                "type": "object",
                "properties": {
                    "lunes": {
                        "type": "boolean",
                        "description": "el dia lunes se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "martes": {
                        "type": "boolean",
                        "description": "el dia martes se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "miercoles": {
                        "type": "boolean",
                        "description": "el dia miercoles se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "jueves": {
                        "type": "boolean",
                        "description": "el dia jueves se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "viernes": {
                        "type": "boolean",
                        "description": "el dia viernes se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "sabado": {
                        "type": "boolean",
                        "description": "el dia sabado se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "domingo": {
                        "type": "boolean",
                        "description": "el dia domingo se ofrece disponibilidad para reservas (si/no)",
                        "example": false
                    }
                }
            },
            "PatchDescuento": {
                "required": [
                    "aplicarConCodigo",
                    "aplicarConVigencia",
                    "clientesObjetivo",
                    "codigo",
                    "idDescuento",
                    "nombre",
                    "tipo",
                    "tiposProducto",
                    "valor"
                ],
                "type": "object",
                "properties": {
                    "idDescuento": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del descuento",
                        "example": "Descuento A"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de descuento",
                        "example": "PORCENTAJE",
                        "enum": [
                            "PORCENTAJE",
                            "MONTO_FIJO"
                        ]
                    },
                    "aplicarConCodigo": {
                        "type": "boolean",
                        "description": "determina si el descuento se aplica usando el codigo, de lo contrario se aplicara a todas las compras de productos que cumplan con las condiciones",
                        "example": true
                    },
                    "codigo": {
                        "pattern": "^[A-Z0-9]{10}$",
                        "type": "string",
                        "description": "codigo del descuento",
                        "example": "D1AHF524A0"
                    },
                    "aplicarConVigencia": {
                        "type": "boolean",
                        "description": "determina si el descuento se aplica usando vigencia de tiempo, de lo contrario se aplicara a todas las compras de productos sin importar la fecha",
                        "example": true
                    },
                    "vigenciaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de inicio de vigencia del descuento",
                        "example": "26-04-2024 16:33:02"
                    },
                    "vigenciaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de finalizacion de vigencia del descuento",
                        "example": "26-04-2024 16:33:02"
                    },
                    "tiposProducto": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PDTipoProductoCantidadMax"
                        }
                    },
                    "valor": {
                        "maximum": 9999999,
                        "exclusiveMaximum": false,
                        "minimum": 1,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "valor del descuento",
                        "format": "double",
                        "example": 20
                    },
                    "consumoMax": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "numero de consumos maximo del descuento, 0 para consumo ilimitado",
                        "format": "int32",
                        "example": 100
                    },
                    "consumoMaxCliente": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "numero de consumos maximo por cliente, 0 para consumo ilimitado",
                        "format": "int32",
                        "example": 1
                    },
                    "clientesObjetivo": {
                        "type": "boolean",
                        "description": "determina si el descuento se aplica a los clientes objetivo, de lo contrario se aplicara a todos los clientes",
                        "example": false
                    },
                    "clientesCompraronEnFechas": {
                        "type": "boolean",
                        "description": "determina si los clientes objetivo seran los que hayan comprado dentro de el rango de fechas especificado (si/no)",
                        "example": false
                    },
                    "ccefFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de inicio en la que los clientes objetivo compraron",
                        "example": "26-04-2024 16:33:02"
                    },
                    "ccefFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de finalizacion en la que los clientes objetivo compraron",
                        "example": "26-04-2024 16:33:02"
                    },
                    "clientesEspecificos": {
                        "type": "boolean",
                        "description": "determina si los clientes objetivo seran clientes especificos (si/no)",
                        "example": false
                    },
                    "ceExtension": {
                        "type": "string",
                        "description": "extension del archivo plano para la carga de clientes especificos",
                        "example": "XLSX",
                        "enum": [
                            "CSV",
                            "XLSX"
                        ]
                    },
                    "ceBase64Data": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "datos binarios del archivo plano para carga de clientes especificos en base64",
                        "example": "UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAAALAAAAdGVzdC50eHRVVAkAA2NvbnRlbnQvZXBvY2g"
                    }
                }
            },
            "PatchDescuentoEstado": {
                "required": [
                    "estado",
                    "idDescuento"
                ],
                "type": "object",
                "properties": {
                    "idDescuento": {
                        "type": "string",
                        "description": "id del descuento",
                        "format": "uuid",
                        "example": "268fdeef-978b-41cf-966d-b82bdc47b835"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del descuento",
                        "example": "ACTIVO",
                        "enum": [
                            "INACTIVO",
                            "ACTIVO"
                        ]
                    }
                }
            },
            "PatchCondicionAcceso": {
                "required": [
                    "idCondicionAcceso"
                ],
                "type": "object",
                "properties": {
                    "idCondicionAcceso": {
                        "type": "integer",
                        "description": "id de la condicion de acceso",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre de la condicion de acceso",
                        "example": "Condicion de acceso A"
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PatchCondicionAccesoEstado": {
                "required": [
                    "estado",
                    "idCondicionAcceso"
                ],
                "type": "object",
                "properties": {
                    "idCondicionAcceso": {
                        "type": "integer",
                        "description": "id de la condicion de acceso",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la condicion de acceso",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchComboProductos": {
                "required": [
                    "descripcion",
                    "idCombo",
                    "nombre",
                    "precio",
                    "productos"
                ],
                "type": "object",
                "properties": {
                    "idCombo": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre del combo",
                        "example": "Combo A"
                    },
                    "descripcion": {
                        "maxLength": 255,
                        "minLength": 3,
                        "type": "string",
                        "description": "descripcion del combo de productos",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "precio": {
                        "type": "number",
                        "description": "precio del combo",
                        "format": "double",
                        "example": 150000
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    },
                    "ventaFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de inicio de venta del combo",
                        "example": "26-04-2024"
                    },
                    "ventaFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de fin de venta del combo",
                        "example": "26-04-2024"
                    },
                    "consumoFechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de inicio de consumo del combo",
                        "example": "26-04-2024"
                    },
                    "consumoFechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de fin de consumo del combo",
                        "example": "26-04-2024"
                    },
                    "excepcionesDiasSemana": {
                        "maxItems": 2,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PExepcionesDiasSemana"
                        }
                    },
                    "productos": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductoUUIDCantidad"
                        }
                    },
                    "activacionDesactivacionAutomatica": {
                        "type": "boolean",
                        "description": "permitir activacion y desactivacion automatica del combo"
                    }
                }
            },
            "MessageResponseXProducto": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "mesaje de respuesta",
                        "example": "respuesta"
                    }
                }
            },
            "PatchComboProductosEstado": {
                "required": [
                    "estado",
                    "idCombo"
                ],
                "type": "object",
                "properties": {
                    "idCombo": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchCategoriaServicio": {
                "required": [
                    "idCategoriaServicio"
                ],
                "type": "object",
                "properties": {
                    "idCategoriaServicio": {
                        "type": "integer",
                        "description": "id de la categoria de servicios adicionales",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la categoria de servicios adicionales",
                        "example": "Servicios A"
                    }
                }
            },
            "PatchCategoriaServicioEstado": {
                "required": [
                    "estado",
                    "idCategoriaServicio"
                ],
                "type": "object",
                "properties": {
                    "idCategoriaServicio": {
                        "type": "integer",
                        "description": "id de la categoria de servicios adicionales",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la categoria de servicios adicionales",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchCategoriaEstatura": {
                "required": [
                    "idCategoriaEstatura"
                ],
                "type": "object",
                "properties": {
                    "idCategoriaEstatura": {
                        "type": "integer",
                        "description": "id de la categoria de estatura",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la categoria de estatura",
                        "example": "Categoria de estatura A"
                    },
                    "estaturaCmMin": {
                        "maximum": 220,
                        "minimum": 30,
                        "type": "integer",
                        "description": "estatura minima de la categoria en centimetros",
                        "format": "int32",
                        "example": 120
                    },
                    "estaturaCmMax": {
                        "maximum": 220,
                        "minimum": 30,
                        "type": "integer",
                        "description": "estatura maxima de la categoria en centimetros",
                        "format": "int32",
                        "example": 180
                    }
                }
            },
            "PatchCategoriaEstaturaEstado": {
                "required": [
                    "estado",
                    "idCategoriaEstatura"
                ],
                "type": "object",
                "properties": {
                    "idCategoriaEstatura": {
                        "type": "integer",
                        "description": "id de la categoria de estatura",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la categoria de estatura",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchCategoriaEdad": {
                "required": [
                    "idCategoriaEdad"
                ],
                "type": "object",
                "properties": {
                    "idCategoriaEdad": {
                        "type": "integer",
                        "description": "id de la categoria de edad",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la categoria de edad",
                        "example": "Categoria de edad A"
                    },
                    "edadInicial": {
                        "maximum": 120,
                        "minimum": 0,
                        "type": "integer",
                        "description": "edad inicial de la categoria",
                        "format": "int32",
                        "example": 8
                    },
                    "edadFinal": {
                        "maximum": 120,
                        "minimum": 0,
                        "type": "integer",
                        "description": "edad final de la categoria",
                        "format": "int32",
                        "example": 60
                    }
                }
            },
            "PatchCategoriaEdadEstado": {
                "required": [
                    "estado",
                    "idCategoriaEdad"
                ],
                "type": "object",
                "properties": {
                    "idCategoriaEdad": {
                        "type": "integer",
                        "description": "id de la categoria de edad",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la categoria de edad",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchCasillero": {
                "required": [
                    "hid",
                    "hikcentralPrivilegeGroupId",
                    "idCasillero",
                    "idUbicacion",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idCasillero": {
                        "type": "integer",
                        "description": "id del casillero",
                        "format": "int64",
                        "example": 1
                    },
                    "hid": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "id de hardware del casillero",
                        "example": "wkt1351"
                    },
                    "nombre": {
                        "maxLength": 30,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre del casillero",
                        "example": "Casillero C"
                    },
                    "hikcentralPrivilegeGroupId": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "id del grupo de privilegios de hikcentral",
                        "example": "1"
                    },
                    "idUbicacion": {
                        "type": "integer",
                        "description": "id de la ubicacion",
                        "format": "int64",
                        "example": 1
                    },
                    "prioridad": {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "prioridad del casillero",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "PatchCasilleroEstado": {
                "required": [
                    "estado",
                    "idCasillero"
                ],
                "type": "object",
                "properties": {
                    "idCasillero": {
                        "type": "integer",
                        "description": "id del casillero",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del casillero",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchCasilla": {
                "required": [
                    "hid",
                    "idCasilla",
                    "idCasillero",
                    "idTipoCasilla",
                    "nombre"
                ],
                "type": "object",
                "properties": {
                    "idCasilla": {
                        "type": "integer",
                        "description": "id de la casilla",
                        "format": "int64",
                        "example": 1
                    },
                    "idCasillero": {
                        "type": "integer",
                        "description": "id del casillero",
                        "format": "int64",
                        "example": 1
                    },
                    "hid": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "id de harwdare de la casilla",
                        "example": "1528-0"
                    },
                    "nombre": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "nombre de la casilla",
                        "example": "1"
                    },
                    "idTipoCasilla": {
                        "type": "integer",
                        "description": "id del tipo de casilla",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "PatchCasillaEstado": {
                "required": [
                    "estado",
                    "idCasilla"
                ],
                "type": "object",
                "properties": {
                    "idCasilla": {
                        "type": "integer",
                        "description": "id de la casilla",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la casilla",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchCanalEstado": {
                "required": [
                    "estado",
                    "idCanal"
                ],
                "type": "object",
                "properties": {
                    "idCanal": {
                        "type": "integer",
                        "description": "id del canal",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del canal",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PatchAtraccion": {
                "required": [
                    "idAtraccion"
                ],
                "type": "object",
                "properties": {
                    "idAtraccion": {
                        "type": "integer",
                        "description": "id de la atraccion",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "maxLength": 50,
                        "minLength": 3,
                        "type": "string",
                        "description": "nombre de la atraccion",
                        "example": "Atraccion A"
                    },
                    "condicionesAcceso": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "condiciones de acceso de la atraccion"
                        }
                    },
                    "biometricosHikvision": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "biometricos de la atraccion"
                        }
                    },
                    "imagen": {
                        "$ref": "#/components/schemas/PostImagen"
                    }
                }
            },
            "PatchAtraccionEstado": {
                "required": [
                    "idAtraccion"
                ],
                "type": "object",
                "properties": {
                    "idAtraccion": {
                        "type": "integer",
                        "description": "id de la atraccion",
                        "format": "int64",
                        "example": 1
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la atraccion",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO",
                            "MANTENIMIENTO"
                        ]
                    }
                }
            },
            "VMProductoC": {
                "type": "object",
                "properties": {
                    "producto": {
                        "$ref": "#/components/schemas/VentaMasivaProducto"
                    },
                    "cantidad": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "valor": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "VMReserva": {
                "type": "object",
                "properties": {
                    "reserva": {
                        "$ref": "#/components/schemas/Reserva"
                    },
                    "visitantes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VMReservaVisitantes"
                        }
                    },
                    "productos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VMProductoC"
                        }
                    }
                }
            },
            "VMReservaVisitantes": {
                "type": "object",
                "properties": {
                    "boleta": {
                        "$ref": "#/components/schemas/Boleta"
                    },
                    "visitante": {
                        "$ref": "#/components/schemas/Visitante"
                    },
                    "reservaCasilla": {
                        "$ref": "#/components/schemas/ReservaCasilla"
                    },
                    "reservaVehiculo": {
                        "$ref": "#/components/schemas/ReservaVehiculo"
                    },
                    "servicioAdicionales": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReservaServicioAdicional"
                        }
                    }
                }
            },
            "VentaMasivaProducto": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "idc": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "producto": {
                        "$ref": "#/components/schemas/Producto"
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor del producto",
                        "format": "double",
                        "example": 30000
                    },
                    "cantidadRestante": {
                        "type": "integer",
                        "description": "cantidad restante del producto",
                        "format": "int32",
                        "example": 100
                    }
                }
            },
            "PageReserva": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reserva"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageableObject": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unpaged": {
                        "type": "boolean"
                    },
                    "paged": {
                        "type": "boolean"
                    }
                }
            },
            "SortObject": {
                "type": "object",
                "properties": {
                    "empty": {
                        "type": "boolean"
                    },
                    "sorted": {
                        "type": "boolean"
                    },
                    "unsorted": {
                        "type": "boolean"
                    }
                }
            },
            "Account": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del usuario",
                        "format": "uuid",
                        "example": "23d4c71f-dc56-4d1e-b2b0-d64110d778ca"
                    },
                    "name": {
                        "type": "string",
                        "description": "nombre del usuario",
                        "example": "admin"
                    },
                    "email": {
                        "type": "string",
                        "description": "direccion de correo electronico del usuario",
                        "example": "example@email.com"
                    },
                    "role": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del usuario",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                },
                "description": "Cuenta a la que pertenece la empresa"
            },
            "AccountEmpresa": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "empresa": {
                        "$ref": "#/components/schemas/Empresa"
                    }
                }
            },
            "Empresa": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "razonSocial": {
                        "type": "string",
                        "description": "razon social de la empresa",
                        "example": "empresa"
                    },
                    "nit": {
                        "type": "string",
                        "description": "nit de la empresa",
                        "example": "999588662"
                    },
                    "cliente": {
                        "$ref": "#/components/schemas/Cliente"
                    },
                    "accounts": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountEmpresa"
                        }
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del cliente",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "Menu": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del menu",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del menu",
                        "example": "Menu A"
                    },
                    "menuInfo": {
                        "$ref": "#/components/schemas/MenuInfo"
                    },
                    "menuPadre": {
                        "$ref": "#/components/schemas/Menu"
                    },
                    "menus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Menu"
                        }
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del menu",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                },
                "description": "menu que se asigna al rol"
            },
            "MenuInfo": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "url del menu",
                        "example": "/menuA/index.html"
                    },
                    "imagenId": {
                        "type": "string",
                        "description": "id de la imagen del menu",
                        "format": "uuid",
                        "example": "151c0a1d-fccd-4ead-ae4b-f05a26d3779b"
                    }
                },
                "description": "informacion del menu"
            },
            "RegistroVentaMasiva": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "empresa": {
                        "$ref": "#/components/schemas/Empresa"
                    },
                    "tipoPaquete": {
                        "type": "string",
                        "enum": [
                            "CANTIDAD",
                            "DINERO"
                        ]
                    },
                    "tipoVenta": {
                        "type": "string",
                        "enum": [
                            "CORPORATIVA",
                            "CORTESIA"
                        ]
                    },
                    "dineroRestante": {
                        "type": "number",
                        "description": "dinero restante de la bolsa",
                        "format": "double",
                        "example": 30000000
                    },
                    "productos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VentaMasivaProducto"
                        }
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    },
                    "utilizado": {
                        "type": "boolean"
                    },
                    "modalidadPago": {
                        "type": "string",
                        "enum": [
                            "CREDITO",
                            "CONTADO"
                        ]
                    },
                    "estadoPago": {
                        "type": "string",
                        "enum": [
                            "PAGADO",
                            "PENDIENTE"
                        ]
                    },
                    "fechaLimitePago": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    }
                }
            },
            "Role": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del rol",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "nombre del rol",
                        "example": "ADMIN"
                    },
                    "urlInicio": {
                        "type": "string",
                        "description": "url del inicio del rol",
                        "example": "/index.html"
                    },
                    "menus": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleMenu"
                        }
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del rol",
                        "example": "ADMIN",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                },
                "description": "rol del usuario"
            },
            "RoleMenu": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "role": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "menu": {
                        "$ref": "#/components/schemas/Menu"
                    }
                },
                "description": "menus asociados con este rol"
            },
            "PageRegistroVentaMasiva": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegistroVentaMasiva"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageRecargaRVM": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecargaRVM"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "RecargaRVM": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "registroVentaMasiva": {
                        "$ref": "#/components/schemas/RegistroVentaMasiva"
                    },
                    "dineroInicial": {
                        "type": "number",
                        "format": "double"
                    },
                    "dineroRecarga": {
                        "type": "number",
                        "format": "double"
                    },
                    "dineroFinal": {
                        "type": "number",
                        "format": "double"
                    },
                    "productos": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecargaRVMProducto"
                        }
                    }
                }
            },
            "RecargaRVMProducto": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "idc": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "producto": {
                        "$ref": "#/components/schemas/Producto"
                    },
                    "cantidadInicial": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cantidadRecarga": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cantidadFinal": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "HistorialVentaMasiva": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "empresaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "empresaNombre": {
                        "type": "string"
                    },
                    "reservaFecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "registroVentaMasivaId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "registroVentaMasivaNombre": {
                        "type": "string"
                    },
                    "registroVentaMasivaTipoPaquete": {
                        "type": "string",
                        "enum": [
                            "CANTIDAD",
                            "DINERO"
                        ]
                    },
                    "registroVentaMasivaTipoVenta": {
                        "type": "string",
                        "enum": [
                            "CORPORATIVA",
                            "CORTESIA"
                        ]
                    },
                    "cantidadBoletas": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cantidadCasillas": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cantidadParqueaderos": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cantidadServiciosAdicionales": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dineroBoletas": {
                        "type": "number",
                        "format": "double"
                    },
                    "dineroCasillas": {
                        "type": "number",
                        "format": "double"
                    },
                    "dineroParqueaderos": {
                        "type": "number",
                        "format": "double"
                    },
                    "dineroServiciosAdicionales": {
                        "type": "number",
                        "format": "double"
                    },
                    "dineroTotal": {
                        "type": "number",
                        "format": "double"
                    },
                    "dineroRestante": {
                        "type": "number",
                        "format": "double"
                    },
                    "emailEnviado": {
                        "type": "string"
                    },
                    "detalles": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HistorialVentaMasivaDetalle"
                        }
                    }
                }
            },
            "HistorialVentaMasivaDetalle": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "tipoProducto": {
                        "type": "string",
                        "enum": [
                            "BOLETA",
                            "PARQUEADERO",
                            "CASILLA",
                            "SERVICIO_ADICIONAL",
                            "COMBO"
                        ]
                    },
                    "idProducto": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "idc": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombreProducto": {
                        "type": "string",
                        "description": "nombre del producto",
                        "example": "Producto A"
                    },
                    "cantidad": {
                        "type": "integer",
                        "description": "cantidad del producto",
                        "format": "int32",
                        "example": 100
                    },
                    "cantidadRestante": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "valorProducto": {
                        "type": "number",
                        "description": "valor del producto",
                        "format": "double",
                        "example": 30000
                    },
                    "valorTotal": {
                        "type": "number",
                        "description": "valor total de la venta del producto",
                        "format": "double",
                        "example": 120000
                    }
                }
            },
            "PageHistorialVentaMasiva": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HistorialVentaMasiva"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageRole": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageMenu": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Menu"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageAccount": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "MetodoPago": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del metodo de pago",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del metodo de pago",
                        "example": "Metodo de pago A"
                    },
                    "cuentaDestino": {
                        "type": "string",
                        "description": "cuenta destino a la cual se transfieren los pago realizados",
                        "example": "1111444499997777"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de metodo de pago",
                        "example": "ELECTRONICO",
                        "enum": [
                            "EFECTIVO",
                            "ELECTRONICO",
                            "DATAFONO"
                        ]
                    },
                    "requiereDatosAutorizacion": {
                        "type": "boolean",
                        "description": "el metodo de pago requiere datos de autorizacion (si/no)",
                        "example": false
                    },
                    "recepcionesPago": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetodoPagoRecepcionPago"
                        }
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del metodo de pago",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "MetodoPagoRecepcionPago": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "recepcionPago": {
                        "type": "string",
                        "enum": [
                            "TAQUILLA",
                            "PASARELA",
                            "PARTNER",
                            "PARQUEADERO"
                        ]
                    },
                    "metodoPago": {
                        "$ref": "#/components/schemas/MetodoPago"
                    }
                }
            },
            "Impresora": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "direccionIp": {
                        "type": "string"
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO",
                            "MANTENIMIENTO"
                        ]
                    },
                    "marca": {
                        "type": "string",
                        "enum": [
                            "ZEBRA",
                            "CHAINWAY",
                            "GAINSCHA",
                            "SAT"
                        ]
                    },
                    "referencia": {
                        "type": "string"
                    },
                    "serial": {
                        "type": "string"
                    },
                    "tipoImpresora": {
                        "type": "string",
                        "enum": [
                            "IMPRESORA_MANILLAS",
                            "IMPRESORA_BOLETAS"
                        ]
                    }
                },
                "description": "impresoras asignadas a una taquilla"
            },
            "Taquilla": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la taquilla",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la taquilla",
                        "example": "Taquilla 1"
                    },
                    "conteoRecibos": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la taquilla",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    },
                    "impresoras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Impresora"
                        }
                    }
                }
            },
            "PageTaquilla": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Taquilla"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "DenominacionDinero": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la denominacion de dinero",
                        "format": "int64",
                        "example": 1
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de denominacion de dinero",
                        "example": "MONEDA",
                        "enum": [
                            "BILLETE",
                            "MONEDA"
                        ]
                    },
                    "denominacion": {
                        "type": "number",
                        "description": "valor de la denominacion de dinero",
                        "format": "double",
                        "example": 5000
                    },
                    "divisa": {
                        "$ref": "#/components/schemas/Divisa"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la denominacion de dinero",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "DineroTaquilla": {
                "type": "object",
                "properties": {
                    "denominacion": {
                        "$ref": "#/components/schemas/DenominacionDinero"
                    },
                    "cantidadApertura": {
                        "type": "integer",
                        "description": "cantidad de la denominacion para apertura",
                        "format": "int32"
                    },
                    "cantidadCierre": {
                        "type": "integer",
                        "description": "cantidad de la denominacion para cierre",
                        "format": "int32"
                    }
                },
                "description": "registro de dinero de la taquilla"
            },
            "Divisa": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la divisa",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la divisa",
                        "example": "Peso colombiano"
                    },
                    "abreviatura": {
                        "type": "string",
                        "description": "abreviatura de la divisa",
                        "example": "COP"
                    }
                }
            },
            "RTArqueoMetodoPago": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "metodoPago": {
                        "$ref": "#/components/schemas/MetodoPago"
                    },
                    "saldoFinalIngresado": {
                        "type": "number",
                        "format": "double"
                    },
                    "saldoFinalCalculado": {
                        "type": "number",
                        "format": "double"
                    },
                    "diferenciasCaja": {
                        "type": "number",
                        "format": "double"
                    },
                    "cantidadTransacciones": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "registro de arqueo por metodos de pago"
            },
            "RegistroTaquilla": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del registro de taquilla",
                        "format": "uuid",
                        "example": "61ed8508-f38c-4581-94bf-63acf1bb1bd3"
                    },
                    "taquilla": {
                        "$ref": "#/components/schemas/Taquilla"
                    },
                    "usuario": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "fechaApertura": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de apertura de la taquilla",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fechaCierre": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha de cierre de la taquilla",
                        "example": "26-04-2024 16:33:02"
                    },
                    "conteoRecibosApertura": {
                        "type": "integer",
                        "description": "conteo de recibos al momento de apertura",
                        "format": "int64",
                        "example": 1
                    },
                    "conteoRecibosCierre": {
                        "type": "integer",
                        "description": "conteo de recibos al momento del cierre",
                        "format": "int64",
                        "example": 10
                    },
                    "registroDinero": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DineroTaquilla"
                        }
                    },
                    "saldoInicialCaja": {
                        "type": "number",
                        "description": "saldo inicial en efectivo de la taquilla",
                        "format": "double",
                        "example": 220000
                    },
                    "diferenciasCaja": {
                        "type": "number",
                        "description": "diferencias de caja totales",
                        "format": "double",
                        "example": 0
                    },
                    "observaciones": {
                        "type": "string",
                        "description": "observaciones del registro de taquilla",
                        "example": "Se realizo el cierre de la taquilla normalmente"
                    },
                    "arqueoMetodoPago": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RTArqueoMetodoPago"
                        }
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del registro de taquilla",
                        "example": "ABIERTO",
                        "enum": [
                            "CERRADO",
                            "ABIERTO"
                        ]
                    }
                }
            },
            "PageRegistroTaquilla": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegistroTaquilla"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageMetodoPago": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetodoPago"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "EventoTaquilla": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "taquilla": {
                        "$ref": "#/components/schemas/Taquilla"
                    },
                    "cliente": {
                        "$ref": "#/components/schemas/Cliente"
                    },
                    "reservaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "ventaId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "numeroRecibo": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "tipoEvento": {
                        "type": "string",
                        "enum": [
                            "CREACION_RESERVA",
                            "ACTUALIZACION_RESERVA",
                            "PAGO_RESERVA",
                            "IMPRESION_RECIBO",
                            "ANULACION_RESERVA"
                        ]
                    },
                    "resultadoEvento": {
                        "type": "string",
                        "enum": [
                            "EXITOSO",
                            "FALLIDO"
                        ]
                    },
                    "mensajeError": {
                        "type": "string"
                    }
                }
            },
            "PageEventoTaquilla": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventoTaquilla"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageDivisa": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Divisa"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageDenominacionDinero": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DenominacionDinero"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "TaxDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "percentage": {
                        "type": "number",
                        "format": "double"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "SellerDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "username": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "identification": {
                        "type": "string"
                    }
                }
            },
            "AccountGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "AdditionalFields": {
                "type": "object",
                "properties": {
                    "barcode": {
                        "type": "string"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "tariff": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    }
                }
            },
            "Metadata": {
                "type": "object",
                "properties": {
                    "created": {
                        "type": "string"
                    },
                    "last_updated": {
                        "type": "string"
                    }
                }
            },
            "Price": {
                "type": "object",
                "properties": {
                    "currency_code": {
                        "type": "string"
                    },
                    "price_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceList"
                        }
                    }
                }
            },
            "PriceList": {
                "type": "object",
                "properties": {
                    "position": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ProductDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "account_group": {
                        "$ref": "#/components/schemas/AccountGroup"
                    },
                    "type": {
                        "type": "string"
                    },
                    "stock_control": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "tax_classification": {
                        "type": "string"
                    },
                    "tax_included": {
                        "type": "boolean"
                    },
                    "tax_consumption_value": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "taxes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tax"
                        }
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Price"
                        }
                    },
                    "unit": {
                        "$ref": "#/components/schemas/Unit"
                    },
                    "unit_label": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "additional_fields": {
                        "$ref": "#/components/schemas/AdditionalFields"
                    },
                    "available_quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "warehouses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Warehouse"
                        }
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/Metadata"
                    }
                }
            },
            "Tax": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "percentage": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Unit": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Warehouse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PaymentTypeDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "due_date": {
                        "type": "boolean"
                    }
                }
            },
            "InventoryDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "DocumentDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "consecutive": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "decimals": {
                        "type": "boolean"
                    },
                    "reteiva": {
                        "type": "boolean"
                    },
                    "reteica": {
                        "type": "boolean"
                    },
                    "seller_by_item": {
                        "type": "boolean"
                    },
                    "cost_center": {
                        "type": "boolean"
                    },
                    "cost_center_mandatory": {
                        "type": "boolean"
                    },
                    "automatic_number": {
                        "type": "boolean"
                    },
                    "discount_type": {
                        "type": "string"
                    },
                    "advance_payment": {
                        "type": "boolean"
                    },
                    "self_withholding": {
                        "type": "boolean"
                    },
                    "self_withholding_limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "electronic_type": {
                        "type": "string"
                    }
                }
            },
            "ConfiguracionSiigo": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "documentId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sellerId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "inventoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sendDian": {
                        "type": "boolean"
                    },
                    "sendEmail": {
                        "type": "boolean"
                    },
                    "sendSiigo": {
                        "type": "boolean"
                    },
                    "ivaTaxId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxSellValuePost": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentTypesConfig": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfiguracionSiigoMetodoPago"
                        }
                    }
                }
            },
            "ConfiguracionSiigoMetodoPago": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "metodoPago": {
                        "$ref": "#/components/schemas/MetodoPago"
                    },
                    "paymentTypeId": {
                        "type": "string"
                    }
                }
            },
            "SVRUbicacion": {
                "type": "object",
                "properties": {
                    "ubicacionRfid": {
                        "$ref": "#/components/schemas/UbicacionRfid"
                    },
                    "fechaHoraInicial": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fechaHoraFinal": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "ultimaUbicacion": {
                        "type": "boolean"
                    }
                }
            },
            "SeguimientoVisitanteRfid": {
                "type": "object",
                "properties": {
                    "visitante": {
                        "$ref": "#/components/schemas/Visitante"
                    },
                    "ubicaciones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SVRUbicacion"
                        }
                    }
                }
            },
            "UbicacionRfid": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rfidLocId": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lng": {
                        "type": "number",
                        "format": "double"
                    },
                    "aforoMax": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "GetReadersConnect": {
                "type": "object",
                "properties": {
                    "ipReaders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipReaderDesconectados": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "totalConectados": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalDesconectados": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "EntityRfid": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "type": "string"
                    },
                    "creadoPor": {
                        "type": "string"
                    },
                    "fechaModificado": {
                        "type": "string"
                    },
                    "modificadoPor": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "estado": {
                        "type": "string"
                    }
                }
            },
            "PageResponseEntityRfid": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityRfid"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/Sort"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/Pageable"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "Pageable": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/Sort"
                    },
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paged": {
                        "type": "boolean"
                    },
                    "unpaged": {
                        "type": "boolean"
                    }
                }
            },
            "Sort": {
                "type": "object",
                "properties": {
                    "empty": {
                        "type": "boolean"
                    },
                    "sorted": {
                        "type": "boolean"
                    },
                    "unsorted": {
                        "type": "boolean"
                    }
                }
            },
            "PageUbicacionRfidDto": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UbicacionRfidDto"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "UbicacionRfidDto": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rfidLocId": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lng": {
                        "type": "number",
                        "format": "double"
                    },
                    "aforoMax": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    },
                    "idZona": {
                        "type": "string"
                    },
                    "nombreZona": {
                        "type": "string"
                    }
                }
            },
            "AforoUbicacionRfid": {
                "type": "object",
                "properties": {
                    "ubicacionRfid": {
                        "$ref": "#/components/schemas/UbicacionRfid"
                    },
                    "aforoActual": {
                        "type": "integer",
                        "description": "Aforo actual de la ubicación",
                        "format": "int32",
                        "example": 50
                    }
                }
            },
            "AforoUbicacionesRfid": {
                "type": "object",
                "properties": {
                    "datos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AforoUbicacionRfid"
                        }
                    },
                    "fechaHoraDatos": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha y hora de la información",
                        "example": "26-04-2024 16:33:02"
                    }
                }
            },
            "RVFCanalReserva": {
                "type": "object",
                "properties": {
                    "canalNombre": {
                        "type": "string"
                    },
                    "canalId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cantidad": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cantidadIngresados": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "RVFTipoBoleta": {
                "type": "object",
                "properties": {
                    "tipoBoletaNombre": {
                        "type": "string"
                    },
                    "tipoBoletaId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cantidad": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "RVisitantesFecha": {
                "type": "object",
                "properties": {
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "reservados": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "registrados": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ingresados": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cumplimientoRegistrados": {
                        "type": "number"
                    },
                    "cumplimientoIngresados": {
                        "type": "number"
                    },
                    "detallesTipoBoleta": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RVFTipoBoleta"
                        }
                    },
                    "detallesCanalReserva": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RVFCanalReserva"
                        }
                    }
                }
            },
            "ReporteVisitantesFechas": {
                "type": "object",
                "properties": {
                    "empresaNombre": {
                        "type": "string"
                    },
                    "fechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "fechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "reporte": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RVisitantesFecha"
                        }
                    }
                }
            },
            "PageVisitante": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Visitante"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageReporteBoletasVMEntry": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReporteBoletasVMEntry"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ReporteBoletasVMEntry": {
                "type": "object",
                "properties": {
                    "visitante": {
                        "$ref": "#/components/schemas/Visitante"
                    },
                    "boleta": {
                        "$ref": "#/components/schemas/Producto"
                    },
                    "reserva": {
                        "$ref": "#/components/schemas/Reserva"
                    },
                    "bolsa": {
                        "$ref": "#/components/schemas/RegistroVentaMasiva"
                    },
                    "empresa": {
                        "$ref": "#/components/schemas/Empresa"
                    },
                    "usuario": {
                        "$ref": "#/components/schemas/Account"
                    }
                }
            },
            "RMetodoPagoValorTotal": {
                "type": "object",
                "properties": {
                    "metodoPago": {
                        "$ref": "#/components/schemas/MetodoPago"
                    },
                    "valorTotal": {
                        "type": "number",
                        "description": "valor acomulado del metodo de pago",
                        "format": "double",
                        "example": 100000
                    }
                }
            },
            "ReporteTaquillaValorTotalPorMetodoPago": {
                "type": "object",
                "properties": {
                    "registroTaquilla": {
                        "$ref": "#/components/schemas/RegistroTaquilla"
                    },
                    "reporte": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RMetodoPagoValorTotal"
                        }
                    }
                }
            },
            "EntryReservaClienteBC": {
                "type": "object",
                "properties": {
                    "cliente": {
                        "$ref": "#/components/schemas/Cliente"
                    },
                    "reservaFecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha de la reserva",
                        "example": "26-04-2024"
                    },
                    "boletas": {
                        "$ref": "#/components/schemas/EntryTipoBoletaCantidad"
                    }
                },
                "description": "Reservas realizadas en el rango de fechas"
            },
            "EntryTipoBoletaCantidad": {
                "type": "object",
                "properties": {
                    "tipoBoleta": {
                        "type": "string",
                        "description": "tipo de boleta",
                        "example": "Boleta Adulto"
                    },
                    "cantidad": {
                        "type": "integer",
                        "description": "cantidad de boletas",
                        "format": "int32",
                        "example": 10
                    }
                },
                "description": "cantidad de boletas reservadas por tipo de boleta para esta reserva"
            },
            "ReporteReservaBoleta": {
                "type": "object",
                "properties": {
                    "boletasTotales": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntryTipoBoletaCantidad"
                        }
                    },
                    "reservas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntryReservaClienteBC"
                        }
                    }
                }
            },
            "EntryReporteProductosVentas": {
                "type": "object",
                "properties": {
                    "nombreProducto": {
                        "type": "string"
                    },
                    "tipoProducto": {
                        "type": "string"
                    },
                    "cantidad": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalRecaudado": {
                        "type": "number",
                        "format": "double"
                    },
                    "porcentaje": {
                        "type": "number"
                    }
                }
            },
            "ReporteProductosVentas": {
                "type": "object",
                "properties": {
                    "fechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "fechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "totalRecaudado": {
                        "type": "number",
                        "format": "double"
                    },
                    "reporte": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntryReporteProductosVentas"
                        }
                    }
                }
            },
            "PVTEntryReporteProductosVentas": {
                "type": "object",
                "properties": {
                    "nombreProducto": {
                        "type": "string"
                    },
                    "tipoProducto": {
                        "type": "string"
                    },
                    "cantidad": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalRecaudado": {
                        "type": "number",
                        "format": "double"
                    },
                    "porcentaje": {
                        "type": "number"
                    }
                }
            },
            "ReporteProductosVentasTaquilla": {
                "type": "object",
                "properties": {
                    "taquillaId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "taquillaNombre": {
                        "type": "string"
                    },
                    "totalRecaudado": {
                        "type": "number",
                        "format": "double"
                    },
                    "reporte": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PVTEntryReporteProductosVentas"
                        }
                    }
                }
            },
            "PageReporteParqueaderoVentasEntry": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReporteParqueaderoVentasEntry"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "RPVCanal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombre": {
                        "type": "string"
                    }
                }
            },
            "RPVMetodoPago": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombre": {
                        "type": "string"
                    }
                }
            },
            "RPVTipoVehiculo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombre": {
                        "type": "string"
                    }
                }
            },
            "ReporteParqueaderoVentasEntry": {
                "type": "object",
                "properties": {
                    "fechaHora": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "usuario": {
                        "type": "string"
                    },
                    "vehiculoPlaca": {
                        "type": "string"
                    },
                    "vehiculoTipo": {
                        "$ref": "#/components/schemas/RPVTipoVehiculo"
                    },
                    "productoId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "productoNombre": {
                        "type": "string"
                    },
                    "valor": {
                        "type": "number",
                        "format": "double"
                    },
                    "canal": {
                        "$ref": "#/components/schemas/RPVCanal"
                    },
                    "metodoPago": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RPVMetodoPago"
                        }
                    },
                    "clienteNombre": {
                        "type": "string"
                    },
                    "clienteTipoIdentificacion": {
                        "type": "string",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "clienteNumeroIdentificacion": {
                        "type": "string"
                    }
                }
            },
            "RPIVZona": {
                "type": "object",
                "properties": {
                    "zonaParqueaderoId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "zonaParqueaderoNombre": {
                        "type": "string"
                    },
                    "cantidadVentas": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cantidadIngresados": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "valorVentas": {
                        "type": "number",
                        "format": "double"
                    },
                    "valorIngresados": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "ReporteParqueaderoIngresadosVentas": {
                "type": "object",
                "properties": {
                    "cantidadTotalVentas": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cantidadTotalIngresados": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "valorTotalVentas": {
                        "type": "number",
                        "format": "double"
                    },
                    "valorTotalIngresados": {
                        "type": "number",
                        "format": "double"
                    },
                    "zonasParqueadero": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RPIVZona"
                        }
                    }
                }
            },
            "EntryMetodoPago": {
                "type": "object",
                "properties": {
                    "metodoPagoId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "metodoPagoNombre": {
                        "type": "string"
                    },
                    "totalRecaudado": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "EntryReporteGeneralVentas": {
                "type": "object",
                "properties": {
                    "canalId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "canalNombre": {
                        "type": "string"
                    },
                    "recaudadoMetodoPago": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntryMetodoPago"
                        }
                    },
                    "totalRecaudado": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "ReporteGeneralVentas": {
                "type": "object",
                "properties": {
                    "fechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "fechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "totalRecaudado": {
                        "type": "number",
                        "format": "double"
                    },
                    "cantidadFacturas": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cantidadFacturasEnviadas": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cantidadFacturasSinEnviar": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "reporte": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntryReporteGeneralVentas"
                        }
                    }
                }
            },
            "EntryReporteGeneralTaquilla": {
                "type": "object",
                "properties": {
                    "taquillaNombre": {
                        "type": "string"
                    },
                    "cantidadTransacciones": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalRecaudado": {
                        "type": "number",
                        "format": "double"
                    },
                    "recaudadoMetodoPago": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntryMetodoPago"
                        }
                    }
                }
            },
            "ReporteGeneralTaquilla": {
                "type": "object",
                "properties": {
                    "fechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "fechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "totalRecaudado": {
                        "type": "number",
                        "format": "double"
                    },
                    "cantidadTransacciones": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "reporte": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntryReporteGeneralTaquilla"
                        }
                    }
                }
            },
            "EntryReporteCierreTaquilla": {
                "type": "object",
                "properties": {
                    "fechaApertura": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fechaCierre": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "registroTaquillaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accountIdResponsableTaquilla": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accountNombreResponsableTaquilla": {
                        "type": "string"
                    },
                    "totalRecaudado": {
                        "type": "number",
                        "format": "double"
                    },
                    "numeroReciboApertura": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "numeroReciboCierre": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cantidadTransacciones": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "saldoInicial": {
                        "type": "number",
                        "format": "double"
                    },
                    "saldoFinal": {
                        "type": "number",
                        "format": "double"
                    },
                    "diferenciasCaja": {
                        "type": "number",
                        "format": "double"
                    },
                    "recaudadoMetodoPago": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RCTEntryMetodoPago"
                        }
                    }
                }
            },
            "RCTEntryMetodoPago": {
                "type": "object",
                "properties": {
                    "metodoPago": {
                        "type": "string"
                    },
                    "totalRecaudado": {
                        "type": "number",
                        "format": "double"
                    },
                    "cantidadTransacciones": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ReporteCierreTaquilla": {
                "type": "object",
                "properties": {
                    "fechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "fechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "taquillaId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "taquillaNombre": {
                        "type": "string"
                    },
                    "reporte": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntryReporteCierreTaquilla"
                        }
                    }
                }
            },
            "RVCTipoCasilla": {
                "type": "object",
                "properties": {
                    "tipoCasillaId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "tipoCasillaNombre": {
                        "type": "string"
                    },
                    "cantidadVendidos": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cantidadRegistrados": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cantidadUsados": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "valorVendidos": {
                        "type": "number",
                        "format": "double"
                    },
                    "valorRegistrados": {
                        "type": "number",
                        "format": "double"
                    },
                    "valorUsados": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "ReporteCasillaVentas": {
                "type": "object",
                "properties": {
                    "totalVendidos": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalRegistrados": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalUsados": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "valorTotalVendidos": {
                        "type": "number",
                        "format": "double"
                    },
                    "valorTotalRegistrados": {
                        "type": "number",
                        "format": "double"
                    },
                    "valorTotalUsados": {
                        "type": "number",
                        "format": "double"
                    },
                    "tiposCasilla": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RVCTipoCasilla"
                        }
                    }
                }
            },
            "RCanalValorTotalDescuento": {
                "type": "object",
                "properties": {
                    "nombreDescuento": {
                        "type": "string"
                    },
                    "idDescuento": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "valorTotal": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "RCanalValorTotalMetodoPago": {
                "type": "object",
                "properties": {
                    "idMetodoPago": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombreMetodoPago": {
                        "type": "string"
                    },
                    "valorTotal": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "RCanalVisitantesIngresadosDescuento": {
                "type": "object",
                "properties": {
                    "nombreDescuento": {
                        "type": "string"
                    },
                    "idDescuento": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "visitantesIngresados": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "RCanalVisitantesIngresadosGenero": {
                "type": "object",
                "properties": {
                    "genero": {
                        "type": "string",
                        "enum": [
                            "M",
                            "F",
                            "O"
                        ]
                    },
                    "visitantesIngresados": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "RCanalVisitantesIngresadosTipoBoleta": {
                "type": "object",
                "properties": {
                    "idTipoBoleta": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "idProducto": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "nombreProducto": {
                        "type": "string"
                    },
                    "visitantesIngresados": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ReporteCanal": {
                "type": "object",
                "properties": {
                    "idCanal": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombreCanal": {
                        "type": "string"
                    },
                    "reporteValorTotalDescuentos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RCanalValorTotalDescuento"
                        }
                    },
                    "reporteVisitantesIngresadosDescuentos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RCanalVisitantesIngresadosDescuento"
                        }
                    },
                    "reporteVisitantesIngresadosGenero": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RCanalVisitantesIngresadosGenero"
                        }
                    },
                    "reporteVisitantesIngresadosTipoBoleta": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RCanalVisitantesIngresadosTipoBoleta"
                        }
                    },
                    "reporteValorTotalMetodosPago": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RCanalValorTotalMetodoPago"
                        }
                    },
                    "reporteParticipacionIngresos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReporteCanalParticipacionIngresos"
                        }
                    },
                    "reporteParticipacionVisitantes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReporteCanalParticipacionVisitantes"
                        }
                    }
                }
            },
            "ReporteCanalParticipacionIngresos": {
                "type": "object",
                "properties": {
                    "idCanal": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombreCanal": {
                        "type": "string"
                    },
                    "valorTotal": {
                        "type": "number",
                        "format": "double"
                    },
                    "porcentaje": {
                        "type": "number"
                    }
                }
            },
            "ReporteCanalParticipacionVisitantes": {
                "type": "object",
                "properties": {
                    "idCanal": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombreCanal": {
                        "type": "string"
                    },
                    "cantidad": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "porcentaje": {
                        "type": "number"
                    }
                }
            },
            "RIngresoParqueaderoDia": {
                "type": "object",
                "properties": {
                    "zonaParqueaderoId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ingresadosZona": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "RIngresosParqueaderoDia": {
                "type": "object",
                "properties": {
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "ingresadosDia": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "zonasParqueadero": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RIngresoParqueaderoDia"
                        }
                    }
                }
            },
            "ReporteIngresoParqueadero": {
                "type": "object",
                "properties": {
                    "fechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "fechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "zonasParqueadero": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "ingresadosTotal": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "reporte": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RIngresosParqueaderoDia"
                        }
                    }
                }
            },
            "RCompraTipoProductoDia": {
                "type": "object",
                "properties": {
                    "tipoProducto": {
                        "type": "string",
                        "enum": [
                            "BOLETA",
                            "PARQUEADERO",
                            "CASILLA",
                            "SERVICIO_ADICIONAL",
                            "COMBO"
                        ]
                    },
                    "cantidadProducto": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "valorProducto": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "RCompraTiposProductoDia": {
                "type": "object",
                "properties": {
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "cantidadDia": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "valorDia": {
                        "type": "number",
                        "format": "double"
                    },
                    "tiposProducto": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RCompraTipoProductoDia"
                        }
                    }
                }
            },
            "ReporteCompraTipoProducto": {
                "type": "object",
                "properties": {
                    "fechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "fechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "cantidadTotal": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "valorTotal": {
                        "type": "number",
                        "format": "double"
                    },
                    "tiposProducto": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "BOLETA",
                                "PARQUEADERO",
                                "CASILLA",
                                "SERVICIO_ADICIONAL",
                                "COMBO"
                            ]
                        }
                    },
                    "reporte": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RCompraTiposProductoDia"
                        }
                    }
                }
            },
            "CambioEfectivo": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del cambio de efectivo",
                        "format": "int64",
                        "example": 1
                    },
                    "efectivo": {
                        "type": "number",
                        "description": "efectivo entregado por el cliente",
                        "format": "double",
                        "example": 100000
                    },
                    "cambio": {
                        "type": "number",
                        "description": "cambio entregado al cliente",
                        "format": "double",
                        "example": 50000
                    }
                }
            },
            "DetalleVentaProducto": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "clienteTipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "clienteNumeroIdentificacion": {
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111222333"
                    },
                    "clienteNombre": {
                        "type": "string",
                        "description": "nombre completo del cliente",
                        "example": "Nombre 1 Nombre 2 Apellido 1 Apellido 2"
                    },
                    "reservaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "productoId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "productoCodigo": {
                        "type": "string"
                    },
                    "productoTipo": {
                        "type": "string",
                        "enum": [
                            "BOLETA",
                            "PARQUEADERO",
                            "CASILLA",
                            "SERVICIO_ADICIONAL",
                            "COMBO"
                        ]
                    },
                    "productoNombre": {
                        "type": "string"
                    },
                    "productoValor": {
                        "type": "number",
                        "format": "double"
                    },
                    "descuentoValor": {
                        "type": "number",
                        "format": "double"
                    },
                    "valor": {
                        "type": "number",
                        "format": "double"
                    },
                    "boletaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "reservaCasillaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "reservaVehiculoId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "espacioParqueaderoId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "reservaServicioAdicionalId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "reservaComboId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "descuento": {
                        "$ref": "#/components/schemas/Descuento"
                    },
                    "estadoPago": {
                        "type": "string",
                        "enum": [
                            "APROBADO",
                            "PENDIENTE",
                            "ANULADO"
                        ]
                    },
                    "reservaFecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    }
                },
                "description": "detalles de productos vendidos en la venta"
            },
            "PageVenta": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Venta"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ReciboTaquilla": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "numero": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ultimoRegistroImpresion": {
                        "$ref": "#/components/schemas/RegistroImpresion"
                    }
                },
                "description": "recibo de taquilla asociado a esta venta"
            },
            "RegistroImpresion": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "tipoImpresion": {
                        "type": "string",
                        "description": "tipo de impresion",
                        "example": "MANILLA",
                        "enum": [
                            "BOLETA_PERSONAL",
                            "BOLETA_GENERAL",
                            "MANILLA"
                        ]
                    },
                    "impresora": {
                        "$ref": "#/components/schemas/Impresora"
                    },
                    "identificador": {
                        "type": "string"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de impresion",
                        "example": "EXITOSO",
                        "enum": [
                            "EXITOSO",
                            "FALLIDO"
                        ]
                    },
                    "mensajeError": {
                        "type": "string",
                        "description": "mesaje de error de una impresion fallida",
                        "example": "Error"
                    }
                }
            },
            "TransaccionPago": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "recepcionPago": {
                        "type": "string",
                        "enum": [
                            "TAQUILLA",
                            "PASARELA",
                            "PARTNER",
                            "PARQUEADERO"
                        ]
                    },
                    "metodoPago": {
                        "$ref": "#/components/schemas/MetodoPago"
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor del pago",
                        "format": "double",
                        "example": 50000
                    },
                    "transaccionTaquilla": {
                        "$ref": "#/components/schemas/TransaccionTaquilla"
                    },
                    "transaccionPasarela": {
                        "$ref": "#/components/schemas/TransaccionPasarela"
                    },
                    "transaccionParqueadero": {
                        "$ref": "#/components/schemas/TransaccionParqueadero"
                    },
                    "transaccionPartner": {
                        "$ref": "#/components/schemas/TransaccionPartner"
                    }
                },
                "description": "detalles de transacciones de pago en la venta"
            },
            "TransaccionParqueadero": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del pago",
                        "format": "uuid",
                        "example": "b169240e-56b1-4e38-8c50-279c8a04e5aa"
                    },
                    "metodoPago": {
                        "$ref": "#/components/schemas/MetodoPago"
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor del pago",
                        "format": "double",
                        "example": 50000
                    },
                    "numeroAutorizacion": {
                        "type": "string",
                        "description": "numero de autorizacion del pago",
                        "example": "00032325"
                    },
                    "ultimosDigitos": {
                        "type": "string",
                        "description": "ultimos digitos del metodo de pago",
                        "example": "4488"
                    },
                    "zonaParqueaderoId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "placa": {
                        "type": "string"
                    },
                    "fechaParqueo": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "cambioEfectivo": {
                        "$ref": "#/components/schemas/CambioEfectivo"
                    }
                }
            },
            "TransaccionPartner": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del pago",
                        "format": "uuid",
                        "example": "b169240e-56b1-4e38-8c50-279c8a04e5aa"
                    },
                    "partnerId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "reservaId": {
                        "type": "string",
                        "description": "id de la reserva asociada a esta transaccion",
                        "format": "uuid",
                        "example": "755864a6-0c1f-4f32-9c54-7fb38f9dd9b1"
                    },
                    "tipoIdentificacionCliente": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacionCliente": {
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor de la transaccion",
                        "format": "double",
                        "example": 50000
                    },
                    "barcode": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "TransaccionPasarela": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id de la transaccion de pago",
                        "example": "1c8356b0e24442b2acc579cf1ae4d8145"
                    },
                    "reservaId": {
                        "type": "string",
                        "description": "id de la reserva asociada a esta transaccion",
                        "format": "uuid",
                        "example": "755864a6-0c1f-4f32-9c54-7fb38f9dd9b1"
                    },
                    "tipoIdentificacionCliente": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacionCliente": {
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111111111"
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor de la transaccion",
                        "format": "double",
                        "example": 50000
                    },
                    "origen": {
                        "type": "string",
                        "description": "origen de la transaccion",
                        "example": "Origen X"
                    },
                    "ip": {
                        "type": "string",
                        "description": "direccion ip del cliente asociado con esta transaccion",
                        "example": "192.168.1.1"
                    },
                    "metodoPago": {
                        "$ref": "#/components/schemas/MetodoPago"
                    },
                    "fechaHoraInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha y hora de inicio de la transaccion",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fechaHoraFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha y hora de finalizacion de la transaccion",
                        "example": "26-04-2024 16:33:02"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la transaccion",
                        "example": "EN_PROCESO",
                        "enum": [
                            "APROBADO",
                            "EN_PROCESO",
                            "CANCELADO",
                            "RECHAZADO"
                        ]
                    }
                }
            },
            "TransaccionTaquilla": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del pago",
                        "format": "uuid",
                        "example": "b169240e-56b1-4e38-8c50-279c8a04e5aa"
                    },
                    "reservaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "metodoPago": {
                        "$ref": "#/components/schemas/MetodoPago"
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor del pago",
                        "format": "double",
                        "example": 50000
                    },
                    "numeroAutorizacion": {
                        "type": "string",
                        "description": "numero de autorizacion del pago",
                        "example": "00032325"
                    },
                    "ultimosDigitos": {
                        "type": "string",
                        "description": "ultimos digitos del metodo de pago",
                        "example": "4488"
                    },
                    "registroTaquillaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "cambioEfectivo": {
                        "$ref": "#/components/schemas/CambioEfectivo"
                    },
                    "reciboTaquillaNumero": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "taquillaId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "taquillaNombre": {
                        "type": "string"
                    }
                }
            },
            "Venta": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la venta",
                        "format": "int64",
                        "example": 1
                    },
                    "reservaId": {
                        "type": "string",
                        "description": "id de la reserva asociada a esta venta",
                        "format": "uuid",
                        "example": "e4b3b3b3-4b3b-4b3b-4b3b-4b3b4b3b4b3b"
                    },
                    "cliente": {
                        "$ref": "#/components/schemas/Cliente"
                    },
                    "registroTaquillaId": {
                        "type": "string",
                        "description": "id del registro de taquilla asociado a esta venta",
                        "format": "uuid",
                        "example": "b3b3b3b3-4b3b-4b3b-4b3b-4b3b4b3b4b3b"
                    },
                    "reciboTaquilla": {
                        "$ref": "#/components/schemas/ReciboTaquilla"
                    },
                    "recepcionPago": {
                        "type": "string",
                        "description": "modo de recepcion de pago de la venta",
                        "enum": [
                            "TAQUILLA",
                            "PASARELA",
                            "PARTNER",
                            "PARQUEADERO"
                        ]
                    },
                    "detallesVentaProductos": {
                        "$ref": "#/components/schemas/DetalleVentaProducto"
                    },
                    "transaccionesPago": {
                        "$ref": "#/components/schemas/TransaccionPago"
                    },
                    "valorSinDescuento": {
                        "type": "number",
                        "description": "valor total de la venta sin descuento",
                        "format": "double",
                        "example": 100000
                    },
                    "valorPagoTotal": {
                        "type": "number",
                        "description": "valor total pagado en la venta",
                        "format": "double",
                        "example": 100000
                    },
                    "canal": {
                        "$ref": "#/components/schemas/Canal"
                    },
                    "reservaFecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha la reserva asociada a esta venta",
                        "example": "26-04-2024"
                    },
                    "taquilla": {
                        "$ref": "#/components/schemas/Taquilla"
                    },
                    "facturaVentaNumero": {
                        "type": "integer",
                        "description": "numero de la factura de venta asociada a esta venta",
                        "format": "int64",
                        "example": 1
                    },
                    "reservaDescuento": {
                        "$ref": "#/components/schemas/Descuento"
                    }
                }
            },
            "PageTransaccionPago": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransaccionPago"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageReporteProgramado": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReporteProgramado"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ReporteProgramado": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "tipoPeriodicidad": {
                        "type": "string",
                        "enum": [
                            "MENSUAL",
                            "SEMANAL",
                            "DIARIO"
                        ]
                    },
                    "hora": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "diaSemana": {
                        "type": "string",
                        "enum": [
                            "LUNES",
                            "MARTES",
                            "MIERCOLES",
                            "JUEVES",
                            "VIERNES",
                            "SABADO",
                            "DOMINGO"
                        ]
                    },
                    "diaMes": {
                        "maximum": 28,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "correos": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PageDetalleVentaProducto": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetalleVentaProducto"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageReporteEntry": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReporteEntry"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ReporteConsumoBoletas": {
                "type": "object",
                "properties": {
                    "fechaInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "fechaFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "reporte": {
                        "$ref": "#/components/schemas/PageReporteEntry"
                    },
                    "totalVisitantesIngresados": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalProductos": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalIngresosPorConsumo": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "ReporteEntry": {
                "type": "object",
                "properties": {
                    "productoNombre": {
                        "type": "string"
                    },
                    "valorPago": {
                        "type": "number",
                        "format": "double"
                    },
                    "fechaPago": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "clienteTipoIdentificacion": {
                        "type": "string",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "clienteNumeroIdentificacion": {
                        "type": "string"
                    },
                    "clienteNombre": {
                        "type": "string"
                    },
                    "reservaFecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "canalNombre": {
                        "type": "string"
                    },
                    "visitantes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReporteEntryVisitante"
                        }
                    }
                }
            },
            "ReporteEntryVisitante": {
                "type": "object",
                "properties": {
                    "visitanteNombre": {
                        "type": "string"
                    },
                    "visitanteNumeroIdentificacion": {
                        "type": "string"
                    },
                    "visitanteTipoIdentificacion": {
                        "type": "string",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "visitanteFechaIngreso": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    }
                }
            },
            "ReporteAtraccionVisitantesCount": {
                "type": "object",
                "properties": {
                    "genero": {
                        "type": "string",
                        "enum": [
                            "M",
                            "F",
                            "O"
                        ]
                    },
                    "tipoBoleta": {
                        "type": "string"
                    },
                    "cantidad": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PageTransaccionPasarela": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransaccionPasarela"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "Partner": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "description": "id del partner",
                        "format": "uuid",
                        "example": "e3617a05-6e65-433f-b0db-c2a8747f3314"
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del partner",
                        "example": "Partner 1"
                    },
                    "boletasMax": {
                        "type": "integer",
                        "description": "numero de boletas maximo que puede vender el partner",
                        "format": "int64"
                    },
                    "boletasRest": {
                        "type": "integer",
                        "description": "numero de boletas restantes que puede vender el partner",
                        "format": "int64"
                    },
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "canal": {
                        "$ref": "#/components/schemas/Canal"
                    },
                    "tarifas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartnerTarifa"
                        }
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "INACTIVO",
                            "ACTIVO"
                        ]
                    }
                }
            },
            "PartnerTarifa": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "id de la tarifa del partner",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la tarifa del partner",
                        "example": "TARIFA 1"
                    },
                    "tipoBoleta": {
                        "$ref": "#/components/schemas/TipoBoleta"
                    }
                },
                "description": "tarifas de boletas asociadas a este partner"
            },
            "PageTipoVehiculo": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TipoVehiculo"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageTipoServicioParqueadero": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TipoServicioParqueadero"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageTipoCasilla": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TipoCasilla"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageTipoBoleta": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TipoBoleta"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PagePartner": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Partner"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "TipoPlacaResponse": {
                "type": "object",
                "properties": {
                    "tipoPlaca": {
                        "type": "string",
                        "description": "tipo de placa identificado",
                        "example": "PARTICULAR_O_SERVICIO_PUBLICO",
                        "enum": [
                            "PARTICULAR_O_SERVICIO_PUBLICO",
                            "DIPLOMATICO",
                            "CARGA",
                            "REMOLQUE",
                            "MOTOCICLETA",
                            "UNKNOWN"
                        ]
                    }
                }
            },
            "DisponibilidadTipoServicioParqueadero": {
                "type": "object",
                "properties": {
                    "tipoServicio": {
                        "$ref": "#/components/schemas/TipoServicioParqueadero"
                    },
                    "reservados": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "disponibles": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PageZonaParqueadero": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ZonaParqueadero"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "TipoNovedadParqueadero": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del tipo de novedad",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del tipo de novedad",
                        "example": "Tipo de novedad A"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del tipo de novedad",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PageTipoNovedadParqueadero": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TipoNovedadParqueadero"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageRegistroVehiculo": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegistroVehiculo"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "MotivoLiberacionVehiculo": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "RegistroLiberacionVehiculo": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "registroVehiculo": {
                        "$ref": "#/components/schemas/RegistroVehiculo"
                    },
                    "motivo": {
                        "$ref": "#/components/schemas/MotivoLiberacionVehiculo"
                    },
                    "observaciones": {
                        "type": "string"
                    }
                }
            },
            "PageRegistroLiberacionVehiculo": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegistroLiberacionVehiculo"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "NovedadActividad": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de actividad",
                        "format": "int64",
                        "example": 1
                    },
                    "descripcion": {
                        "type": "string",
                        "description": "descripcion de la actividad",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "evidencia": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NovedadActividadEvidencia"
                        }
                    },
                    "fechaHoraInicio": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha y hora de inicio de la actividad",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fechaHoraFin": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha y hora de finalizacion de la actividad",
                        "example": "26-04-2024 16:33:02"
                    },
                    "novedad": {
                        "$ref": "#/components/schemas/NovedadParqueadero"
                    }
                },
                "description": "actividades relacionadas con la novedad"
            },
            "NovedadActividadEvidencia": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la evidencia",
                        "format": "int64",
                        "example": 1
                    },
                    "actividad": {
                        "$ref": "#/components/schemas/NovedadActividad"
                    },
                    "imagenId": {
                        "type": "string",
                        "description": "id de la imagen de evidencia",
                        "format": "uuid",
                        "example": "558c2450-9875-4427-a35f-6319ac07e0f1"
                    }
                },
                "description": "evidencia relacionada con la actividad"
            },
            "NovedadParqueadero": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la novedad",
                        "format": "int64",
                        "example": 1
                    },
                    "tipo": {
                        "$ref": "#/components/schemas/TipoNovedadParqueadero"
                    },
                    "descripcion": {
                        "type": "string",
                        "description": "descripcion de la novedad",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                    },
                    "fechaHoraReporte": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "fecha y hora de reporte de la novedad",
                        "example": "26-04-2024 16:33:02"
                    },
                    "placa": {
                        "type": "string",
                        "description": "placa del vehiculo implicado en la novedad",
                        "example": "AAA111"
                    },
                    "reserva": {
                        "$ref": "#/components/schemas/Reserva"
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion de quien reporta",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "type": "string",
                        "description": "numero de identificacion de quien reporta",
                        "example": "1111111111"
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de quien reporta",
                        "example": "Nombre 1"
                    },
                    "propietario": {
                        "type": "boolean",
                        "description": "quien reporta es el propietario (si/no)",
                        "example": false
                    },
                    "telefono": {
                        "type": "string",
                        "description": "telefono de quien reporta",
                        "example": "3005557777"
                    },
                    "email": {
                        "type": "string",
                        "description": "direccion de correo electronico de quien reporta",
                        "example": "example@email.com"
                    },
                    "actividades": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NovedadActividad"
                        }
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la novedad",
                        "example": "ABIERTO",
                        "enum": [
                            "ABIERTO",
                            "EN_PROCESO",
                            "CERRADO",
                            "ANULADO"
                        ]
                    }
                }
            },
            "PageNovedadParqueadero": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NovedadParqueadero"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageNovedadActividad": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NovedadActividad"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageMotivoLiberacionVehiculo": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MotivoLiberacionVehiculo"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "Aforo": {
                "type": "object",
                "properties": {
                    "zonaParqueadero": {
                        "$ref": "#/components/schemas/ZonaParqueadero"
                    },
                    "ocupados": {
                        "type": "integer",
                        "description": "espacios ocupados en la zona de parqueadero",
                        "format": "int32",
                        "example": 1
                    },
                    "ocupadosSinReserva": {
                        "type": "integer",
                        "description": "espacios ocupados sin reserva en la zona de parqueadero",
                        "format": "int32",
                        "example": 1
                    },
                    "ocupadosConReserva": {
                        "type": "integer",
                        "description": "espacios ocupados con reserva en la zona de parqueadero",
                        "format": "int32",
                        "example": 1
                    },
                    "reservados": {
                        "type": "integer",
                        "description": "espacios reservados en la zona de parqueadero",
                        "format": "int32",
                        "example": 1
                    },
                    "desocupados": {
                        "type": "integer",
                        "description": "espacios que no han sido ocupados aun dentro del parqueadero (pueden estar reservados)",
                        "format": "int32",
                        "example": 1
                    },
                    "disponibles": {
                        "type": "integer",
                        "description": "espacios disponibles para vehiculos nuevos",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "PageResponseRegistroTurnoConsolidado": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResponseRegistroTurnoConsolidado"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ResponseRegistroTurnoConsolidado": {
                "type": "object",
                "properties": {
                    "nombreOperario": {
                        "type": "string"
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "type": "string"
                    },
                    "fechasAsistencia": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    "tiempoTotal": {
                        "type": "string"
                    }
                }
            },
            "ResponseRegistroTurno": {
                "type": "object",
                "properties": {
                    "fechaInicioTurno": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "fechaFinTurno": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "ACTIVO",
                            "FINALIZADO"
                        ]
                    },
                    "idOperarioParqueadero": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "type": "string"
                    },
                    "nombreOperador": {
                        "type": "string"
                    },
                    "tiempoPermanencia": {
                        "type": "string"
                    }
                }
            },
            "PageResponseRegistroTurno": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResponseRegistroTurno"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "OperadorParqueadero": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del operador",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "type": "string",
                        "description": "numero de identificacion del operador",
                        "example": "1111222333"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "telefono": {
                        "type": "string"
                    },
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PageOperadorParqueadero": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperadorParqueadero"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "Box": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Locker": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "boxList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Box"
                        }
                    }
                }
            },
            "LectorRfid": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "marca": {
                        "type": "string"
                    },
                    "referencia": {
                        "type": "string"
                    },
                    "serial": {
                        "type": "string"
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO",
                            "MANTENIMIENTO"
                        ]
                    },
                    "casillero": {
                        "$ref": "#/components/schemas/Casillero"
                    },
                    "hid": {
                        "type": "string"
                    }
                }
            },
            "PageLectorRfid": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LectorRfid"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ManillaLogo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "fechaInicial": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "imagenId": {
                        "type": "string",
                        "description": "id del logo para manilla",
                        "format": "uuid",
                        "example": "644176ac-41f6-48ac-a4ef-3db5eb09fbf9"
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    },
                    "fechaFinal": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    }
                }
            },
            "PageManillaLogo": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ManillaLogo"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageImpresora": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Impresora"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "Person": {
                "type": "object",
                "properties": {
                    "personId": {
                        "type": "string"
                    },
                    "personCode": {
                        "type": "string"
                    },
                    "personName": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orgIndexCode": {
                        "type": "string"
                    },
                    "personPhoto": {
                        "$ref": "#/components/schemas/PersonPhoto"
                    },
                    "phoneNo": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "beginTime": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "endTime": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "personFamilyName": {
                        "type": "string"
                    },
                    "personGivenName": {
                        "type": "string"
                    }
                }
            },
            "PersonPhoto": {
                "type": "object",
                "properties": {
                    "picUri": {
                        "type": "string"
                    }
                }
            },
            "Vehicle": {
                "type": "object",
                "properties": {
                    "vehicleId": {
                        "type": "string"
                    },
                    "plateNo": {
                        "type": "string"
                    },
                    "personName": {
                        "type": "string"
                    },
                    "personFamilyName": {
                        "type": "string"
                    },
                    "personGivenName": {
                        "type": "string"
                    },
                    "phoneNo": {
                        "type": "string"
                    },
                    "vehicleColor": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "vehicleGroupIndexCode": {
                        "type": "string"
                    },
                    "effectiveDate": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "expiredDate": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    }
                }
            },
            "VehicleGroup": {
                "type": "object",
                "properties": {
                    "vehicleGroupIndexCode": {
                        "type": "string"
                    },
                    "vehicleGroupName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "PrivilegeGroup": {
                "type": "object",
                "properties": {
                    "privilegeGroupId": {
                        "type": "string"
                    },
                    "privilegeGroupName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "ParkingLot": {
                "type": "object",
                "properties": {
                    "parkingLotIndexCode": {
                        "type": "string"
                    },
                    "parkingLotName": {
                        "type": "string"
                    },
                    "parentParkingLotIndexCode": {
                        "type": "string"
                    },
                    "totalSpaceNum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "freeSpaceNum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalPermanentSpaceNum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "freePermanentSpaceNum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxParkingTime": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "orgIndexCode": {
                        "type": "string"
                    },
                    "orgName": {
                        "type": "string"
                    },
                    "parentOrgIndexCode": {
                        "type": "string"
                    }
                }
            },
            "Door": {
                "type": "object",
                "properties": {
                    "doorIndexCode": {
                        "type": "string"
                    },
                    "acsDevIndexCode": {
                        "type": "string"
                    },
                    "regionIndexCode": {
                        "type": "string"
                    },
                    "doorNo": {
                        "type": "string"
                    },
                    "doorName": {
                        "type": "string"
                    },
                    "doorState": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Camera": {
                "type": "object",
                "properties": {
                    "cameraIndexCode": {
                        "type": "string"
                    },
                    "cameraName": {
                        "type": "string"
                    },
                    "capabilitySet": {
                        "type": "string"
                    },
                    "encodeDevIndexCode": {
                        "type": "string"
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "recordLocation": {
                        "type": "string"
                    },
                    "regionIndexCode": {
                        "type": "string"
                    },
                    "siteIndexCode": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "HikcentralAccessControlEvent": {
                "type": "object",
                "properties": {
                    "eventId": {
                        "type": "string"
                    },
                    "srcIndex": {
                        "type": "string"
                    },
                    "srcType": {
                        "type": "string"
                    },
                    "srcName": {
                        "type": "string"
                    },
                    "eventType": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "happenTime": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "cardNo": {
                        "type": "string"
                    },
                    "personId": {
                        "type": "string"
                    },
                    "personCode": {
                        "type": "string"
                    },
                    "checkInAndOutType": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "picUri": {
                        "type": "string"
                    },
                    "temperatureData": {
                        "type": "string"
                    },
                    "temperatureStatus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wearMaskStatus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "readerIndexCode": {
                        "type": "string"
                    },
                    "readerName": {
                        "type": "string"
                    }
                }
            },
            "PageHikcentralAccessControlEvent": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HikcentralAccessControlEvent"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "HikcentralANPREvent": {
                "type": "object",
                "properties": {
                    "eventId": {
                        "type": "string"
                    },
                    "srcIndex": {
                        "type": "string"
                    },
                    "srcType": {
                        "type": "string"
                    },
                    "srcName": {
                        "type": "string"
                    },
                    "eventType": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "happenTime": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "plateNo": {
                        "type": "string"
                    },
                    "vehiclePicUri": {
                        "type": "string"
                    },
                    "vehicleGroupIndexCode": {
                        "type": "string"
                    }
                }
            },
            "PageHikcentralANPREvent": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HikcentralANPREvent"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageCamaraPlacasHikvision": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CamaraPlacasHikvision"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "BiometricoHikvision": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id del biometrico",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre del biometrico",
                        "example": "Biometrico A"
                    },
                    "tipo": {
                        "type": "string",
                        "description": "tipo de uso del biometrico",
                        "enum": [
                            "ENTRADA",
                            "CASILLERO",
                            "ATRACCION",
                            "VENDING_MACHINE",
                            "INDEFINIDO"
                        ]
                    },
                    "doorIndexCode": {
                        "type": "string",
                        "description": "id del biometrico de hikcentral (door)",
                        "example": "1"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado del biometrico",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PageBiometricoHikvision": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BiometricoHikvision"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageEmpresa": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Empresa"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "FacturaVenta": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "numero": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "fechaFactura": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "fechaVencimiento": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "recepcionPago": {
                        "type": "string",
                        "enum": [
                            "TAQUILLA",
                            "PASARELA",
                            "PARTNER",
                            "PARQUEADERO"
                        ]
                    },
                    "taquillaId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nombreTaquilla": {
                        "type": "string"
                    },
                    "fechaReserva": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "reservaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "canalReserva": {
                        "type": "string"
                    },
                    "tipoCliente": {
                        "type": "string",
                        "enum": [
                            "PERSONA",
                            "EMPRESA"
                        ]
                    },
                    "tipoIdentificacionCliente": {
                        "type": "string",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacionCliente": {
                        "type": "string"
                    },
                    "nombreCliente": {
                        "type": "string"
                    },
                    "apellidoCliente": {
                        "type": "string"
                    },
                    "telefonoCliente": {
                        "type": "string"
                    },
                    "emailCliente": {
                        "type": "string"
                    },
                    "direccionCliente": {
                        "type": "string"
                    },
                    "ciudadCliente": {
                        "$ref": "#/components/schemas/Ciudad"
                    },
                    "requiereFactura": {
                        "type": "boolean"
                    },
                    "productos": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacturaVentaProducto"
                        }
                    },
                    "pagos": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacturaVentaPago"
                        }
                    },
                    "valorPagoTotal": {
                        "type": "number",
                        "format": "double"
                    },
                    "facturacionElectronica": {
                        "$ref": "#/components/schemas/FacturacionElectronica"
                    }
                }
            },
            "FacturaVentaPago": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "metodoPagoId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "metodoPagoNombre": {
                        "type": "string"
                    },
                    "valor": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "FacturaVentaProducto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "tipo": {
                        "type": "string",
                        "enum": [
                            "BOLETA",
                            "PARQUEADERO",
                            "CASILLA",
                            "SERVICIO_ADICIONAL",
                            "COMBO"
                        ]
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "codigo": {
                        "type": "string"
                    },
                    "cantidad": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "valor": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "FacturacionElectronica": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "jsonRespuestaFactura": {
                        "type": "string"
                    },
                    "fechaEnviado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "example": "26-04-2024 16:33:02"
                    },
                    "ultimoError": {
                        "type": "string"
                    },
                    "enviadoSiigo": {
                        "type": "boolean"
                    },
                    "intentosEnvio": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PageFacturaVenta": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacturaVenta"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ConfiguracionGeneralEmpresa": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "nit": {
                        "type": "string",
                        "description": "nit de la empresa",
                        "example": "999588662"
                    },
                    "logoImagenId": {
                        "type": "string",
                        "description": "id de la imagen del logo de la empresa",
                        "format": "uuid",
                        "example": "ccb1f981-c7ab-4a5c-9d90-e2902a7ca67e"
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la empresa",
                        "example": "Empresa A"
                    },
                    "telefono": {
                        "type": "string",
                        "description": "telefono de la empresa",
                        "example": "420222999"
                    },
                    "direccion": {
                        "type": "string",
                        "description": "direccion de la empresa",
                        "example": "Calle 90 Carrera 25 #90-88"
                    },
                    "url": {
                        "type": "string",
                        "description": "url de la empresa",
                        "example": "www.example-empresa.com"
                    },
                    "razonSocial": {
                        "type": "string",
                        "description": "razon social de la empresa",
                        "example": "Razon social A"
                    },
                    "terminosCondiciones": {
                        "type": "string",
                        "description": "terminos y condiciones de la empresa",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                    },
                    "resolucionDian": {
                        "type": "string",
                        "description": "resolucion de la dian",
                        "example": "00009988"
                    },
                    "decimales": {
                        "type": "integer",
                        "description": "presicion de decimales a mostrar",
                        "format": "int32",
                        "example": 2
                    },
                    "formatoMoneda": {
                        "type": "string",
                        "description": "simbolo de la moneda a utilizar",
                        "example": "$"
                    },
                    "edadAdulto": {
                        "type": "integer",
                        "description": "edad en la que una persona se considera adulto",
                        "format": "int32",
                        "example": 18
                    },
                    "accountAdmin": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "emailRemitente": {
                        "type": "string",
                        "description": "direccion de correo electronico que se usara para la emision de correos",
                        "example": "example@email.com"
                    }
                }
            },
            "VerificacionCodigoDescuento": {
                "type": "object",
                "properties": {
                    "descuento": {
                        "$ref": "#/components/schemas/Descuento"
                    },
                    "valido": {
                        "type": "boolean",
                        "description": "el codigo de descuento es valido (si/no)",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "description": "mesaje de respuesta",
                        "example": "respuesta"
                    }
                }
            },
            "DisponibilidadTipoCasilla": {
                "type": "object",
                "properties": {
                    "tipoCasilla": {
                        "$ref": "#/components/schemas/TipoCasilla"
                    },
                    "reservados": {
                        "type": "integer",
                        "description": "cantidad de casillas reservadas",
                        "format": "int32",
                        "example": 10
                    },
                    "disponibles": {
                        "type": "integer",
                        "description": "cantidad de casillas disponibles",
                        "format": "int32",
                        "example": 10
                    }
                }
            },
            "DisponibilidadSemana": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "lunes": {
                        "type": "boolean",
                        "description": "el dia lunes se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "martes": {
                        "type": "boolean",
                        "description": "el dia martes se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "miercoles": {
                        "type": "boolean",
                        "description": "el dia miercoles se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "jueves": {
                        "type": "boolean",
                        "description": "el dia jueves se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "viernes": {
                        "type": "boolean",
                        "description": "el dia viernes se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "sabado": {
                        "type": "boolean",
                        "description": "el dia sabado se ofrece disponibilidad para reservas (si/no)",
                        "example": true
                    },
                    "domingo": {
                        "type": "boolean",
                        "description": "el dia domingo se ofrece disponibilidad para reservas (si/no)",
                        "example": false
                    }
                }
            },
            "DiaSinDisponibilidad": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "description": "fecha del dia sin disponibilidad",
                        "example": "26-04-2024"
                    }
                }
            },
            "ConsultarValorReservaResponse": {
                "type": "object",
                "properties": {
                    "productos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VRProducto"
                        }
                    },
                    "valorBruto": {
                        "type": "number",
                        "description": "Valor total los productos comprados en la reserva (sin descuentos)",
                        "format": "double",
                        "example": 150000
                    },
                    "valorDescuento": {
                        "type": "number",
                        "description": "Valor total de descuentos",
                        "format": "double",
                        "example": 20000
                    },
                    "valorNeto": {
                        "type": "number",
                        "description": "Valor total de los productos comprados en la reserva (con descuentos aplicados)",
                        "format": "double",
                        "example": 130000
                    },
                    "valorPendiente": {
                        "type": "number",
                        "description": "Valor pendiente por pagar",
                        "format": "double",
                        "example": 40000
                    },
                    "valorPagado": {
                        "type": "number",
                        "description": "Valor pagado hasta el momento",
                        "format": "double",
                        "example": 90000
                    }
                }
            },
            "VRProducto": {
                "type": "object",
                "properties": {
                    "productoId": {
                        "type": "string",
                        "description": "id del producto",
                        "format": "uuid",
                        "example": "49dc554e-b29b-4c66-b275-78951a72ba86"
                    },
                    "productoTipo": {
                        "type": "string",
                        "description": "tipo de producto",
                        "example": "BOLETA",
                        "enum": [
                            "BOLETA",
                            "PARQUEADERO",
                            "CASILLA",
                            "SERVICIO_ADICIONAL",
                            "COMBO"
                        ]
                    },
                    "productoNombre": {
                        "type": "string",
                        "description": "nombre del producto",
                        "example": "Boleta X"
                    },
                    "productoValor": {
                        "type": "number",
                        "description": "valor del producto",
                        "format": "double",
                        "example": 15000
                    },
                    "descuentoValor": {
                        "type": "number",
                        "description": "valor del descuento",
                        "format": "double",
                        "example": 15000
                    },
                    "descuento": {
                        "$ref": "#/components/schemas/Descuento"
                    },
                    "valor": {
                        "type": "number",
                        "description": "valor a pagar",
                        "format": "double",
                        "example": 15000
                    },
                    "boletaId": {
                        "type": "string",
                        "description": "id de la boleta",
                        "format": "uuid",
                        "example": "49dc554e-b29b-4c66-b275-78951a72ba86"
                    },
                    "reservaCasillaId": {
                        "type": "string",
                        "description": "id de reserva de casilla",
                        "format": "uuid",
                        "example": "49dc554e-b29b-4c66-b275-78951a72ba86"
                    },
                    "reservaVehiculoId": {
                        "type": "string",
                        "description": "id de la reserva de parqueadero",
                        "format": "uuid",
                        "example": "49dc554e-b29b-4c66-b275-78951a72ba86"
                    },
                    "reservaServicioAdicionalId": {
                        "type": "string",
                        "description": "id de la reserva de servicio adicional",
                        "format": "uuid",
                        "example": "49dc554e-b29b-4c66-b275-78951a72ba86"
                    },
                    "estadoPago": {
                        "type": "string",
                        "description": "estado de pago del producto",
                        "example": "APROBADO",
                        "enum": [
                            "APROBADO",
                            "PENDIENTE",
                            "ANULADO"
                        ]
                    }
                },
                "description": "Lista de productos vendidos en la reserva"
            },
            "CondicionGeneral": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la condicion general",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la condicion general",
                        "example": "Condicion general A"
                    },
                    "imagenId": {
                        "type": "string",
                        "description": "id de la imagen de la condicion general",
                        "format": "uuid",
                        "example": "58e143c7-a3ca-4189-8f6a-48b53b8adb5b"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la condicion general",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "CondicionAcceso": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la condicion de acceso",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la condicion de acceso",
                        "example": "Condicion de acceso A"
                    },
                    "imagenId": {
                        "type": "string",
                        "description": "id de la imagen de la condicion de acceso",
                        "format": "uuid",
                        "example": "2e8bf017-6d1c-4b1b-a82f-839c9bdb25d1"
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la condicion de acceso",
                        "example": "ACTIVO",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "PageUbicacionCasillero": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UbicacionCasillero"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageServicioAdicional": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServicioAdicional"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageReservaVehiculo": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReservaVehiculo"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageReservaCasilla": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReservaCasilla"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageProducto": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Producto"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "DisponibilidadBoleta": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "fecha": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
                        "type": "string",
                        "example": "26-04-2024"
                    },
                    "aforoMax": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "aforoGeneral": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "disponibilidadCanales": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DisponibilidadBoletaCanal"
                        }
                    }
                }
            },
            "DisponibilidadBoletaCanal": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "canal": {
                        "$ref": "#/components/schemas/Canal"
                    },
                    "aforoCanal": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "disponibilidadBoleta": {
                        "$ref": "#/components/schemas/DisponibilidadBoleta"
                    }
                }
            },
            "PageDisponibilidadBoleta": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DisponibilidadBoleta"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageDescuento": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Descuento"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "DescuentoClienteEspecifico": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "descuentoId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "tipoIdentificacion": {
                        "type": "string",
                        "description": "tipo de identificacion del cliente",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "NIT",
                            "CE",
                            "PAS",
                            "TI",
                            "RC",
                            "DNI"
                        ]
                    },
                    "numeroIdentificacion": {
                        "type": "string",
                        "description": "numero de identificacion del cliente",
                        "example": "1111222333"
                    }
                }
            },
            "PageDescuentoClienteEspecifico": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DescuentoClienteEspecifico"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageCondicionAcceso": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CondicionAcceso"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageCategoriaServicio": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriaServicio"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageCategoriaEstatura": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriaEstatura"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageCategoriaEdad": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriaEdad"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageCasillero": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Casillero"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageCasilla": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Casilla"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageCanal": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Canal"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageBoleta": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Boleta"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "Atraccion": {
                "type": "object",
                "properties": {
                    "fechaCreado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de creacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "creadoPor": {
                        "type": "string",
                        "description": "Usuario que creo el registro",
                        "example": "admin"
                    },
                    "fechaModificado": {
                        "pattern": "^\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}$",
                        "type": "string",
                        "description": "Fecha de la ultima modificacion del registro",
                        "example": "26-04-2024 16:33:02"
                    },
                    "modificadoPor": {
                        "type": "string",
                        "description": "Usuario que realizo la ultima modificacion del registro",
                        "example": "admin"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id de la atraccion",
                        "format": "int64",
                        "example": 1
                    },
                    "nombre": {
                        "type": "string",
                        "description": "nombre de la atraccion",
                        "example": "Atraccion A"
                    },
                    "condicionesAcceso": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CondicionAcceso"
                        }
                    },
                    "imagenId": {
                        "type": "string",
                        "description": "id de la imagen de la atraccion",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "biometricosHikvision": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BiometricoHikvision"
                        }
                    },
                    "estado": {
                        "type": "string",
                        "description": "estado de la atraccion",
                        "enum": [
                            "ACTIVO",
                            "INACTIVO",
                            "MANTENIMIENTO"
                        ]
                    }
                }
            },
            "PageAtraccion": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Atraccion"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ACCasilla": {
                "type": "object",
                "properties": {
                    "casilla": {
                        "$ref": "#/components/schemas/Casilla"
                    },
                    "estado": {
                        "type": "string",
                        "enum": [
                            "DISPONIBLE",
                            "RESERVADO",
                            "INACTIVO"
                        ]
                    }
                }
            },
            "ACCasillero": {
                "type": "object",
                "properties": {
                    "casillero": {
                        "$ref": "#/components/schemas/Casillero"
                    },
                    "casillas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ACCasilla"
                        }
                    }
                }
            },
            "ACUbicacion": {
                "type": "object",
                "properties": {
                    "ubicacion": {
                        "$ref": "#/components/schemas/UbicacionCasillero"
                    },
                    "casilleros": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ACCasillero"
                        }
                    }
                }
            },
            "AforoCasillas": {
                "type": "object",
                "properties": {
                    "ubicaciones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ACUbicacion"
                        }
                    }
                }
            },
            "AforoBoleta": {
                "type": "object",
                "properties": {
                    "canal": {
                        "$ref": "#/components/schemas/Canal"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "reservados": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "disponibles": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "porcentaje": {
                        "type": "number"
                    }
                }
            },
            "DelRoleMenu": {
                "required": [
                    "idRole",
                    "menus"
                ],
                "type": "object",
                "properties": {
                    "idRole": {
                        "type": "integer",
                        "description": "id del rol",
                        "format": "int64",
                        "example": 1
                    },
                    "menus": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "description": "id los menus",
                            "format": "int64",
                            "example": 1
                        }
                    }
                }
            },
            "DelMenu": {
                "required": [
                    "idMenu"
                ],
                "type": "object",
                "properties": {
                    "idMenu": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "DelTaquillaImpresora": {
                "required": [
                    "idImpresora",
                    "idTaquilla"
                ],
                "type": "object",
                "properties": {
                    "idTaquilla": {
                        "type": "integer",
                        "description": "id de la taquilla",
                        "format": "int64",
                        "example": 1
                    },
                    "idImpresora": {
                        "type": "integer",
                        "description": "id de la impresora",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "DelReservaTaquilla": {
                "required": [
                    "idReserva",
                    "idTaquilla"
                ],
                "type": "object",
                "properties": {
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "1e9a3afa-210e-4ae7-8544-50a4e26478cd"
                    },
                    "idTaquilla": {
                        "type": "integer",
                        "description": "id de la taquilla en la cual se realiza la reserva",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "DelImpresoraBuffer": {
                "required": [
                    "idImpresora"
                ],
                "type": "object",
                "properties": {
                    "idImpresora": {
                        "type": "integer",
                        "description": "Id de impresora",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "DelHCVisitante": {
                "required": [
                    "idVisitante"
                ],
                "type": "object",
                "properties": {
                    "idVisitante": {
                        "type": "string",
                        "description": "id del visitante",
                        "format": "uuid",
                        "example": "7d275c4d-f35b-4117-9189-59a9d9ccbe84"
                    }
                }
            },
            "DelHCVehicle": {
                "required": [
                    "vehicleId"
                ],
                "type": "object",
                "properties": {
                    "vehicleId": {
                        "type": "string",
                        "description": "id del vehiculo de hikcentral",
                        "example": "1"
                    }
                }
            },
            "DelReserva": {
                "required": [
                    "idReserva"
                ],
                "type": "object",
                "properties": {
                    "idReserva": {
                        "type": "string",
                        "description": "id de la reserva",
                        "format": "uuid",
                        "example": "1e9a3afa-210e-4ae7-8544-50a4e26478cd"
                    }
                }
            },
            "DelDiaSinDisponibilidad": {
                "required": [
                    "fechas"
                ],
                "type": "object",
                "properties": {
                    "fechas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PDSDFecha"
                        }
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "description": "hora y fecha de ocurrencia",
                        "example": "05-12-2022 13:16:08"
                    },
                    "status": {
                        "type": "integer",
                        "description": "codigo de estado",
                        "format": "int32",
                        "example": 500
                    },
                    "error": {
                        "type": "string",
                        "description": "mensaje de estado",
                        "example": "Internal Server Error"
                    },
                    "path": {
                        "type": "string",
                        "description": "direccion en que ocurre el error",
                        "example": "/api/etc"
                    },
                    "exception": {
                        "type": "string",
                        "description": "tipo de excepcion",
                        "example": "HttpMessageNotReadableException"
                    },
                    "message": {
                        "type": "string",
                        "description": "mensaje de error",
                        "example": "Unrecognized field etc"
                    }
                }
            }
        },
        "securitySchemes": {
            "JWT_Token": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "links": {},
        "callbacks": {}
    },
    "security": []
}